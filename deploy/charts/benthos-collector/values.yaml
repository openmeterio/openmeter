# Default values for benthos-collector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  # -- Name of the image repository to pull the container image from.
  repository: ghcr.io/openmeterio/benthos-collector

  # -- [Image pull policy](https://kubernetes.io/docs/concepts/containers/images/#updating-images) for updating already existing images on a node.
  pullPolicy: IfNotPresent

  # -- Image tag override for the default value (chart appVersion).
  tag: ""

openmeter:
  # -- OpenMeter API URL
  url: https://openmeter.cloud

  # -- OpenMeter token
  token: ""

# -- Benthos configuration
# Takes precedence over `configFile` and `preset`.
config: {}

# -- Use an existing config file mounted via `volumes` and `volumeMounts`.
# Takes precedence over `preset`.
configFile: ""

# -- Use one of the predefined presets.
# Note: Read the documentation for the specific preset (example) to learn about configuration via env vars.
preset: ""

# -- Service configuration
service:
  # -- Specifies whether a service should be created
  enabled: false
  # -- Service type
  type: ClusterIP
  # -- Service port
  port: 80
  # -- Annotations to add to the service
  annotations: {}

# -- Reference to one or more secrets to be used when [pulling images](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#create-a-pod-that-uses-your-secret) (from private registries).
imagePullSecrets: []

# -- A name in place of the chart name for `app:` labels.
nameOverride: ""

# -- A name to substitute for the full names of resources.
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created.
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account.
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

leaderElection:
  # -- Specifies whether leader election should be enabled.
  enabled: false
  lease:
    # -- Duration of the lease.
    duration: 10s
    # -- Renew deadline of the lease.
    renewDeadline: 5s
    # -- Retry period of the lease.
    retryPeriod: 2s

rbac:
  # -- Specifies whether RBAC resources should be created.
  # If disabled, the operator is responsible for creating the necessary resources based on the templates.
  create: true

# -- Annotations to be added to pods.
podAnnotations: {}

# -- Labels to be added to pods.
podLabels: {}

# -- Pod [security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod).
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context) for details.
podSecurityContext:
  {}
  # fsGroup: 2000

# -- Container [security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container).
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-1) for details.
securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Container resource [requests and limits](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources) for details.
# @default -- No requests or limits.
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Configuration for the PersistentVolumeClaim, which controls the storage for the Collector.
storage:
  # -- Enable a PersistentVolumeClaim for the StatefulSet.
  enabled: false
  # -- Annotations to add to the PersistentVolumeClaim.
  annotations: {}
  # -- Labels to add to the PersistentVolumeClaim.
  labels: {}
  # -- Selector for the PersistentVolumeClaim.
  selector: {}
  # -- Access modes for the PersistentVolumeClaim.
  accessModes:
    - ReadWriteOnce
  # -- Size of the PersistentVolumeClaim.
  size: 1Gi
  # -- Mount path for the PersistentVolumeClaim.
  mountPath: /data
  # -- Storage class for the PersistentVolumeClaim.
  storageClass: ""

# -- Additional volumes on the output State definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volumeMounts on the output State definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# -- Additional environment variables mounted from [secrets](https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables) or [config maps](https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#configure-all-key-value-pairs-in-a-configmap-as-container-environment-variables).
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#environment-variables) for details.
envFrom: []

# -- Additional environment variables passed directly to containers.
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#environment-variables) for details.
env: {}

# -- [Node selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) configuration.
nodeSelector: {}

# -- [Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) for node taints.
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling) for details.
tolerations: []

# -- [Affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) configuration.
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling) for details.
affinity: {}

# -- List of CA Root certificates to inject into pods at runtime.
# See [values.yaml](values.yaml)
caRootCertificates: {}
#  ca: |
#    -----BEGIN CERTIFICATE-----
#    ...
#    -----END CERTIFICATE-----
