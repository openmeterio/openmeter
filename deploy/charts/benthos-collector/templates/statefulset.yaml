apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "benthos-collector.fullname" . }}
  labels:
    {{- include "benthos-collector.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  serviceName: {{ include "benthos-collector.fullname" . }}
  selector:
    matchLabels:
      {{- include "benthos-collector.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ .Values.config | toYaml | sha256sum }}
        checksum/secret: {{ .Values.openmeter | toYaml | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "benthos-collector.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "benthos-collector.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      # {{- if .Values.leaderElection.enabled }}
      # initContainers:
      #   - name: wait-for-lease
      #     image: busybox:1.35
      #     command: ['sh', '-c', 'until nslookup {{ include "benthos-collector.fullname" . }}; do echo waiting for service; sleep 2; done;']
      # {{- end }}
      containers:
        {{- if .Values.leaderElection.enabled }}
        - name: leader-elector
          image: "{{ .Values.leaderElection.image.repository }}:{{ .Values.leaderElection.image.tag }}"
          imagePullPolicy: {{ .Values.leaderElection.image.pullPolicy }}
          args:
            - --election={{ .Values.leaderElection.leaseName }}
            - --election-namespace={{ .Release.Namespace }}
            - --http=0.0.0.0:4040
            - --election-ttl={{ .Values.leaderElection.leaseDuration }}s
            - --renew-deadline={{ .Values.leaderElection.renewDeadline }}s
            - --retry-period={{ .Values.leaderElection.retryPeriod }}s
            - --lease-name={{ .Values.leaderElection.leaseName }}
          ports:
            - name: http
              containerPort: 4040
          resources:
            {{- toYaml .Values.leaderElection.resources | nindent 12 }}
        {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.leaderElection.enabled }}
          # When leader election is enabled, wrap benthos in a script that checks if we're the leader
          command: 
            - "/bin/sh"
            - "-c"
            - |
              while true; do
                # Check if this pod is the leader
                if [ "$(curl -s http://localhost:4040)" = "$(hostname)" ]; then
                  echo "I am the leader, starting benthos..."
                  /entrypoint.sh /usr/local/bin/benthos {{ include "benthos-collector.args" . }} &
                  BENTHOS_PID=$!
                  
                  # Monitor leadership, and kill benthos if we lose it
                  while [ "$(curl -s http://localhost:4040)" = "$(hostname)" ]; do
                    sleep 1
                  done
                  
                  echo "Lost leadership, stopping benthos..."
                  kill $BENTHOS_PID
                  wait $BENTHOS_PID || true
                else
                  echo "Not the leader, waiting..."
                  sleep 5
                fi
              done
          {{- else }}
          command: ["/entrypoint.sh", "/usr/local/bin/benthos"]
          args: {{ include "benthos-collector.args" . }}
          {{- end }}
          livenessProbe:
            {{- if .Values.leaderElection.enabled }}
            exec:
              command:
              - /bin/sh
              - -c
              - "curl -s http://localhost:4040 > /dev/null || true"
            {{- else }}
            httpGet:
              path: /ping
              port: metrics
            {{- end }}
          readinessProbe:
            {{- if .Values.leaderElection.enabled }}
            exec:
              command:
              - /bin/sh
              - -c
              - "curl -s http://localhost:4040 > /dev/null || true"
            {{- else }}
            httpGet:
              path: /ready
              port: metrics
            {{- end }}
          ports:
            - name: metrics
              containerPort: 4195
              protocol: TCP
            {{- if .Values.service.enabled }}
            - name: http
              containerPort: 8080
              protocol: TCP
            {{- end }}
          env:
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: K8S_POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: K8S_APP_INSTANCE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/instance']
            - name: K8S_APP_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/name']
            - name: K8S_APP_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/version']
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- with .Values.envVars }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            - secretRef:
                name: {{ include "benthos-collector.fullname" . }}
          {{- with .Values.envFrom }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/benthos/config.yaml
              readOnly: true
              subPath: config.yaml
          {{- if .Values.storage.enabled }}
            - name: data
              mountPath: {{ .Values.storage.mountPath }}
          {{- end }}
          {{- if ne (len .Values.caRootCertificates) 0 }}
            - name: ca-certificates
              mountPath: /usr/local/share/ca-certificates
              readOnly: true
          {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config
          secret:
            secretName: {{ include "benthos-collector.componentName" (list . "config") }}
      {{- if ne (len .Values.caRootCertificates) 0 }}
        - name: ca-certificates
          configMap:
            name: ca-certificates
      {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.storage.enabled }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
        {{- with .Values.storage.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.storage.labels }}
        labels:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.storage.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.storage.size | quote }}
        {{- with .Values.storage.selector }}
        selector:
          {{- toYaml . | nindent 6 }}
        {{- end }}
        {{ include "benthos-collector.storageClass" . }}
  {{- end }}
