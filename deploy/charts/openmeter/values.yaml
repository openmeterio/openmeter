# Default values for openmeter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  # -- Name of the image repository to pull the container image from.
  repository: ghcr.io/openmeterio/openmeter

  # -- [Image pull policy](https://kubernetes.io/docs/concepts/containers/images/#updating-images) for updating already existing images on a node.
  pullPolicy: IfNotPresent

  # -- Image tag override for the default value (chart appVersion).
  tag: ""

# -- Reference to one or more secrets to be used when [pulling images](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#create-a-pod-that-uses-your-secret) (from private registries).
imagePullSecrets: []

# -- A name in place of the chart name for `app:` labels.
nameOverride: ""

# -- A name to substitute for the full names of resources.
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created.
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account.
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations to be added to pods.
podAnnotations: {}

# -- Labels to be added to pods.
podLabels: {}

# -- Pod [security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod).
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context) for details.
podSecurityContext: {}
  # fsGroup: 2000

# -- Container [security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container).
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-1) for details.
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
  type: ClusterIP

  # -- Service port.
  port: 80

ingress:
  # -- Enable [ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/).
  enabled: false

  # -- Ingress [class name](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class).
  className: ""

  # -- Annotations to be added to the ingress.
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  # -- Ingress host configuration.
  # @default -- See [values.yaml](values.yaml).
  hosts:
    - paths:
        - path: /
          pathType: ImplementationSpecific

  # -- Ingress TLS configuration.
  # @default -- See [values.yaml](values.yaml).
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Container resource [requests and limits](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources) for details.
# @default -- No requests or limits.
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- [Node selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) configuration.
nodeSelector: {}

# -- [Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) for node taints.
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling) for details.
tolerations: []

# -- [Affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) configuration.
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling) for details.
affinity: {}

# -- OpenMeter configuration
config: {}

# -- Defines parameters for the InitContainers
init:
  busybox:
    tag: "1.37.0"

kafka:
  # -- Specifies whether Kafka (using the [Bitnami Kafka](oci://registry-1.docker.io/bitnamicharts)) should be installed.
  # **Not recommended for production environments.**
  enabled: true

  listeners:
    client:
      name: plain
      containerPort: 9092
      protocol: PLAINTEXT
      sslClientAuth: ""
    controller:
      name: CONTROLLER
      containerPort: 9093
      protocol: SASL_PLAINTEXT
      sslClientAuth: ""

clickhouse:
  # -- Specifies whether Clickhouse (using the [Clickhouse Operator](https://github.com/Altinity/clickhouse-operator)) should be installed.
  # **Not recommended for production environments.**
  enabled: true

  operator:
    # -- Specifies whether [Clickhouse Operator](https://github.com/Altinity/clickhouse-operator) should be installed.
    # **Not recommended for production environments.**
    install: true

svix:
  # **Not recommended for production environments.**
  enabled: true

  # -- Specifies the JWT secret SVIX uses for authentication.
  # For details, [see](https://github.com/svix/svix-webhooks?tab=readme-ov-file#authentication).
  # **It is recommended to change this before deployment.**
  signingSecret: "CeRc6WK8KjzRXrKkd9YFnSWcNyqLSIY8JwiaCeRc6WK4UkM"

  # -- Specifies the JWT OpenMeter uses to authenticate with Svix.
  # This is an example Token intended for development purposes. You should create your own using the instructions in [svix documentation](https://github.com/svix/svix-webhooks?tab=readme-ov-file#authentication).
  signedJwt: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJzdml4LXNlcnZlciIsImlhdCI6MTczMDk4NzU0MywiZXhwIjoyMjM1OTA5MDAwLCJhdWQiOiIiLCJzdWIiOiJvcmdfMjNyYjhZZEdxTVQwcUl6cGdHd2RYZkhpck11In0.J90SzVuNwecyCtWAQlOoWplJaK4rnIb3rCWXrHQPqJY"

  # -- External database configuration for Svix
  database:
    # -- External PostgreSQL DSN for Svix. If not provided, uses internal PostgreSQL.
    dsn: ""

  # -- External Redis configuration for Svix
  redis:
    # -- External Redis DSN for Svix. If not provided, uses internal Redis.
    dsn: ""

  # -- Number of replicas (pods) to launch.
  replicaCount: 1

  image:
    # -- Name of the image repository to pull the container image from.
    repository: docker.io/svix/svix-server

    # -- [Image pull policy](https://kubernetes.io/docs/concepts/containers/images/#updating-images) for updating already existing images on a node.
    pullPolicy: IfNotPresent

    # -- Image tag to use
    tag: "v1.37"

  service:
    # -- Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
    type: ClusterIP
    # -- Service port.
    port: 80

  # -- Container resource [requests and limits](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
  # See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources) for details.
  # @default -- No requests or limits.
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

redis:
  # -- Specifies whether Redis (using the [Bitnami Redis](oci://registry-1.docker.io/bitnamicharts/redis) chart) should be installed.
  # **Not recommended for production environments.**
  # All further values can be configured in the `redis` section.
  enabled: true

  auth:
    enabled: false

  nameOverride: redis

postgresql:
  # -- Specifies whether Postgres (using the [Bitnami Chart](https://github.com/bitnami/charts/tree/main/bitnami/postgresql) should be installed.
  # **Not recommended for production environments.**
  # All further values can be configured in the `postgres` section.
  enabled: true

  nameOverride: postgres

  primary:
    initdb:
      scripts:
        setup.sql: |
          CREATE USER application WITH PASSWORD 'application';
          CREATE DATABASE application;
          GRANT ALL PRIVILEGES ON DATABASE application TO application;
          ALTER DATABASE application OWNER TO application;
          CREATE USER svix WITH PASSWORD 'svix';
          CREATE DATABASE svix;
          GRANT ALL PRIVILEGES ON DATABASE svix TO svix;
          ALTER DATABASE svix OWNER TO svix;

api:
  # -- Number of API replicas (pods) to launch.
  replicaCount: 1

balanceWorker:
  # -- Number of Balance Worker replicas (pods) to launch.
  replicaCount: 1

notificationService:
  # -- Number of Notification Service replicas (pods) to launch.
  replicaCount: 1

sinkWorker:
  # -- Number of Sink Worker replicas (pods) to launch.
  replicaCount: 1

# -- List of CA Root certificates to inject into pods at runtime.
# See [values.yaml](values.yaml)
caRootCertificates: {}
#  ca: |
#    -----BEGIN CERTIFICATE-----
#    ...
#    -----END CERTIFICATE-----
