version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - 127.0.0.1:29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:9092 --list
      interval: 5s
      timeout: 3s
      retries: 100

  clickhouse:
    image: clickhouse/clickhouse-server:23.3.9.55-alpine
    ports:
      - 127.0.0.1:8123:8123
      - 127.0.0.1:9000:9000
      - 127.0.0.1:9009:9009
    environment:
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: default
      CLICKHOUSE_DB: openmeter
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://clickhouse:8123/ping || exit 1
      interval: 5s
      timeout: 3s
      retries: 100

  # Deduplication
  # docker compose --profile dedupe-redis up
  redis:
    profiles:
      - dedupe-redis
    image: redis:7.0.12-alpine
    ports:
      - 127.0.0.1:6379:6379

  # Development
  # docker compose --profile dev up
  redpanda:
    image: docker.redpanda.com/redpandadata/console:v2.3.1
    profiles:
      - dev
    depends_on:
      - kafka
    ports:
      - 127.0.0.1:8084:8080
    environment:
      KAFKA_BROKERS: kafka:9092
