input:
  generate:
    count: ${SEEDER_COUNT:0}
    interval: "${SEEDER_INTERVAL:1s}"
    batch_size: ${SEEDER_BATCH_SIZE:1}
    mapping: |
      let max_subjects = ${SEEDER_MAX_SUBJECTS:100}

      let event_type = "api-calls"
      let source = "api-gateway"
      let methods = ["GET", "POST"]
      let paths = ["/", "/about", "/contact", "/pricing", "/docs"]
      let regions = ["us-east-1", "us-west-1", "us-east-2", "us-west-2"]
      let zoneSuffixes = ["a", "b", "c", "d"]

      let subject = "customer-%d".format(random_int(seed: timestamp_unix_nano()) % $max_subjects)
      let time = (now().ts_sub_iso8601("P3D").ts_unix() + random_int(min: 60, max: 60 * 60 * 24 * 3)).ts_format()

      let method = $methods.index(random_int(seed: timestamp_unix_nano()) % $methods.length())
      let path = $paths.index(random_int(seed: timestamp_unix_nano()) % $paths.length())
      let region = $regions.index(random_int(seed: timestamp_unix_nano()) % $regions.length())
      let zone = "%s%s".format($region, $zoneSuffixes.index(random_int(seed: timestamp_unix_nano()) % $zoneSuffixes.length()))
      let duration = random_int(seed: timestamp_unix_nano(), max: 1000)

      root = {
        "id": uuid_v4(),
        "specversion": "1.0",
        "type": $event_type,
        "source": $source,
        "subject": $subject,
        "time": $time,
        "data": {
          "method": $method,
          "path": $path,
          "region": $region,
          "zone": $zone,
          "duration_ms": $duration,
        },
      }

output:
  switch:
    cases:
      - check: ""
        continue: true
        output:
          openmeter:
            url: "${OPENMETER_URL}"
            token: "${OPENMETER_TOKEN:}"

      - check: '"${SEEDER_LOG:false}" == "true"'
        output:
          stdout:
            codec: lines
