// Code generated by ent, DO NOT EDIT.

package db

import (
	"context"
	"errors"
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
	"github.com/alpacahq/alpacadecimal"
	"github.com/openmeterio/openmeter/openmeter/billing"
	"github.com/openmeterio/openmeter/openmeter/ent/db/billinginvoicedetailedline"
	"github.com/openmeterio/openmeter/openmeter/ent/db/billinginvoicedetailedlineamountdiscount"
	"github.com/openmeterio/openmeter/openmeter/ent/db/predicate"
)

// BillingInvoiceDetailedLineAmountDiscountUpdate is the builder for updating BillingInvoiceDetailedLineAmountDiscount entities.
type BillingInvoiceDetailedLineAmountDiscountUpdate struct {
	config
	hooks    []Hook
	mutation *BillingInvoiceDetailedLineAmountDiscountMutation
}

// Where appends a list predicates to the BillingInvoiceDetailedLineAmountDiscountUpdate builder.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) Where(ps ...predicate.BillingInvoiceDetailedLineAmountDiscount) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.Where(ps...)
	return _u
}

// SetUpdatedAt sets the "updated_at" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetUpdatedAt(v time.Time) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.SetUpdatedAt(v)
	return _u
}

// SetDeletedAt sets the "deleted_at" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetDeletedAt(v time.Time) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.SetDeletedAt(v)
	return _u
}

// SetNillableDeletedAt sets the "deleted_at" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetNillableDeletedAt(v *time.Time) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	if v != nil {
		_u.SetDeletedAt(*v)
	}
	return _u
}

// ClearDeletedAt clears the value of the "deleted_at" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) ClearDeletedAt() *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.ClearDeletedAt()
	return _u
}

// SetLineID sets the "line_id" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetLineID(v string) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.SetLineID(v)
	return _u
}

// SetNillableLineID sets the "line_id" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetNillableLineID(v *string) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	if v != nil {
		_u.SetLineID(*v)
	}
	return _u
}

// SetChildUniqueReferenceID sets the "child_unique_reference_id" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetChildUniqueReferenceID(v string) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.SetChildUniqueReferenceID(v)
	return _u
}

// SetNillableChildUniqueReferenceID sets the "child_unique_reference_id" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetNillableChildUniqueReferenceID(v *string) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	if v != nil {
		_u.SetChildUniqueReferenceID(*v)
	}
	return _u
}

// ClearChildUniqueReferenceID clears the value of the "child_unique_reference_id" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) ClearChildUniqueReferenceID() *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.ClearChildUniqueReferenceID()
	return _u
}

// SetDescription sets the "description" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetDescription(v string) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.SetDescription(v)
	return _u
}

// SetNillableDescription sets the "description" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetNillableDescription(v *string) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	if v != nil {
		_u.SetDescription(*v)
	}
	return _u
}

// ClearDescription clears the value of the "description" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) ClearDescription() *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.ClearDescription()
	return _u
}

// SetReason sets the "reason" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetReason(v billing.DiscountReasonType) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.SetReason(v)
	return _u
}

// SetNillableReason sets the "reason" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetNillableReason(v *billing.DiscountReasonType) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	if v != nil {
		_u.SetReason(*v)
	}
	return _u
}

// SetInvoicingAppExternalID sets the "invoicing_app_external_id" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetInvoicingAppExternalID(v string) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.SetInvoicingAppExternalID(v)
	return _u
}

// SetNillableInvoicingAppExternalID sets the "invoicing_app_external_id" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetNillableInvoicingAppExternalID(v *string) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	if v != nil {
		_u.SetInvoicingAppExternalID(*v)
	}
	return _u
}

// ClearInvoicingAppExternalID clears the value of the "invoicing_app_external_id" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) ClearInvoicingAppExternalID() *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.ClearInvoicingAppExternalID()
	return _u
}

// SetAmount sets the "amount" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetAmount(v alpacadecimal.Decimal) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.SetAmount(v)
	return _u
}

// SetNillableAmount sets the "amount" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetNillableAmount(v *alpacadecimal.Decimal) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	if v != nil {
		_u.SetAmount(*v)
	}
	return _u
}

// SetRoundingAmount sets the "rounding_amount" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetRoundingAmount(v alpacadecimal.Decimal) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.SetRoundingAmount(v)
	return _u
}

// SetNillableRoundingAmount sets the "rounding_amount" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetNillableRoundingAmount(v *alpacadecimal.Decimal) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	if v != nil {
		_u.SetRoundingAmount(*v)
	}
	return _u
}

// ClearRoundingAmount clears the value of the "rounding_amount" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) ClearRoundingAmount() *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.ClearRoundingAmount()
	return _u
}

// SetSourceDiscount sets the "source_discount" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetSourceDiscount(v *billing.DiscountReason) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.SetSourceDiscount(v)
	return _u
}

// ClearSourceDiscount clears the value of the "source_discount" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) ClearSourceDiscount() *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.ClearSourceDiscount()
	return _u
}

// SetType sets the "type" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetType(v string) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.SetType(v)
	return _u
}

// SetNillableType sets the "type" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetNillableType(v *string) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	if v != nil {
		_u.SetType(*v)
	}
	return _u
}

// ClearType clears the value of the "type" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) ClearType() *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.ClearType()
	return _u
}

// SetQuantity sets the "quantity" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetQuantity(v alpacadecimal.Decimal) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.SetQuantity(v)
	return _u
}

// SetNillableQuantity sets the "quantity" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetNillableQuantity(v *alpacadecimal.Decimal) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	if v != nil {
		_u.SetQuantity(*v)
	}
	return _u
}

// ClearQuantity clears the value of the "quantity" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) ClearQuantity() *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.ClearQuantity()
	return _u
}

// SetPreLinePeriodQuantity sets the "pre_line_period_quantity" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetPreLinePeriodQuantity(v alpacadecimal.Decimal) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.SetPreLinePeriodQuantity(v)
	return _u
}

// SetNillablePreLinePeriodQuantity sets the "pre_line_period_quantity" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetNillablePreLinePeriodQuantity(v *alpacadecimal.Decimal) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	if v != nil {
		_u.SetPreLinePeriodQuantity(*v)
	}
	return _u
}

// ClearPreLinePeriodQuantity clears the value of the "pre_line_period_quantity" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) ClearPreLinePeriodQuantity() *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.ClearPreLinePeriodQuantity()
	return _u
}

// SetBillingInvoiceDetailedLineID sets the "billing_invoice_detailed_line" edge to the BillingInvoiceDetailedLine entity by ID.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetBillingInvoiceDetailedLineID(id string) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.SetBillingInvoiceDetailedLineID(id)
	return _u
}

// SetBillingInvoiceDetailedLine sets the "billing_invoice_detailed_line" edge to the BillingInvoiceDetailedLine entity.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SetBillingInvoiceDetailedLine(v *BillingInvoiceDetailedLine) *BillingInvoiceDetailedLineAmountDiscountUpdate {
	return _u.SetBillingInvoiceDetailedLineID(v.ID)
}

// Mutation returns the BillingInvoiceDetailedLineAmountDiscountMutation object of the builder.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) Mutation() *BillingInvoiceDetailedLineAmountDiscountMutation {
	return _u.mutation
}

// ClearBillingInvoiceDetailedLine clears the "billing_invoice_detailed_line" edge to the BillingInvoiceDetailedLine entity.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) ClearBillingInvoiceDetailedLine() *BillingInvoiceDetailedLineAmountDiscountUpdate {
	_u.mutation.ClearBillingInvoiceDetailedLine()
	return _u
}

// Save executes the query and returns the number of nodes affected by the update operation.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) Save(ctx context.Context) (int, error) {
	_u.defaults()
	return withHooks(ctx, _u.sqlSave, _u.mutation, _u.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) SaveX(ctx context.Context) int {
	affected, err := _u.Save(ctx)
	if err != nil {
		panic(err)
	}
	return affected
}

// Exec executes the query.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) Exec(ctx context.Context) error {
	_, err := _u.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) ExecX(ctx context.Context) {
	if err := _u.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) defaults() {
	if _, ok := _u.mutation.UpdatedAt(); !ok {
		v := billinginvoicedetailedlineamountdiscount.UpdateDefaultUpdatedAt()
		_u.mutation.SetUpdatedAt(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) check() error {
	if v, ok := _u.mutation.Reason(); ok {
		if err := billinginvoicedetailedlineamountdiscount.ReasonValidator(v); err != nil {
			return &ValidationError{Name: "reason", err: fmt.Errorf(`db: validator failed for field "BillingInvoiceDetailedLineAmountDiscount.reason": %w`, err)}
		}
	}
	if v, ok := _u.mutation.SourceDiscount(); ok {
		if err := v.Validate(); err != nil {
			return &ValidationError{Name: "source_discount", err: fmt.Errorf(`db: validator failed for field "BillingInvoiceDetailedLineAmountDiscount.source_discount": %w`, err)}
		}
	}
	if _u.mutation.BillingInvoiceDetailedLineCleared() && len(_u.mutation.BillingInvoiceDetailedLineIDs()) > 0 {
		return errors.New(`db: clearing a required unique edge "BillingInvoiceDetailedLineAmountDiscount.billing_invoice_detailed_line"`)
	}
	return nil
}

func (_u *BillingInvoiceDetailedLineAmountDiscountUpdate) sqlSave(ctx context.Context) (_node int, err error) {
	if err := _u.check(); err != nil {
		return _node, err
	}
	_spec := sqlgraph.NewUpdateSpec(billinginvoicedetailedlineamountdiscount.Table, billinginvoicedetailedlineamountdiscount.Columns, sqlgraph.NewFieldSpec(billinginvoicedetailedlineamountdiscount.FieldID, field.TypeString))
	if ps := _u.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := _u.mutation.UpdatedAt(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldUpdatedAt, field.TypeTime, value)
	}
	if value, ok := _u.mutation.DeletedAt(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldDeletedAt, field.TypeTime, value)
	}
	if _u.mutation.DeletedAtCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldDeletedAt, field.TypeTime)
	}
	if value, ok := _u.mutation.ChildUniqueReferenceID(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldChildUniqueReferenceID, field.TypeString, value)
	}
	if _u.mutation.ChildUniqueReferenceIDCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldChildUniqueReferenceID, field.TypeString)
	}
	if value, ok := _u.mutation.Description(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldDescription, field.TypeString, value)
	}
	if _u.mutation.DescriptionCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldDescription, field.TypeString)
	}
	if value, ok := _u.mutation.Reason(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldReason, field.TypeEnum, value)
	}
	if value, ok := _u.mutation.InvoicingAppExternalID(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldInvoicingAppExternalID, field.TypeString, value)
	}
	if _u.mutation.InvoicingAppExternalIDCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldInvoicingAppExternalID, field.TypeString)
	}
	if value, ok := _u.mutation.Amount(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldAmount, field.TypeOther, value)
	}
	if value, ok := _u.mutation.RoundingAmount(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldRoundingAmount, field.TypeOther, value)
	}
	if _u.mutation.RoundingAmountCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldRoundingAmount, field.TypeOther)
	}
	if value, ok := _u.mutation.SourceDiscount(); ok {
		vv, err := billinginvoicedetailedlineamountdiscount.ValueScanner.SourceDiscount.Value(value)
		if err != nil {
			return 0, err
		}
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldSourceDiscount, field.TypeString, vv)
	}
	if _u.mutation.SourceDiscountCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldSourceDiscount, field.TypeString)
	}
	if value, ok := _u.mutation.GetType(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldType, field.TypeString, value)
	}
	if _u.mutation.TypeCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldType, field.TypeString)
	}
	if value, ok := _u.mutation.Quantity(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldQuantity, field.TypeOther, value)
	}
	if _u.mutation.QuantityCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldQuantity, field.TypeOther)
	}
	if value, ok := _u.mutation.PreLinePeriodQuantity(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldPreLinePeriodQuantity, field.TypeOther, value)
	}
	if _u.mutation.PreLinePeriodQuantityCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldPreLinePeriodQuantity, field.TypeOther)
	}
	if _u.mutation.BillingInvoiceDetailedLineCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   billinginvoicedetailedlineamountdiscount.BillingInvoiceDetailedLineTable,
			Columns: []string{billinginvoicedetailedlineamountdiscount.BillingInvoiceDetailedLineColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoicedetailedline.FieldID, field.TypeString),
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := _u.mutation.BillingInvoiceDetailedLineIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   billinginvoicedetailedlineamountdiscount.BillingInvoiceDetailedLineTable,
			Columns: []string{billinginvoicedetailedlineamountdiscount.BillingInvoiceDetailedLineColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoicedetailedline.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if _node, err = sqlgraph.UpdateNodes(ctx, _u.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{billinginvoicedetailedlineamountdiscount.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return 0, err
	}
	_u.mutation.done = true
	return _node, nil
}

// BillingInvoiceDetailedLineAmountDiscountUpdateOne is the builder for updating a single BillingInvoiceDetailedLineAmountDiscount entity.
type BillingInvoiceDetailedLineAmountDiscountUpdateOne struct {
	config
	fields   []string
	hooks    []Hook
	mutation *BillingInvoiceDetailedLineAmountDiscountMutation
}

// SetUpdatedAt sets the "updated_at" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetUpdatedAt(v time.Time) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.SetUpdatedAt(v)
	return _u
}

// SetDeletedAt sets the "deleted_at" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetDeletedAt(v time.Time) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.SetDeletedAt(v)
	return _u
}

// SetNillableDeletedAt sets the "deleted_at" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetNillableDeletedAt(v *time.Time) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	if v != nil {
		_u.SetDeletedAt(*v)
	}
	return _u
}

// ClearDeletedAt clears the value of the "deleted_at" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) ClearDeletedAt() *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.ClearDeletedAt()
	return _u
}

// SetLineID sets the "line_id" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetLineID(v string) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.SetLineID(v)
	return _u
}

// SetNillableLineID sets the "line_id" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetNillableLineID(v *string) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	if v != nil {
		_u.SetLineID(*v)
	}
	return _u
}

// SetChildUniqueReferenceID sets the "child_unique_reference_id" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetChildUniqueReferenceID(v string) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.SetChildUniqueReferenceID(v)
	return _u
}

// SetNillableChildUniqueReferenceID sets the "child_unique_reference_id" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetNillableChildUniqueReferenceID(v *string) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	if v != nil {
		_u.SetChildUniqueReferenceID(*v)
	}
	return _u
}

// ClearChildUniqueReferenceID clears the value of the "child_unique_reference_id" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) ClearChildUniqueReferenceID() *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.ClearChildUniqueReferenceID()
	return _u
}

// SetDescription sets the "description" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetDescription(v string) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.SetDescription(v)
	return _u
}

// SetNillableDescription sets the "description" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetNillableDescription(v *string) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	if v != nil {
		_u.SetDescription(*v)
	}
	return _u
}

// ClearDescription clears the value of the "description" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) ClearDescription() *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.ClearDescription()
	return _u
}

// SetReason sets the "reason" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetReason(v billing.DiscountReasonType) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.SetReason(v)
	return _u
}

// SetNillableReason sets the "reason" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetNillableReason(v *billing.DiscountReasonType) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	if v != nil {
		_u.SetReason(*v)
	}
	return _u
}

// SetInvoicingAppExternalID sets the "invoicing_app_external_id" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetInvoicingAppExternalID(v string) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.SetInvoicingAppExternalID(v)
	return _u
}

// SetNillableInvoicingAppExternalID sets the "invoicing_app_external_id" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetNillableInvoicingAppExternalID(v *string) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	if v != nil {
		_u.SetInvoicingAppExternalID(*v)
	}
	return _u
}

// ClearInvoicingAppExternalID clears the value of the "invoicing_app_external_id" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) ClearInvoicingAppExternalID() *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.ClearInvoicingAppExternalID()
	return _u
}

// SetAmount sets the "amount" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetAmount(v alpacadecimal.Decimal) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.SetAmount(v)
	return _u
}

// SetNillableAmount sets the "amount" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetNillableAmount(v *alpacadecimal.Decimal) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	if v != nil {
		_u.SetAmount(*v)
	}
	return _u
}

// SetRoundingAmount sets the "rounding_amount" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetRoundingAmount(v alpacadecimal.Decimal) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.SetRoundingAmount(v)
	return _u
}

// SetNillableRoundingAmount sets the "rounding_amount" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetNillableRoundingAmount(v *alpacadecimal.Decimal) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	if v != nil {
		_u.SetRoundingAmount(*v)
	}
	return _u
}

// ClearRoundingAmount clears the value of the "rounding_amount" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) ClearRoundingAmount() *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.ClearRoundingAmount()
	return _u
}

// SetSourceDiscount sets the "source_discount" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetSourceDiscount(v *billing.DiscountReason) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.SetSourceDiscount(v)
	return _u
}

// ClearSourceDiscount clears the value of the "source_discount" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) ClearSourceDiscount() *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.ClearSourceDiscount()
	return _u
}

// SetType sets the "type" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetType(v string) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.SetType(v)
	return _u
}

// SetNillableType sets the "type" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetNillableType(v *string) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	if v != nil {
		_u.SetType(*v)
	}
	return _u
}

// ClearType clears the value of the "type" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) ClearType() *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.ClearType()
	return _u
}

// SetQuantity sets the "quantity" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetQuantity(v alpacadecimal.Decimal) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.SetQuantity(v)
	return _u
}

// SetNillableQuantity sets the "quantity" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetNillableQuantity(v *alpacadecimal.Decimal) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	if v != nil {
		_u.SetQuantity(*v)
	}
	return _u
}

// ClearQuantity clears the value of the "quantity" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) ClearQuantity() *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.ClearQuantity()
	return _u
}

// SetPreLinePeriodQuantity sets the "pre_line_period_quantity" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetPreLinePeriodQuantity(v alpacadecimal.Decimal) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.SetPreLinePeriodQuantity(v)
	return _u
}

// SetNillablePreLinePeriodQuantity sets the "pre_line_period_quantity" field if the given value is not nil.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetNillablePreLinePeriodQuantity(v *alpacadecimal.Decimal) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	if v != nil {
		_u.SetPreLinePeriodQuantity(*v)
	}
	return _u
}

// ClearPreLinePeriodQuantity clears the value of the "pre_line_period_quantity" field.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) ClearPreLinePeriodQuantity() *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.ClearPreLinePeriodQuantity()
	return _u
}

// SetBillingInvoiceDetailedLineID sets the "billing_invoice_detailed_line" edge to the BillingInvoiceDetailedLine entity by ID.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetBillingInvoiceDetailedLineID(id string) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.SetBillingInvoiceDetailedLineID(id)
	return _u
}

// SetBillingInvoiceDetailedLine sets the "billing_invoice_detailed_line" edge to the BillingInvoiceDetailedLine entity.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SetBillingInvoiceDetailedLine(v *BillingInvoiceDetailedLine) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	return _u.SetBillingInvoiceDetailedLineID(v.ID)
}

// Mutation returns the BillingInvoiceDetailedLineAmountDiscountMutation object of the builder.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) Mutation() *BillingInvoiceDetailedLineAmountDiscountMutation {
	return _u.mutation
}

// ClearBillingInvoiceDetailedLine clears the "billing_invoice_detailed_line" edge to the BillingInvoiceDetailedLine entity.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) ClearBillingInvoiceDetailedLine() *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.ClearBillingInvoiceDetailedLine()
	return _u
}

// Where appends a list predicates to the BillingInvoiceDetailedLineAmountDiscountUpdate builder.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) Where(ps ...predicate.BillingInvoiceDetailedLineAmountDiscount) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.mutation.Where(ps...)
	return _u
}

// Select allows selecting one or more fields (columns) of the returned entity.
// The default is selecting all fields defined in the entity schema.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) Select(field string, fields ...string) *BillingInvoiceDetailedLineAmountDiscountUpdateOne {
	_u.fields = append([]string{field}, fields...)
	return _u
}

// Save executes the query and returns the updated BillingInvoiceDetailedLineAmountDiscount entity.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) Save(ctx context.Context) (*BillingInvoiceDetailedLineAmountDiscount, error) {
	_u.defaults()
	return withHooks(ctx, _u.sqlSave, _u.mutation, _u.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) SaveX(ctx context.Context) *BillingInvoiceDetailedLineAmountDiscount {
	node, err := _u.Save(ctx)
	if err != nil {
		panic(err)
	}
	return node
}

// Exec executes the query on the entity.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) Exec(ctx context.Context) error {
	_, err := _u.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) ExecX(ctx context.Context) {
	if err := _u.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) defaults() {
	if _, ok := _u.mutation.UpdatedAt(); !ok {
		v := billinginvoicedetailedlineamountdiscount.UpdateDefaultUpdatedAt()
		_u.mutation.SetUpdatedAt(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) check() error {
	if v, ok := _u.mutation.Reason(); ok {
		if err := billinginvoicedetailedlineamountdiscount.ReasonValidator(v); err != nil {
			return &ValidationError{Name: "reason", err: fmt.Errorf(`db: validator failed for field "BillingInvoiceDetailedLineAmountDiscount.reason": %w`, err)}
		}
	}
	if v, ok := _u.mutation.SourceDiscount(); ok {
		if err := v.Validate(); err != nil {
			return &ValidationError{Name: "source_discount", err: fmt.Errorf(`db: validator failed for field "BillingInvoiceDetailedLineAmountDiscount.source_discount": %w`, err)}
		}
	}
	if _u.mutation.BillingInvoiceDetailedLineCleared() && len(_u.mutation.BillingInvoiceDetailedLineIDs()) > 0 {
		return errors.New(`db: clearing a required unique edge "BillingInvoiceDetailedLineAmountDiscount.billing_invoice_detailed_line"`)
	}
	return nil
}

func (_u *BillingInvoiceDetailedLineAmountDiscountUpdateOne) sqlSave(ctx context.Context) (_node *BillingInvoiceDetailedLineAmountDiscount, err error) {
	if err := _u.check(); err != nil {
		return _node, err
	}
	_spec := sqlgraph.NewUpdateSpec(billinginvoicedetailedlineamountdiscount.Table, billinginvoicedetailedlineamountdiscount.Columns, sqlgraph.NewFieldSpec(billinginvoicedetailedlineamountdiscount.FieldID, field.TypeString))
	id, ok := _u.mutation.ID()
	if !ok {
		return nil, &ValidationError{Name: "id", err: errors.New(`db: missing "BillingInvoiceDetailedLineAmountDiscount.id" for update`)}
	}
	_spec.Node.ID.Value = id
	if fields := _u.fields; len(fields) > 0 {
		_spec.Node.Columns = make([]string, 0, len(fields))
		_spec.Node.Columns = append(_spec.Node.Columns, billinginvoicedetailedlineamountdiscount.FieldID)
		for _, f := range fields {
			if !billinginvoicedetailedlineamountdiscount.ValidColumn(f) {
				return nil, &ValidationError{Name: f, err: fmt.Errorf("db: invalid field %q for query", f)}
			}
			if f != billinginvoicedetailedlineamountdiscount.FieldID {
				_spec.Node.Columns = append(_spec.Node.Columns, f)
			}
		}
	}
	if ps := _u.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := _u.mutation.UpdatedAt(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldUpdatedAt, field.TypeTime, value)
	}
	if value, ok := _u.mutation.DeletedAt(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldDeletedAt, field.TypeTime, value)
	}
	if _u.mutation.DeletedAtCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldDeletedAt, field.TypeTime)
	}
	if value, ok := _u.mutation.ChildUniqueReferenceID(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldChildUniqueReferenceID, field.TypeString, value)
	}
	if _u.mutation.ChildUniqueReferenceIDCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldChildUniqueReferenceID, field.TypeString)
	}
	if value, ok := _u.mutation.Description(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldDescription, field.TypeString, value)
	}
	if _u.mutation.DescriptionCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldDescription, field.TypeString)
	}
	if value, ok := _u.mutation.Reason(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldReason, field.TypeEnum, value)
	}
	if value, ok := _u.mutation.InvoicingAppExternalID(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldInvoicingAppExternalID, field.TypeString, value)
	}
	if _u.mutation.InvoicingAppExternalIDCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldInvoicingAppExternalID, field.TypeString)
	}
	if value, ok := _u.mutation.Amount(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldAmount, field.TypeOther, value)
	}
	if value, ok := _u.mutation.RoundingAmount(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldRoundingAmount, field.TypeOther, value)
	}
	if _u.mutation.RoundingAmountCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldRoundingAmount, field.TypeOther)
	}
	if value, ok := _u.mutation.SourceDiscount(); ok {
		vv, err := billinginvoicedetailedlineamountdiscount.ValueScanner.SourceDiscount.Value(value)
		if err != nil {
			return nil, err
		}
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldSourceDiscount, field.TypeString, vv)
	}
	if _u.mutation.SourceDiscountCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldSourceDiscount, field.TypeString)
	}
	if value, ok := _u.mutation.GetType(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldType, field.TypeString, value)
	}
	if _u.mutation.TypeCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldType, field.TypeString)
	}
	if value, ok := _u.mutation.Quantity(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldQuantity, field.TypeOther, value)
	}
	if _u.mutation.QuantityCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldQuantity, field.TypeOther)
	}
	if value, ok := _u.mutation.PreLinePeriodQuantity(); ok {
		_spec.SetField(billinginvoicedetailedlineamountdiscount.FieldPreLinePeriodQuantity, field.TypeOther, value)
	}
	if _u.mutation.PreLinePeriodQuantityCleared() {
		_spec.ClearField(billinginvoicedetailedlineamountdiscount.FieldPreLinePeriodQuantity, field.TypeOther)
	}
	if _u.mutation.BillingInvoiceDetailedLineCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   billinginvoicedetailedlineamountdiscount.BillingInvoiceDetailedLineTable,
			Columns: []string{billinginvoicedetailedlineamountdiscount.BillingInvoiceDetailedLineColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoicedetailedline.FieldID, field.TypeString),
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := _u.mutation.BillingInvoiceDetailedLineIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   billinginvoicedetailedlineamountdiscount.BillingInvoiceDetailedLineTable,
			Columns: []string{billinginvoicedetailedlineamountdiscount.BillingInvoiceDetailedLineColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoicedetailedline.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	_node = &BillingInvoiceDetailedLineAmountDiscount{config: _u.config}
	_spec.Assign = _node.assignValues
	_spec.ScanValues = _node.scanValues
	if err = sqlgraph.UpdateNode(ctx, _u.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{billinginvoicedetailedlineamountdiscount.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	_u.mutation.done = true
	return _node, nil
}
