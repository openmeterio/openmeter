// Code generated by ent, DO NOT EDIT.

package db

import (
	"context"
	"errors"
	"fmt"
	"time"

	"entgo.io/ent/dialect"
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
	"github.com/alpacahq/alpacadecimal"
	"github.com/openmeterio/openmeter/openmeter/billing"
	"github.com/openmeterio/openmeter/openmeter/ent/db/app"
	"github.com/openmeterio/openmeter/openmeter/ent/db/billinginvoice"
	"github.com/openmeterio/openmeter/openmeter/ent/db/billinginvoicediscount"
	"github.com/openmeterio/openmeter/openmeter/ent/db/billinginvoiceline"
	"github.com/openmeterio/openmeter/openmeter/ent/db/billinginvoicevalidationissue"
	"github.com/openmeterio/openmeter/openmeter/ent/db/billingprofile"
	"github.com/openmeterio/openmeter/openmeter/ent/db/billingworkflowconfig"
	"github.com/openmeterio/openmeter/openmeter/ent/db/customer"
	"github.com/openmeterio/openmeter/pkg/currencyx"
	"github.com/openmeterio/openmeter/pkg/models"
)

// BillingInvoiceCreate is the builder for creating a BillingInvoice entity.
type BillingInvoiceCreate struct {
	config
	mutation *BillingInvoiceMutation
	hooks    []Hook
	conflict []sql.ConflictOption
}

// SetNamespace sets the "namespace" field.
func (bic *BillingInvoiceCreate) SetNamespace(s string) *BillingInvoiceCreate {
	bic.mutation.SetNamespace(s)
	return bic
}

// SetMetadata sets the "metadata" field.
func (bic *BillingInvoiceCreate) SetMetadata(m map[string]string) *BillingInvoiceCreate {
	bic.mutation.SetMetadata(m)
	return bic
}

// SetCreatedAt sets the "created_at" field.
func (bic *BillingInvoiceCreate) SetCreatedAt(t time.Time) *BillingInvoiceCreate {
	bic.mutation.SetCreatedAt(t)
	return bic
}

// SetNillableCreatedAt sets the "created_at" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableCreatedAt(t *time.Time) *BillingInvoiceCreate {
	if t != nil {
		bic.SetCreatedAt(*t)
	}
	return bic
}

// SetUpdatedAt sets the "updated_at" field.
func (bic *BillingInvoiceCreate) SetUpdatedAt(t time.Time) *BillingInvoiceCreate {
	bic.mutation.SetUpdatedAt(t)
	return bic
}

// SetNillableUpdatedAt sets the "updated_at" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableUpdatedAt(t *time.Time) *BillingInvoiceCreate {
	if t != nil {
		bic.SetUpdatedAt(*t)
	}
	return bic
}

// SetDeletedAt sets the "deleted_at" field.
func (bic *BillingInvoiceCreate) SetDeletedAt(t time.Time) *BillingInvoiceCreate {
	bic.mutation.SetDeletedAt(t)
	return bic
}

// SetNillableDeletedAt sets the "deleted_at" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableDeletedAt(t *time.Time) *BillingInvoiceCreate {
	if t != nil {
		bic.SetDeletedAt(*t)
	}
	return bic
}

// SetSupplierAddressCountry sets the "supplier_address_country" field.
func (bic *BillingInvoiceCreate) SetSupplierAddressCountry(mc models.CountryCode) *BillingInvoiceCreate {
	bic.mutation.SetSupplierAddressCountry(mc)
	return bic
}

// SetNillableSupplierAddressCountry sets the "supplier_address_country" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableSupplierAddressCountry(mc *models.CountryCode) *BillingInvoiceCreate {
	if mc != nil {
		bic.SetSupplierAddressCountry(*mc)
	}
	return bic
}

// SetSupplierAddressPostalCode sets the "supplier_address_postal_code" field.
func (bic *BillingInvoiceCreate) SetSupplierAddressPostalCode(s string) *BillingInvoiceCreate {
	bic.mutation.SetSupplierAddressPostalCode(s)
	return bic
}

// SetNillableSupplierAddressPostalCode sets the "supplier_address_postal_code" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableSupplierAddressPostalCode(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetSupplierAddressPostalCode(*s)
	}
	return bic
}

// SetSupplierAddressState sets the "supplier_address_state" field.
func (bic *BillingInvoiceCreate) SetSupplierAddressState(s string) *BillingInvoiceCreate {
	bic.mutation.SetSupplierAddressState(s)
	return bic
}

// SetNillableSupplierAddressState sets the "supplier_address_state" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableSupplierAddressState(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetSupplierAddressState(*s)
	}
	return bic
}

// SetSupplierAddressCity sets the "supplier_address_city" field.
func (bic *BillingInvoiceCreate) SetSupplierAddressCity(s string) *BillingInvoiceCreate {
	bic.mutation.SetSupplierAddressCity(s)
	return bic
}

// SetNillableSupplierAddressCity sets the "supplier_address_city" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableSupplierAddressCity(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetSupplierAddressCity(*s)
	}
	return bic
}

// SetSupplierAddressLine1 sets the "supplier_address_line1" field.
func (bic *BillingInvoiceCreate) SetSupplierAddressLine1(s string) *BillingInvoiceCreate {
	bic.mutation.SetSupplierAddressLine1(s)
	return bic
}

// SetNillableSupplierAddressLine1 sets the "supplier_address_line1" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableSupplierAddressLine1(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetSupplierAddressLine1(*s)
	}
	return bic
}

// SetSupplierAddressLine2 sets the "supplier_address_line2" field.
func (bic *BillingInvoiceCreate) SetSupplierAddressLine2(s string) *BillingInvoiceCreate {
	bic.mutation.SetSupplierAddressLine2(s)
	return bic
}

// SetNillableSupplierAddressLine2 sets the "supplier_address_line2" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableSupplierAddressLine2(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetSupplierAddressLine2(*s)
	}
	return bic
}

// SetSupplierAddressPhoneNumber sets the "supplier_address_phone_number" field.
func (bic *BillingInvoiceCreate) SetSupplierAddressPhoneNumber(s string) *BillingInvoiceCreate {
	bic.mutation.SetSupplierAddressPhoneNumber(s)
	return bic
}

// SetNillableSupplierAddressPhoneNumber sets the "supplier_address_phone_number" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableSupplierAddressPhoneNumber(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetSupplierAddressPhoneNumber(*s)
	}
	return bic
}

// SetCustomerAddressCountry sets the "customer_address_country" field.
func (bic *BillingInvoiceCreate) SetCustomerAddressCountry(mc models.CountryCode) *BillingInvoiceCreate {
	bic.mutation.SetCustomerAddressCountry(mc)
	return bic
}

// SetNillableCustomerAddressCountry sets the "customer_address_country" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableCustomerAddressCountry(mc *models.CountryCode) *BillingInvoiceCreate {
	if mc != nil {
		bic.SetCustomerAddressCountry(*mc)
	}
	return bic
}

// SetCustomerAddressPostalCode sets the "customer_address_postal_code" field.
func (bic *BillingInvoiceCreate) SetCustomerAddressPostalCode(s string) *BillingInvoiceCreate {
	bic.mutation.SetCustomerAddressPostalCode(s)
	return bic
}

// SetNillableCustomerAddressPostalCode sets the "customer_address_postal_code" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableCustomerAddressPostalCode(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetCustomerAddressPostalCode(*s)
	}
	return bic
}

// SetCustomerAddressState sets the "customer_address_state" field.
func (bic *BillingInvoiceCreate) SetCustomerAddressState(s string) *BillingInvoiceCreate {
	bic.mutation.SetCustomerAddressState(s)
	return bic
}

// SetNillableCustomerAddressState sets the "customer_address_state" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableCustomerAddressState(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetCustomerAddressState(*s)
	}
	return bic
}

// SetCustomerAddressCity sets the "customer_address_city" field.
func (bic *BillingInvoiceCreate) SetCustomerAddressCity(s string) *BillingInvoiceCreate {
	bic.mutation.SetCustomerAddressCity(s)
	return bic
}

// SetNillableCustomerAddressCity sets the "customer_address_city" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableCustomerAddressCity(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetCustomerAddressCity(*s)
	}
	return bic
}

// SetCustomerAddressLine1 sets the "customer_address_line1" field.
func (bic *BillingInvoiceCreate) SetCustomerAddressLine1(s string) *BillingInvoiceCreate {
	bic.mutation.SetCustomerAddressLine1(s)
	return bic
}

// SetNillableCustomerAddressLine1 sets the "customer_address_line1" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableCustomerAddressLine1(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetCustomerAddressLine1(*s)
	}
	return bic
}

// SetCustomerAddressLine2 sets the "customer_address_line2" field.
func (bic *BillingInvoiceCreate) SetCustomerAddressLine2(s string) *BillingInvoiceCreate {
	bic.mutation.SetCustomerAddressLine2(s)
	return bic
}

// SetNillableCustomerAddressLine2 sets the "customer_address_line2" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableCustomerAddressLine2(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetCustomerAddressLine2(*s)
	}
	return bic
}

// SetCustomerAddressPhoneNumber sets the "customer_address_phone_number" field.
func (bic *BillingInvoiceCreate) SetCustomerAddressPhoneNumber(s string) *BillingInvoiceCreate {
	bic.mutation.SetCustomerAddressPhoneNumber(s)
	return bic
}

// SetNillableCustomerAddressPhoneNumber sets the "customer_address_phone_number" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableCustomerAddressPhoneNumber(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetCustomerAddressPhoneNumber(*s)
	}
	return bic
}

// SetAmount sets the "amount" field.
func (bic *BillingInvoiceCreate) SetAmount(a alpacadecimal.Decimal) *BillingInvoiceCreate {
	bic.mutation.SetAmount(a)
	return bic
}

// SetTaxesTotal sets the "taxes_total" field.
func (bic *BillingInvoiceCreate) SetTaxesTotal(a alpacadecimal.Decimal) *BillingInvoiceCreate {
	bic.mutation.SetTaxesTotal(a)
	return bic
}

// SetTaxesInclusiveTotal sets the "taxes_inclusive_total" field.
func (bic *BillingInvoiceCreate) SetTaxesInclusiveTotal(a alpacadecimal.Decimal) *BillingInvoiceCreate {
	bic.mutation.SetTaxesInclusiveTotal(a)
	return bic
}

// SetTaxesExclusiveTotal sets the "taxes_exclusive_total" field.
func (bic *BillingInvoiceCreate) SetTaxesExclusiveTotal(a alpacadecimal.Decimal) *BillingInvoiceCreate {
	bic.mutation.SetTaxesExclusiveTotal(a)
	return bic
}

// SetChargesTotal sets the "charges_total" field.
func (bic *BillingInvoiceCreate) SetChargesTotal(a alpacadecimal.Decimal) *BillingInvoiceCreate {
	bic.mutation.SetChargesTotal(a)
	return bic
}

// SetDiscountsTotal sets the "discounts_total" field.
func (bic *BillingInvoiceCreate) SetDiscountsTotal(a alpacadecimal.Decimal) *BillingInvoiceCreate {
	bic.mutation.SetDiscountsTotal(a)
	return bic
}

// SetTotal sets the "total" field.
func (bic *BillingInvoiceCreate) SetTotal(a alpacadecimal.Decimal) *BillingInvoiceCreate {
	bic.mutation.SetTotal(a)
	return bic
}

// SetSupplierName sets the "supplier_name" field.
func (bic *BillingInvoiceCreate) SetSupplierName(s string) *BillingInvoiceCreate {
	bic.mutation.SetSupplierName(s)
	return bic
}

// SetSupplierTaxCode sets the "supplier_tax_code" field.
func (bic *BillingInvoiceCreate) SetSupplierTaxCode(s string) *BillingInvoiceCreate {
	bic.mutation.SetSupplierTaxCode(s)
	return bic
}

// SetNillableSupplierTaxCode sets the "supplier_tax_code" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableSupplierTaxCode(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetSupplierTaxCode(*s)
	}
	return bic
}

// SetCustomerName sets the "customer_name" field.
func (bic *BillingInvoiceCreate) SetCustomerName(s string) *BillingInvoiceCreate {
	bic.mutation.SetCustomerName(s)
	return bic
}

// SetCustomerUsageAttribution sets the "customer_usage_attribution" field.
func (bic *BillingInvoiceCreate) SetCustomerUsageAttribution(bcua *billing.VersionedCustomerUsageAttribution) *BillingInvoiceCreate {
	bic.mutation.SetCustomerUsageAttribution(bcua)
	return bic
}

// SetNumber sets the "number" field.
func (bic *BillingInvoiceCreate) SetNumber(s string) *BillingInvoiceCreate {
	bic.mutation.SetNumber(s)
	return bic
}

// SetType sets the "type" field.
func (bic *BillingInvoiceCreate) SetType(bt billing.InvoiceType) *BillingInvoiceCreate {
	bic.mutation.SetType(bt)
	return bic
}

// SetDescription sets the "description" field.
func (bic *BillingInvoiceCreate) SetDescription(s string) *BillingInvoiceCreate {
	bic.mutation.SetDescription(s)
	return bic
}

// SetNillableDescription sets the "description" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableDescription(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetDescription(*s)
	}
	return bic
}

// SetCustomerID sets the "customer_id" field.
func (bic *BillingInvoiceCreate) SetCustomerID(s string) *BillingInvoiceCreate {
	bic.mutation.SetCustomerID(s)
	return bic
}

// SetSourceBillingProfileID sets the "source_billing_profile_id" field.
func (bic *BillingInvoiceCreate) SetSourceBillingProfileID(s string) *BillingInvoiceCreate {
	bic.mutation.SetSourceBillingProfileID(s)
	return bic
}

// SetVoidedAt sets the "voided_at" field.
func (bic *BillingInvoiceCreate) SetVoidedAt(t time.Time) *BillingInvoiceCreate {
	bic.mutation.SetVoidedAt(t)
	return bic
}

// SetNillableVoidedAt sets the "voided_at" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableVoidedAt(t *time.Time) *BillingInvoiceCreate {
	if t != nil {
		bic.SetVoidedAt(*t)
	}
	return bic
}

// SetIssuedAt sets the "issued_at" field.
func (bic *BillingInvoiceCreate) SetIssuedAt(t time.Time) *BillingInvoiceCreate {
	bic.mutation.SetIssuedAt(t)
	return bic
}

// SetNillableIssuedAt sets the "issued_at" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableIssuedAt(t *time.Time) *BillingInvoiceCreate {
	if t != nil {
		bic.SetIssuedAt(*t)
	}
	return bic
}

// SetSentToCustomerAt sets the "sent_to_customer_at" field.
func (bic *BillingInvoiceCreate) SetSentToCustomerAt(t time.Time) *BillingInvoiceCreate {
	bic.mutation.SetSentToCustomerAt(t)
	return bic
}

// SetNillableSentToCustomerAt sets the "sent_to_customer_at" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableSentToCustomerAt(t *time.Time) *BillingInvoiceCreate {
	if t != nil {
		bic.SetSentToCustomerAt(*t)
	}
	return bic
}

// SetDraftUntil sets the "draft_until" field.
func (bic *BillingInvoiceCreate) SetDraftUntil(t time.Time) *BillingInvoiceCreate {
	bic.mutation.SetDraftUntil(t)
	return bic
}

// SetNillableDraftUntil sets the "draft_until" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableDraftUntil(t *time.Time) *BillingInvoiceCreate {
	if t != nil {
		bic.SetDraftUntil(*t)
	}
	return bic
}

// SetCurrency sets the "currency" field.
func (bic *BillingInvoiceCreate) SetCurrency(c currencyx.Code) *BillingInvoiceCreate {
	bic.mutation.SetCurrency(c)
	return bic
}

// SetDueAt sets the "due_at" field.
func (bic *BillingInvoiceCreate) SetDueAt(t time.Time) *BillingInvoiceCreate {
	bic.mutation.SetDueAt(t)
	return bic
}

// SetNillableDueAt sets the "due_at" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableDueAt(t *time.Time) *BillingInvoiceCreate {
	if t != nil {
		bic.SetDueAt(*t)
	}
	return bic
}

// SetStatus sets the "status" field.
func (bic *BillingInvoiceCreate) SetStatus(bs billing.InvoiceStatus) *BillingInvoiceCreate {
	bic.mutation.SetStatus(bs)
	return bic
}

// SetWorkflowConfigID sets the "workflow_config_id" field.
func (bic *BillingInvoiceCreate) SetWorkflowConfigID(s string) *BillingInvoiceCreate {
	bic.mutation.SetWorkflowConfigID(s)
	return bic
}

// SetTaxAppID sets the "tax_app_id" field.
func (bic *BillingInvoiceCreate) SetTaxAppID(s string) *BillingInvoiceCreate {
	bic.mutation.SetTaxAppID(s)
	return bic
}

// SetInvoicingAppID sets the "invoicing_app_id" field.
func (bic *BillingInvoiceCreate) SetInvoicingAppID(s string) *BillingInvoiceCreate {
	bic.mutation.SetInvoicingAppID(s)
	return bic
}

// SetPaymentAppID sets the "payment_app_id" field.
func (bic *BillingInvoiceCreate) SetPaymentAppID(s string) *BillingInvoiceCreate {
	bic.mutation.SetPaymentAppID(s)
	return bic
}

// SetInvoicingAppExternalID sets the "invoicing_app_external_id" field.
func (bic *BillingInvoiceCreate) SetInvoicingAppExternalID(s string) *BillingInvoiceCreate {
	bic.mutation.SetInvoicingAppExternalID(s)
	return bic
}

// SetNillableInvoicingAppExternalID sets the "invoicing_app_external_id" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableInvoicingAppExternalID(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetInvoicingAppExternalID(*s)
	}
	return bic
}

// SetPaymentAppExternalID sets the "payment_app_external_id" field.
func (bic *BillingInvoiceCreate) SetPaymentAppExternalID(s string) *BillingInvoiceCreate {
	bic.mutation.SetPaymentAppExternalID(s)
	return bic
}

// SetNillablePaymentAppExternalID sets the "payment_app_external_id" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillablePaymentAppExternalID(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetPaymentAppExternalID(*s)
	}
	return bic
}

// SetPeriodStart sets the "period_start" field.
func (bic *BillingInvoiceCreate) SetPeriodStart(t time.Time) *BillingInvoiceCreate {
	bic.mutation.SetPeriodStart(t)
	return bic
}

// SetNillablePeriodStart sets the "period_start" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillablePeriodStart(t *time.Time) *BillingInvoiceCreate {
	if t != nil {
		bic.SetPeriodStart(*t)
	}
	return bic
}

// SetPeriodEnd sets the "period_end" field.
func (bic *BillingInvoiceCreate) SetPeriodEnd(t time.Time) *BillingInvoiceCreate {
	bic.mutation.SetPeriodEnd(t)
	return bic
}

// SetNillablePeriodEnd sets the "period_end" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillablePeriodEnd(t *time.Time) *BillingInvoiceCreate {
	if t != nil {
		bic.SetPeriodEnd(*t)
	}
	return bic
}

// SetCollectionAt sets the "collection_at" field.
func (bic *BillingInvoiceCreate) SetCollectionAt(t time.Time) *BillingInvoiceCreate {
	bic.mutation.SetCollectionAt(t)
	return bic
}

// SetNillableCollectionAt sets the "collection_at" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableCollectionAt(t *time.Time) *BillingInvoiceCreate {
	if t != nil {
		bic.SetCollectionAt(*t)
	}
	return bic
}

// SetID sets the "id" field.
func (bic *BillingInvoiceCreate) SetID(s string) *BillingInvoiceCreate {
	bic.mutation.SetID(s)
	return bic
}

// SetNillableID sets the "id" field if the given value is not nil.
func (bic *BillingInvoiceCreate) SetNillableID(s *string) *BillingInvoiceCreate {
	if s != nil {
		bic.SetID(*s)
	}
	return bic
}

// SetSourceBillingProfile sets the "source_billing_profile" edge to the BillingProfile entity.
func (bic *BillingInvoiceCreate) SetSourceBillingProfile(b *BillingProfile) *BillingInvoiceCreate {
	return bic.SetSourceBillingProfileID(b.ID)
}

// SetBillingWorkflowConfigID sets the "billing_workflow_config" edge to the BillingWorkflowConfig entity by ID.
func (bic *BillingInvoiceCreate) SetBillingWorkflowConfigID(id string) *BillingInvoiceCreate {
	bic.mutation.SetBillingWorkflowConfigID(id)
	return bic
}

// SetBillingWorkflowConfig sets the "billing_workflow_config" edge to the BillingWorkflowConfig entity.
func (bic *BillingInvoiceCreate) SetBillingWorkflowConfig(b *BillingWorkflowConfig) *BillingInvoiceCreate {
	return bic.SetBillingWorkflowConfigID(b.ID)
}

// AddBillingInvoiceLineIDs adds the "billing_invoice_lines" edge to the BillingInvoiceLine entity by IDs.
func (bic *BillingInvoiceCreate) AddBillingInvoiceLineIDs(ids ...string) *BillingInvoiceCreate {
	bic.mutation.AddBillingInvoiceLineIDs(ids...)
	return bic
}

// AddBillingInvoiceLines adds the "billing_invoice_lines" edges to the BillingInvoiceLine entity.
func (bic *BillingInvoiceCreate) AddBillingInvoiceLines(b ...*BillingInvoiceLine) *BillingInvoiceCreate {
	ids := make([]string, len(b))
	for i := range b {
		ids[i] = b[i].ID
	}
	return bic.AddBillingInvoiceLineIDs(ids...)
}

// AddBillingInvoiceValidationIssueIDs adds the "billing_invoice_validation_issues" edge to the BillingInvoiceValidationIssue entity by IDs.
func (bic *BillingInvoiceCreate) AddBillingInvoiceValidationIssueIDs(ids ...string) *BillingInvoiceCreate {
	bic.mutation.AddBillingInvoiceValidationIssueIDs(ids...)
	return bic
}

// AddBillingInvoiceValidationIssues adds the "billing_invoice_validation_issues" edges to the BillingInvoiceValidationIssue entity.
func (bic *BillingInvoiceCreate) AddBillingInvoiceValidationIssues(b ...*BillingInvoiceValidationIssue) *BillingInvoiceCreate {
	ids := make([]string, len(b))
	for i := range b {
		ids[i] = b[i].ID
	}
	return bic.AddBillingInvoiceValidationIssueIDs(ids...)
}

// SetBillingInvoiceCustomerID sets the "billing_invoice_customer" edge to the Customer entity by ID.
func (bic *BillingInvoiceCreate) SetBillingInvoiceCustomerID(id string) *BillingInvoiceCreate {
	bic.mutation.SetBillingInvoiceCustomerID(id)
	return bic
}

// SetBillingInvoiceCustomer sets the "billing_invoice_customer" edge to the Customer entity.
func (bic *BillingInvoiceCreate) SetBillingInvoiceCustomer(c *Customer) *BillingInvoiceCreate {
	return bic.SetBillingInvoiceCustomerID(c.ID)
}

// SetTaxApp sets the "tax_app" edge to the App entity.
func (bic *BillingInvoiceCreate) SetTaxApp(a *App) *BillingInvoiceCreate {
	return bic.SetTaxAppID(a.ID)
}

// SetInvoicingApp sets the "invoicing_app" edge to the App entity.
func (bic *BillingInvoiceCreate) SetInvoicingApp(a *App) *BillingInvoiceCreate {
	return bic.SetInvoicingAppID(a.ID)
}

// SetPaymentApp sets the "payment_app" edge to the App entity.
func (bic *BillingInvoiceCreate) SetPaymentApp(a *App) *BillingInvoiceCreate {
	return bic.SetPaymentAppID(a.ID)
}

// AddInvoiceDiscountIDs adds the "invoice_discounts" edge to the BillingInvoiceDiscount entity by IDs.
func (bic *BillingInvoiceCreate) AddInvoiceDiscountIDs(ids ...string) *BillingInvoiceCreate {
	bic.mutation.AddInvoiceDiscountIDs(ids...)
	return bic
}

// AddInvoiceDiscounts adds the "invoice_discounts" edges to the BillingInvoiceDiscount entity.
func (bic *BillingInvoiceCreate) AddInvoiceDiscounts(b ...*BillingInvoiceDiscount) *BillingInvoiceCreate {
	ids := make([]string, len(b))
	for i := range b {
		ids[i] = b[i].ID
	}
	return bic.AddInvoiceDiscountIDs(ids...)
}

// Mutation returns the BillingInvoiceMutation object of the builder.
func (bic *BillingInvoiceCreate) Mutation() *BillingInvoiceMutation {
	return bic.mutation
}

// Save creates the BillingInvoice in the database.
func (bic *BillingInvoiceCreate) Save(ctx context.Context) (*BillingInvoice, error) {
	bic.defaults()
	return withHooks(ctx, bic.sqlSave, bic.mutation, bic.hooks)
}

// SaveX calls Save and panics if Save returns an error.
func (bic *BillingInvoiceCreate) SaveX(ctx context.Context) *BillingInvoice {
	v, err := bic.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// Exec executes the query.
func (bic *BillingInvoiceCreate) Exec(ctx context.Context) error {
	_, err := bic.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (bic *BillingInvoiceCreate) ExecX(ctx context.Context) {
	if err := bic.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (bic *BillingInvoiceCreate) defaults() {
	if _, ok := bic.mutation.CreatedAt(); !ok {
		v := billinginvoice.DefaultCreatedAt()
		bic.mutation.SetCreatedAt(v)
	}
	if _, ok := bic.mutation.UpdatedAt(); !ok {
		v := billinginvoice.DefaultUpdatedAt()
		bic.mutation.SetUpdatedAt(v)
	}
	if _, ok := bic.mutation.CollectionAt(); !ok {
		v := billinginvoice.DefaultCollectionAt()
		bic.mutation.SetCollectionAt(v)
	}
	if _, ok := bic.mutation.ID(); !ok {
		v := billinginvoice.DefaultID()
		bic.mutation.SetID(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (bic *BillingInvoiceCreate) check() error {
	if _, ok := bic.mutation.Namespace(); !ok {
		return &ValidationError{Name: "namespace", err: errors.New(`db: missing required field "BillingInvoice.namespace"`)}
	}
	if v, ok := bic.mutation.Namespace(); ok {
		if err := billinginvoice.NamespaceValidator(v); err != nil {
			return &ValidationError{Name: "namespace", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.namespace": %w`, err)}
		}
	}
	if _, ok := bic.mutation.CreatedAt(); !ok {
		return &ValidationError{Name: "created_at", err: errors.New(`db: missing required field "BillingInvoice.created_at"`)}
	}
	if _, ok := bic.mutation.UpdatedAt(); !ok {
		return &ValidationError{Name: "updated_at", err: errors.New(`db: missing required field "BillingInvoice.updated_at"`)}
	}
	if v, ok := bic.mutation.SupplierAddressCountry(); ok {
		if err := billinginvoice.SupplierAddressCountryValidator(string(v)); err != nil {
			return &ValidationError{Name: "supplier_address_country", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.supplier_address_country": %w`, err)}
		}
	}
	if v, ok := bic.mutation.CustomerAddressCountry(); ok {
		if err := billinginvoice.CustomerAddressCountryValidator(string(v)); err != nil {
			return &ValidationError{Name: "customer_address_country", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.customer_address_country": %w`, err)}
		}
	}
	if _, ok := bic.mutation.Amount(); !ok {
		return &ValidationError{Name: "amount", err: errors.New(`db: missing required field "BillingInvoice.amount"`)}
	}
	if _, ok := bic.mutation.TaxesTotal(); !ok {
		return &ValidationError{Name: "taxes_total", err: errors.New(`db: missing required field "BillingInvoice.taxes_total"`)}
	}
	if _, ok := bic.mutation.TaxesInclusiveTotal(); !ok {
		return &ValidationError{Name: "taxes_inclusive_total", err: errors.New(`db: missing required field "BillingInvoice.taxes_inclusive_total"`)}
	}
	if _, ok := bic.mutation.TaxesExclusiveTotal(); !ok {
		return &ValidationError{Name: "taxes_exclusive_total", err: errors.New(`db: missing required field "BillingInvoice.taxes_exclusive_total"`)}
	}
	if _, ok := bic.mutation.ChargesTotal(); !ok {
		return &ValidationError{Name: "charges_total", err: errors.New(`db: missing required field "BillingInvoice.charges_total"`)}
	}
	if _, ok := bic.mutation.DiscountsTotal(); !ok {
		return &ValidationError{Name: "discounts_total", err: errors.New(`db: missing required field "BillingInvoice.discounts_total"`)}
	}
	if _, ok := bic.mutation.Total(); !ok {
		return &ValidationError{Name: "total", err: errors.New(`db: missing required field "BillingInvoice.total"`)}
	}
	if _, ok := bic.mutation.SupplierName(); !ok {
		return &ValidationError{Name: "supplier_name", err: errors.New(`db: missing required field "BillingInvoice.supplier_name"`)}
	}
	if v, ok := bic.mutation.SupplierName(); ok {
		if err := billinginvoice.SupplierNameValidator(v); err != nil {
			return &ValidationError{Name: "supplier_name", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.supplier_name": %w`, err)}
		}
	}
	if _, ok := bic.mutation.CustomerName(); !ok {
		return &ValidationError{Name: "customer_name", err: errors.New(`db: missing required field "BillingInvoice.customer_name"`)}
	}
	if v, ok := bic.mutation.CustomerName(); ok {
		if err := billinginvoice.CustomerNameValidator(v); err != nil {
			return &ValidationError{Name: "customer_name", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.customer_name": %w`, err)}
		}
	}
	if _, ok := bic.mutation.CustomerUsageAttribution(); !ok {
		return &ValidationError{Name: "customer_usage_attribution", err: errors.New(`db: missing required field "BillingInvoice.customer_usage_attribution"`)}
	}
	if _, ok := bic.mutation.Number(); !ok {
		return &ValidationError{Name: "number", err: errors.New(`db: missing required field "BillingInvoice.number"`)}
	}
	if _, ok := bic.mutation.GetType(); !ok {
		return &ValidationError{Name: "type", err: errors.New(`db: missing required field "BillingInvoice.type"`)}
	}
	if v, ok := bic.mutation.GetType(); ok {
		if err := billinginvoice.TypeValidator(v); err != nil {
			return &ValidationError{Name: "type", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.type": %w`, err)}
		}
	}
	if _, ok := bic.mutation.CustomerID(); !ok {
		return &ValidationError{Name: "customer_id", err: errors.New(`db: missing required field "BillingInvoice.customer_id"`)}
	}
	if v, ok := bic.mutation.CustomerID(); ok {
		if err := billinginvoice.CustomerIDValidator(v); err != nil {
			return &ValidationError{Name: "customer_id", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.customer_id": %w`, err)}
		}
	}
	if _, ok := bic.mutation.SourceBillingProfileID(); !ok {
		return &ValidationError{Name: "source_billing_profile_id", err: errors.New(`db: missing required field "BillingInvoice.source_billing_profile_id"`)}
	}
	if v, ok := bic.mutation.SourceBillingProfileID(); ok {
		if err := billinginvoice.SourceBillingProfileIDValidator(v); err != nil {
			return &ValidationError{Name: "source_billing_profile_id", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.source_billing_profile_id": %w`, err)}
		}
	}
	if _, ok := bic.mutation.Currency(); !ok {
		return &ValidationError{Name: "currency", err: errors.New(`db: missing required field "BillingInvoice.currency"`)}
	}
	if v, ok := bic.mutation.Currency(); ok {
		if err := billinginvoice.CurrencyValidator(string(v)); err != nil {
			return &ValidationError{Name: "currency", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.currency": %w`, err)}
		}
	}
	if _, ok := bic.mutation.Status(); !ok {
		return &ValidationError{Name: "status", err: errors.New(`db: missing required field "BillingInvoice.status"`)}
	}
	if v, ok := bic.mutation.Status(); ok {
		if err := billinginvoice.StatusValidator(v); err != nil {
			return &ValidationError{Name: "status", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.status": %w`, err)}
		}
	}
	if _, ok := bic.mutation.WorkflowConfigID(); !ok {
		return &ValidationError{Name: "workflow_config_id", err: errors.New(`db: missing required field "BillingInvoice.workflow_config_id"`)}
	}
	if _, ok := bic.mutation.TaxAppID(); !ok {
		return &ValidationError{Name: "tax_app_id", err: errors.New(`db: missing required field "BillingInvoice.tax_app_id"`)}
	}
	if _, ok := bic.mutation.InvoicingAppID(); !ok {
		return &ValidationError{Name: "invoicing_app_id", err: errors.New(`db: missing required field "BillingInvoice.invoicing_app_id"`)}
	}
	if _, ok := bic.mutation.PaymentAppID(); !ok {
		return &ValidationError{Name: "payment_app_id", err: errors.New(`db: missing required field "BillingInvoice.payment_app_id"`)}
	}
	if len(bic.mutation.SourceBillingProfileIDs()) == 0 {
		return &ValidationError{Name: "source_billing_profile", err: errors.New(`db: missing required edge "BillingInvoice.source_billing_profile"`)}
	}
	if len(bic.mutation.BillingWorkflowConfigIDs()) == 0 {
		return &ValidationError{Name: "billing_workflow_config", err: errors.New(`db: missing required edge "BillingInvoice.billing_workflow_config"`)}
	}
	if len(bic.mutation.BillingInvoiceCustomerIDs()) == 0 {
		return &ValidationError{Name: "billing_invoice_customer", err: errors.New(`db: missing required edge "BillingInvoice.billing_invoice_customer"`)}
	}
	if len(bic.mutation.TaxAppIDs()) == 0 {
		return &ValidationError{Name: "tax_app", err: errors.New(`db: missing required edge "BillingInvoice.tax_app"`)}
	}
	if len(bic.mutation.InvoicingAppIDs()) == 0 {
		return &ValidationError{Name: "invoicing_app", err: errors.New(`db: missing required edge "BillingInvoice.invoicing_app"`)}
	}
	if len(bic.mutation.PaymentAppIDs()) == 0 {
		return &ValidationError{Name: "payment_app", err: errors.New(`db: missing required edge "BillingInvoice.payment_app"`)}
	}
	return nil
}

func (bic *BillingInvoiceCreate) sqlSave(ctx context.Context) (*BillingInvoice, error) {
	if err := bic.check(); err != nil {
		return nil, err
	}
	_node, _spec := bic.createSpec()
	if err := sqlgraph.CreateNode(ctx, bic.driver, _spec); err != nil {
		if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	if _spec.ID.Value != nil {
		if id, ok := _spec.ID.Value.(string); ok {
			_node.ID = id
		} else {
			return nil, fmt.Errorf("unexpected BillingInvoice.ID type: %T", _spec.ID.Value)
		}
	}
	bic.mutation.id = &_node.ID
	bic.mutation.done = true
	return _node, nil
}

func (bic *BillingInvoiceCreate) createSpec() (*BillingInvoice, *sqlgraph.CreateSpec) {
	var (
		_node = &BillingInvoice{config: bic.config}
		_spec = sqlgraph.NewCreateSpec(billinginvoice.Table, sqlgraph.NewFieldSpec(billinginvoice.FieldID, field.TypeString))
	)
	_spec.OnConflict = bic.conflict
	if id, ok := bic.mutation.ID(); ok {
		_node.ID = id
		_spec.ID.Value = id
	}
	if value, ok := bic.mutation.Namespace(); ok {
		_spec.SetField(billinginvoice.FieldNamespace, field.TypeString, value)
		_node.Namespace = value
	}
	if value, ok := bic.mutation.Metadata(); ok {
		_spec.SetField(billinginvoice.FieldMetadata, field.TypeJSON, value)
		_node.Metadata = value
	}
	if value, ok := bic.mutation.CreatedAt(); ok {
		_spec.SetField(billinginvoice.FieldCreatedAt, field.TypeTime, value)
		_node.CreatedAt = value
	}
	if value, ok := bic.mutation.UpdatedAt(); ok {
		_spec.SetField(billinginvoice.FieldUpdatedAt, field.TypeTime, value)
		_node.UpdatedAt = value
	}
	if value, ok := bic.mutation.DeletedAt(); ok {
		_spec.SetField(billinginvoice.FieldDeletedAt, field.TypeTime, value)
		_node.DeletedAt = &value
	}
	if value, ok := bic.mutation.SupplierAddressCountry(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressCountry, field.TypeString, value)
		_node.SupplierAddressCountry = &value
	}
	if value, ok := bic.mutation.SupplierAddressPostalCode(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressPostalCode, field.TypeString, value)
		_node.SupplierAddressPostalCode = &value
	}
	if value, ok := bic.mutation.SupplierAddressState(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressState, field.TypeString, value)
		_node.SupplierAddressState = &value
	}
	if value, ok := bic.mutation.SupplierAddressCity(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressCity, field.TypeString, value)
		_node.SupplierAddressCity = &value
	}
	if value, ok := bic.mutation.SupplierAddressLine1(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressLine1, field.TypeString, value)
		_node.SupplierAddressLine1 = &value
	}
	if value, ok := bic.mutation.SupplierAddressLine2(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressLine2, field.TypeString, value)
		_node.SupplierAddressLine2 = &value
	}
	if value, ok := bic.mutation.SupplierAddressPhoneNumber(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressPhoneNumber, field.TypeString, value)
		_node.SupplierAddressPhoneNumber = &value
	}
	if value, ok := bic.mutation.CustomerAddressCountry(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressCountry, field.TypeString, value)
		_node.CustomerAddressCountry = &value
	}
	if value, ok := bic.mutation.CustomerAddressPostalCode(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressPostalCode, field.TypeString, value)
		_node.CustomerAddressPostalCode = &value
	}
	if value, ok := bic.mutation.CustomerAddressState(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressState, field.TypeString, value)
		_node.CustomerAddressState = &value
	}
	if value, ok := bic.mutation.CustomerAddressCity(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressCity, field.TypeString, value)
		_node.CustomerAddressCity = &value
	}
	if value, ok := bic.mutation.CustomerAddressLine1(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressLine1, field.TypeString, value)
		_node.CustomerAddressLine1 = &value
	}
	if value, ok := bic.mutation.CustomerAddressLine2(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressLine2, field.TypeString, value)
		_node.CustomerAddressLine2 = &value
	}
	if value, ok := bic.mutation.CustomerAddressPhoneNumber(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressPhoneNumber, field.TypeString, value)
		_node.CustomerAddressPhoneNumber = &value
	}
	if value, ok := bic.mutation.Amount(); ok {
		_spec.SetField(billinginvoice.FieldAmount, field.TypeOther, value)
		_node.Amount = value
	}
	if value, ok := bic.mutation.TaxesTotal(); ok {
		_spec.SetField(billinginvoice.FieldTaxesTotal, field.TypeOther, value)
		_node.TaxesTotal = value
	}
	if value, ok := bic.mutation.TaxesInclusiveTotal(); ok {
		_spec.SetField(billinginvoice.FieldTaxesInclusiveTotal, field.TypeOther, value)
		_node.TaxesInclusiveTotal = value
	}
	if value, ok := bic.mutation.TaxesExclusiveTotal(); ok {
		_spec.SetField(billinginvoice.FieldTaxesExclusiveTotal, field.TypeOther, value)
		_node.TaxesExclusiveTotal = value
	}
	if value, ok := bic.mutation.ChargesTotal(); ok {
		_spec.SetField(billinginvoice.FieldChargesTotal, field.TypeOther, value)
		_node.ChargesTotal = value
	}
	if value, ok := bic.mutation.DiscountsTotal(); ok {
		_spec.SetField(billinginvoice.FieldDiscountsTotal, field.TypeOther, value)
		_node.DiscountsTotal = value
	}
	if value, ok := bic.mutation.Total(); ok {
		_spec.SetField(billinginvoice.FieldTotal, field.TypeOther, value)
		_node.Total = value
	}
	if value, ok := bic.mutation.SupplierName(); ok {
		_spec.SetField(billinginvoice.FieldSupplierName, field.TypeString, value)
		_node.SupplierName = value
	}
	if value, ok := bic.mutation.SupplierTaxCode(); ok {
		_spec.SetField(billinginvoice.FieldSupplierTaxCode, field.TypeString, value)
		_node.SupplierTaxCode = &value
	}
	if value, ok := bic.mutation.CustomerName(); ok {
		_spec.SetField(billinginvoice.FieldCustomerName, field.TypeString, value)
		_node.CustomerName = value
	}
	if value, ok := bic.mutation.CustomerUsageAttribution(); ok {
		_spec.SetField(billinginvoice.FieldCustomerUsageAttribution, field.TypeJSON, value)
		_node.CustomerUsageAttribution = value
	}
	if value, ok := bic.mutation.Number(); ok {
		_spec.SetField(billinginvoice.FieldNumber, field.TypeString, value)
		_node.Number = value
	}
	if value, ok := bic.mutation.GetType(); ok {
		_spec.SetField(billinginvoice.FieldType, field.TypeEnum, value)
		_node.Type = value
	}
	if value, ok := bic.mutation.Description(); ok {
		_spec.SetField(billinginvoice.FieldDescription, field.TypeString, value)
		_node.Description = &value
	}
	if value, ok := bic.mutation.VoidedAt(); ok {
		_spec.SetField(billinginvoice.FieldVoidedAt, field.TypeTime, value)
		_node.VoidedAt = &value
	}
	if value, ok := bic.mutation.IssuedAt(); ok {
		_spec.SetField(billinginvoice.FieldIssuedAt, field.TypeTime, value)
		_node.IssuedAt = &value
	}
	if value, ok := bic.mutation.SentToCustomerAt(); ok {
		_spec.SetField(billinginvoice.FieldSentToCustomerAt, field.TypeTime, value)
		_node.SentToCustomerAt = &value
	}
	if value, ok := bic.mutation.DraftUntil(); ok {
		_spec.SetField(billinginvoice.FieldDraftUntil, field.TypeTime, value)
		_node.DraftUntil = &value
	}
	if value, ok := bic.mutation.Currency(); ok {
		_spec.SetField(billinginvoice.FieldCurrency, field.TypeString, value)
		_node.Currency = value
	}
	if value, ok := bic.mutation.DueAt(); ok {
		_spec.SetField(billinginvoice.FieldDueAt, field.TypeTime, value)
		_node.DueAt = &value
	}
	if value, ok := bic.mutation.Status(); ok {
		_spec.SetField(billinginvoice.FieldStatus, field.TypeEnum, value)
		_node.Status = value
	}
	if value, ok := bic.mutation.InvoicingAppExternalID(); ok {
		_spec.SetField(billinginvoice.FieldInvoicingAppExternalID, field.TypeString, value)
		_node.InvoicingAppExternalID = &value
	}
	if value, ok := bic.mutation.PaymentAppExternalID(); ok {
		_spec.SetField(billinginvoice.FieldPaymentAppExternalID, field.TypeString, value)
		_node.PaymentAppExternalID = &value
	}
	if value, ok := bic.mutation.PeriodStart(); ok {
		_spec.SetField(billinginvoice.FieldPeriodStart, field.TypeTime, value)
		_node.PeriodStart = &value
	}
	if value, ok := bic.mutation.PeriodEnd(); ok {
		_spec.SetField(billinginvoice.FieldPeriodEnd, field.TypeTime, value)
		_node.PeriodEnd = &value
	}
	if value, ok := bic.mutation.CollectionAt(); ok {
		_spec.SetField(billinginvoice.FieldCollectionAt, field.TypeTime, value)
		_node.CollectionAt = value
	}
	if nodes := bic.mutation.SourceBillingProfileIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   billinginvoice.SourceBillingProfileTable,
			Columns: []string{billinginvoice.SourceBillingProfileColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billingprofile.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.SourceBillingProfileID = nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := bic.mutation.BillingWorkflowConfigIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2O,
			Inverse: true,
			Table:   billinginvoice.BillingWorkflowConfigTable,
			Columns: []string{billinginvoice.BillingWorkflowConfigColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billingworkflowconfig.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.WorkflowConfigID = nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := bic.mutation.BillingInvoiceLinesIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   billinginvoice.BillingInvoiceLinesTable,
			Columns: []string{billinginvoice.BillingInvoiceLinesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoiceline.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := bic.mutation.BillingInvoiceValidationIssuesIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   billinginvoice.BillingInvoiceValidationIssuesTable,
			Columns: []string{billinginvoice.BillingInvoiceValidationIssuesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoicevalidationissue.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := bic.mutation.BillingInvoiceCustomerIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   billinginvoice.BillingInvoiceCustomerTable,
			Columns: []string{billinginvoice.BillingInvoiceCustomerColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(customer.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.CustomerID = nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := bic.mutation.TaxAppIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   billinginvoice.TaxAppTable,
			Columns: []string{billinginvoice.TaxAppColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(app.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.TaxAppID = nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := bic.mutation.InvoicingAppIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   billinginvoice.InvoicingAppTable,
			Columns: []string{billinginvoice.InvoicingAppColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(app.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.InvoicingAppID = nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := bic.mutation.PaymentAppIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   billinginvoice.PaymentAppTable,
			Columns: []string{billinginvoice.PaymentAppColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(app.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.PaymentAppID = nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := bic.mutation.InvoiceDiscountsIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   billinginvoice.InvoiceDiscountsTable,
			Columns: []string{billinginvoice.InvoiceDiscountsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoicediscount.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges = append(_spec.Edges, edge)
	}
	return _node, _spec
}

// OnConflict allows configuring the `ON CONFLICT` / `ON DUPLICATE KEY` clause
// of the `INSERT` statement. For example:
//
//	client.BillingInvoice.Create().
//		SetNamespace(v).
//		OnConflict(
//			// Update the row with the new values
//			// the was proposed for insertion.
//			sql.ResolveWithNewValues(),
//		).
//		// Override some of the fields with custom
//		// update values.
//		Update(func(u *ent.BillingInvoiceUpsert) {
//			SetNamespace(v+v).
//		}).
//		Exec(ctx)
func (bic *BillingInvoiceCreate) OnConflict(opts ...sql.ConflictOption) *BillingInvoiceUpsertOne {
	bic.conflict = opts
	return &BillingInvoiceUpsertOne{
		create: bic,
	}
}

// OnConflictColumns calls `OnConflict` and configures the columns
// as conflict target. Using this option is equivalent to using:
//
//	client.BillingInvoice.Create().
//		OnConflict(sql.ConflictColumns(columns...)).
//		Exec(ctx)
func (bic *BillingInvoiceCreate) OnConflictColumns(columns ...string) *BillingInvoiceUpsertOne {
	bic.conflict = append(bic.conflict, sql.ConflictColumns(columns...))
	return &BillingInvoiceUpsertOne{
		create: bic,
	}
}

type (
	// BillingInvoiceUpsertOne is the builder for "upsert"-ing
	//  one BillingInvoice node.
	BillingInvoiceUpsertOne struct {
		create *BillingInvoiceCreate
	}

	// BillingInvoiceUpsert is the "OnConflict" setter.
	BillingInvoiceUpsert struct {
		*sql.UpdateSet
	}
)

// SetMetadata sets the "metadata" field.
func (u *BillingInvoiceUpsert) SetMetadata(v map[string]string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldMetadata, v)
	return u
}

// UpdateMetadata sets the "metadata" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateMetadata() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldMetadata)
	return u
}

// ClearMetadata clears the value of the "metadata" field.
func (u *BillingInvoiceUpsert) ClearMetadata() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldMetadata)
	return u
}

// SetUpdatedAt sets the "updated_at" field.
func (u *BillingInvoiceUpsert) SetUpdatedAt(v time.Time) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldUpdatedAt, v)
	return u
}

// UpdateUpdatedAt sets the "updated_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateUpdatedAt() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldUpdatedAt)
	return u
}

// SetDeletedAt sets the "deleted_at" field.
func (u *BillingInvoiceUpsert) SetDeletedAt(v time.Time) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldDeletedAt, v)
	return u
}

// UpdateDeletedAt sets the "deleted_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateDeletedAt() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldDeletedAt)
	return u
}

// ClearDeletedAt clears the value of the "deleted_at" field.
func (u *BillingInvoiceUpsert) ClearDeletedAt() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldDeletedAt)
	return u
}

// SetSupplierAddressCountry sets the "supplier_address_country" field.
func (u *BillingInvoiceUpsert) SetSupplierAddressCountry(v models.CountryCode) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldSupplierAddressCountry, v)
	return u
}

// UpdateSupplierAddressCountry sets the "supplier_address_country" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateSupplierAddressCountry() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldSupplierAddressCountry)
	return u
}

// ClearSupplierAddressCountry clears the value of the "supplier_address_country" field.
func (u *BillingInvoiceUpsert) ClearSupplierAddressCountry() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldSupplierAddressCountry)
	return u
}

// SetSupplierAddressPostalCode sets the "supplier_address_postal_code" field.
func (u *BillingInvoiceUpsert) SetSupplierAddressPostalCode(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldSupplierAddressPostalCode, v)
	return u
}

// UpdateSupplierAddressPostalCode sets the "supplier_address_postal_code" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateSupplierAddressPostalCode() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldSupplierAddressPostalCode)
	return u
}

// ClearSupplierAddressPostalCode clears the value of the "supplier_address_postal_code" field.
func (u *BillingInvoiceUpsert) ClearSupplierAddressPostalCode() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldSupplierAddressPostalCode)
	return u
}

// SetSupplierAddressState sets the "supplier_address_state" field.
func (u *BillingInvoiceUpsert) SetSupplierAddressState(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldSupplierAddressState, v)
	return u
}

// UpdateSupplierAddressState sets the "supplier_address_state" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateSupplierAddressState() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldSupplierAddressState)
	return u
}

// ClearSupplierAddressState clears the value of the "supplier_address_state" field.
func (u *BillingInvoiceUpsert) ClearSupplierAddressState() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldSupplierAddressState)
	return u
}

// SetSupplierAddressCity sets the "supplier_address_city" field.
func (u *BillingInvoiceUpsert) SetSupplierAddressCity(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldSupplierAddressCity, v)
	return u
}

// UpdateSupplierAddressCity sets the "supplier_address_city" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateSupplierAddressCity() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldSupplierAddressCity)
	return u
}

// ClearSupplierAddressCity clears the value of the "supplier_address_city" field.
func (u *BillingInvoiceUpsert) ClearSupplierAddressCity() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldSupplierAddressCity)
	return u
}

// SetSupplierAddressLine1 sets the "supplier_address_line1" field.
func (u *BillingInvoiceUpsert) SetSupplierAddressLine1(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldSupplierAddressLine1, v)
	return u
}

// UpdateSupplierAddressLine1 sets the "supplier_address_line1" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateSupplierAddressLine1() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldSupplierAddressLine1)
	return u
}

// ClearSupplierAddressLine1 clears the value of the "supplier_address_line1" field.
func (u *BillingInvoiceUpsert) ClearSupplierAddressLine1() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldSupplierAddressLine1)
	return u
}

// SetSupplierAddressLine2 sets the "supplier_address_line2" field.
func (u *BillingInvoiceUpsert) SetSupplierAddressLine2(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldSupplierAddressLine2, v)
	return u
}

// UpdateSupplierAddressLine2 sets the "supplier_address_line2" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateSupplierAddressLine2() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldSupplierAddressLine2)
	return u
}

// ClearSupplierAddressLine2 clears the value of the "supplier_address_line2" field.
func (u *BillingInvoiceUpsert) ClearSupplierAddressLine2() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldSupplierAddressLine2)
	return u
}

// SetSupplierAddressPhoneNumber sets the "supplier_address_phone_number" field.
func (u *BillingInvoiceUpsert) SetSupplierAddressPhoneNumber(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldSupplierAddressPhoneNumber, v)
	return u
}

// UpdateSupplierAddressPhoneNumber sets the "supplier_address_phone_number" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateSupplierAddressPhoneNumber() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldSupplierAddressPhoneNumber)
	return u
}

// ClearSupplierAddressPhoneNumber clears the value of the "supplier_address_phone_number" field.
func (u *BillingInvoiceUpsert) ClearSupplierAddressPhoneNumber() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldSupplierAddressPhoneNumber)
	return u
}

// SetCustomerAddressCountry sets the "customer_address_country" field.
func (u *BillingInvoiceUpsert) SetCustomerAddressCountry(v models.CountryCode) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldCustomerAddressCountry, v)
	return u
}

// UpdateCustomerAddressCountry sets the "customer_address_country" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateCustomerAddressCountry() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldCustomerAddressCountry)
	return u
}

// ClearCustomerAddressCountry clears the value of the "customer_address_country" field.
func (u *BillingInvoiceUpsert) ClearCustomerAddressCountry() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldCustomerAddressCountry)
	return u
}

// SetCustomerAddressPostalCode sets the "customer_address_postal_code" field.
func (u *BillingInvoiceUpsert) SetCustomerAddressPostalCode(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldCustomerAddressPostalCode, v)
	return u
}

// UpdateCustomerAddressPostalCode sets the "customer_address_postal_code" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateCustomerAddressPostalCode() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldCustomerAddressPostalCode)
	return u
}

// ClearCustomerAddressPostalCode clears the value of the "customer_address_postal_code" field.
func (u *BillingInvoiceUpsert) ClearCustomerAddressPostalCode() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldCustomerAddressPostalCode)
	return u
}

// SetCustomerAddressState sets the "customer_address_state" field.
func (u *BillingInvoiceUpsert) SetCustomerAddressState(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldCustomerAddressState, v)
	return u
}

// UpdateCustomerAddressState sets the "customer_address_state" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateCustomerAddressState() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldCustomerAddressState)
	return u
}

// ClearCustomerAddressState clears the value of the "customer_address_state" field.
func (u *BillingInvoiceUpsert) ClearCustomerAddressState() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldCustomerAddressState)
	return u
}

// SetCustomerAddressCity sets the "customer_address_city" field.
func (u *BillingInvoiceUpsert) SetCustomerAddressCity(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldCustomerAddressCity, v)
	return u
}

// UpdateCustomerAddressCity sets the "customer_address_city" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateCustomerAddressCity() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldCustomerAddressCity)
	return u
}

// ClearCustomerAddressCity clears the value of the "customer_address_city" field.
func (u *BillingInvoiceUpsert) ClearCustomerAddressCity() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldCustomerAddressCity)
	return u
}

// SetCustomerAddressLine1 sets the "customer_address_line1" field.
func (u *BillingInvoiceUpsert) SetCustomerAddressLine1(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldCustomerAddressLine1, v)
	return u
}

// UpdateCustomerAddressLine1 sets the "customer_address_line1" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateCustomerAddressLine1() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldCustomerAddressLine1)
	return u
}

// ClearCustomerAddressLine1 clears the value of the "customer_address_line1" field.
func (u *BillingInvoiceUpsert) ClearCustomerAddressLine1() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldCustomerAddressLine1)
	return u
}

// SetCustomerAddressLine2 sets the "customer_address_line2" field.
func (u *BillingInvoiceUpsert) SetCustomerAddressLine2(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldCustomerAddressLine2, v)
	return u
}

// UpdateCustomerAddressLine2 sets the "customer_address_line2" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateCustomerAddressLine2() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldCustomerAddressLine2)
	return u
}

// ClearCustomerAddressLine2 clears the value of the "customer_address_line2" field.
func (u *BillingInvoiceUpsert) ClearCustomerAddressLine2() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldCustomerAddressLine2)
	return u
}

// SetCustomerAddressPhoneNumber sets the "customer_address_phone_number" field.
func (u *BillingInvoiceUpsert) SetCustomerAddressPhoneNumber(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldCustomerAddressPhoneNumber, v)
	return u
}

// UpdateCustomerAddressPhoneNumber sets the "customer_address_phone_number" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateCustomerAddressPhoneNumber() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldCustomerAddressPhoneNumber)
	return u
}

// ClearCustomerAddressPhoneNumber clears the value of the "customer_address_phone_number" field.
func (u *BillingInvoiceUpsert) ClearCustomerAddressPhoneNumber() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldCustomerAddressPhoneNumber)
	return u
}

// SetAmount sets the "amount" field.
func (u *BillingInvoiceUpsert) SetAmount(v alpacadecimal.Decimal) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldAmount, v)
	return u
}

// UpdateAmount sets the "amount" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateAmount() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldAmount)
	return u
}

// SetTaxesTotal sets the "taxes_total" field.
func (u *BillingInvoiceUpsert) SetTaxesTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldTaxesTotal, v)
	return u
}

// UpdateTaxesTotal sets the "taxes_total" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateTaxesTotal() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldTaxesTotal)
	return u
}

// SetTaxesInclusiveTotal sets the "taxes_inclusive_total" field.
func (u *BillingInvoiceUpsert) SetTaxesInclusiveTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldTaxesInclusiveTotal, v)
	return u
}

// UpdateTaxesInclusiveTotal sets the "taxes_inclusive_total" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateTaxesInclusiveTotal() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldTaxesInclusiveTotal)
	return u
}

// SetTaxesExclusiveTotal sets the "taxes_exclusive_total" field.
func (u *BillingInvoiceUpsert) SetTaxesExclusiveTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldTaxesExclusiveTotal, v)
	return u
}

// UpdateTaxesExclusiveTotal sets the "taxes_exclusive_total" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateTaxesExclusiveTotal() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldTaxesExclusiveTotal)
	return u
}

// SetChargesTotal sets the "charges_total" field.
func (u *BillingInvoiceUpsert) SetChargesTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldChargesTotal, v)
	return u
}

// UpdateChargesTotal sets the "charges_total" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateChargesTotal() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldChargesTotal)
	return u
}

// SetDiscountsTotal sets the "discounts_total" field.
func (u *BillingInvoiceUpsert) SetDiscountsTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldDiscountsTotal, v)
	return u
}

// UpdateDiscountsTotal sets the "discounts_total" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateDiscountsTotal() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldDiscountsTotal)
	return u
}

// SetTotal sets the "total" field.
func (u *BillingInvoiceUpsert) SetTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldTotal, v)
	return u
}

// UpdateTotal sets the "total" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateTotal() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldTotal)
	return u
}

// SetSupplierName sets the "supplier_name" field.
func (u *BillingInvoiceUpsert) SetSupplierName(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldSupplierName, v)
	return u
}

// UpdateSupplierName sets the "supplier_name" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateSupplierName() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldSupplierName)
	return u
}

// SetSupplierTaxCode sets the "supplier_tax_code" field.
func (u *BillingInvoiceUpsert) SetSupplierTaxCode(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldSupplierTaxCode, v)
	return u
}

// UpdateSupplierTaxCode sets the "supplier_tax_code" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateSupplierTaxCode() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldSupplierTaxCode)
	return u
}

// ClearSupplierTaxCode clears the value of the "supplier_tax_code" field.
func (u *BillingInvoiceUpsert) ClearSupplierTaxCode() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldSupplierTaxCode)
	return u
}

// SetCustomerName sets the "customer_name" field.
func (u *BillingInvoiceUpsert) SetCustomerName(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldCustomerName, v)
	return u
}

// UpdateCustomerName sets the "customer_name" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateCustomerName() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldCustomerName)
	return u
}

// SetCustomerUsageAttribution sets the "customer_usage_attribution" field.
func (u *BillingInvoiceUpsert) SetCustomerUsageAttribution(v *billing.VersionedCustomerUsageAttribution) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldCustomerUsageAttribution, v)
	return u
}

// UpdateCustomerUsageAttribution sets the "customer_usage_attribution" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateCustomerUsageAttribution() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldCustomerUsageAttribution)
	return u
}

// SetNumber sets the "number" field.
func (u *BillingInvoiceUpsert) SetNumber(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldNumber, v)
	return u
}

// UpdateNumber sets the "number" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateNumber() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldNumber)
	return u
}

// SetType sets the "type" field.
func (u *BillingInvoiceUpsert) SetType(v billing.InvoiceType) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldType, v)
	return u
}

// UpdateType sets the "type" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateType() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldType)
	return u
}

// SetDescription sets the "description" field.
func (u *BillingInvoiceUpsert) SetDescription(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldDescription, v)
	return u
}

// UpdateDescription sets the "description" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateDescription() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldDescription)
	return u
}

// ClearDescription clears the value of the "description" field.
func (u *BillingInvoiceUpsert) ClearDescription() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldDescription)
	return u
}

// SetVoidedAt sets the "voided_at" field.
func (u *BillingInvoiceUpsert) SetVoidedAt(v time.Time) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldVoidedAt, v)
	return u
}

// UpdateVoidedAt sets the "voided_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateVoidedAt() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldVoidedAt)
	return u
}

// ClearVoidedAt clears the value of the "voided_at" field.
func (u *BillingInvoiceUpsert) ClearVoidedAt() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldVoidedAt)
	return u
}

// SetIssuedAt sets the "issued_at" field.
func (u *BillingInvoiceUpsert) SetIssuedAt(v time.Time) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldIssuedAt, v)
	return u
}

// UpdateIssuedAt sets the "issued_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateIssuedAt() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldIssuedAt)
	return u
}

// ClearIssuedAt clears the value of the "issued_at" field.
func (u *BillingInvoiceUpsert) ClearIssuedAt() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldIssuedAt)
	return u
}

// SetSentToCustomerAt sets the "sent_to_customer_at" field.
func (u *BillingInvoiceUpsert) SetSentToCustomerAt(v time.Time) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldSentToCustomerAt, v)
	return u
}

// UpdateSentToCustomerAt sets the "sent_to_customer_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateSentToCustomerAt() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldSentToCustomerAt)
	return u
}

// ClearSentToCustomerAt clears the value of the "sent_to_customer_at" field.
func (u *BillingInvoiceUpsert) ClearSentToCustomerAt() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldSentToCustomerAt)
	return u
}

// SetDraftUntil sets the "draft_until" field.
func (u *BillingInvoiceUpsert) SetDraftUntil(v time.Time) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldDraftUntil, v)
	return u
}

// UpdateDraftUntil sets the "draft_until" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateDraftUntil() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldDraftUntil)
	return u
}

// ClearDraftUntil clears the value of the "draft_until" field.
func (u *BillingInvoiceUpsert) ClearDraftUntil() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldDraftUntil)
	return u
}

// SetDueAt sets the "due_at" field.
func (u *BillingInvoiceUpsert) SetDueAt(v time.Time) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldDueAt, v)
	return u
}

// UpdateDueAt sets the "due_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateDueAt() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldDueAt)
	return u
}

// ClearDueAt clears the value of the "due_at" field.
func (u *BillingInvoiceUpsert) ClearDueAt() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldDueAt)
	return u
}

// SetStatus sets the "status" field.
func (u *BillingInvoiceUpsert) SetStatus(v billing.InvoiceStatus) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldStatus, v)
	return u
}

// UpdateStatus sets the "status" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateStatus() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldStatus)
	return u
}

// SetWorkflowConfigID sets the "workflow_config_id" field.
func (u *BillingInvoiceUpsert) SetWorkflowConfigID(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldWorkflowConfigID, v)
	return u
}

// UpdateWorkflowConfigID sets the "workflow_config_id" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateWorkflowConfigID() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldWorkflowConfigID)
	return u
}

// SetInvoicingAppExternalID sets the "invoicing_app_external_id" field.
func (u *BillingInvoiceUpsert) SetInvoicingAppExternalID(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldInvoicingAppExternalID, v)
	return u
}

// UpdateInvoicingAppExternalID sets the "invoicing_app_external_id" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateInvoicingAppExternalID() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldInvoicingAppExternalID)
	return u
}

// ClearInvoicingAppExternalID clears the value of the "invoicing_app_external_id" field.
func (u *BillingInvoiceUpsert) ClearInvoicingAppExternalID() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldInvoicingAppExternalID)
	return u
}

// SetPaymentAppExternalID sets the "payment_app_external_id" field.
func (u *BillingInvoiceUpsert) SetPaymentAppExternalID(v string) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldPaymentAppExternalID, v)
	return u
}

// UpdatePaymentAppExternalID sets the "payment_app_external_id" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdatePaymentAppExternalID() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldPaymentAppExternalID)
	return u
}

// ClearPaymentAppExternalID clears the value of the "payment_app_external_id" field.
func (u *BillingInvoiceUpsert) ClearPaymentAppExternalID() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldPaymentAppExternalID)
	return u
}

// SetPeriodStart sets the "period_start" field.
func (u *BillingInvoiceUpsert) SetPeriodStart(v time.Time) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldPeriodStart, v)
	return u
}

// UpdatePeriodStart sets the "period_start" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdatePeriodStart() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldPeriodStart)
	return u
}

// ClearPeriodStart clears the value of the "period_start" field.
func (u *BillingInvoiceUpsert) ClearPeriodStart() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldPeriodStart)
	return u
}

// SetPeriodEnd sets the "period_end" field.
func (u *BillingInvoiceUpsert) SetPeriodEnd(v time.Time) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldPeriodEnd, v)
	return u
}

// UpdatePeriodEnd sets the "period_end" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdatePeriodEnd() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldPeriodEnd)
	return u
}

// ClearPeriodEnd clears the value of the "period_end" field.
func (u *BillingInvoiceUpsert) ClearPeriodEnd() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldPeriodEnd)
	return u
}

// SetCollectionAt sets the "collection_at" field.
func (u *BillingInvoiceUpsert) SetCollectionAt(v time.Time) *BillingInvoiceUpsert {
	u.Set(billinginvoice.FieldCollectionAt, v)
	return u
}

// UpdateCollectionAt sets the "collection_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsert) UpdateCollectionAt() *BillingInvoiceUpsert {
	u.SetExcluded(billinginvoice.FieldCollectionAt)
	return u
}

// ClearCollectionAt clears the value of the "collection_at" field.
func (u *BillingInvoiceUpsert) ClearCollectionAt() *BillingInvoiceUpsert {
	u.SetNull(billinginvoice.FieldCollectionAt)
	return u
}

// UpdateNewValues updates the mutable fields using the new values that were set on create except the ID field.
// Using this option is equivalent to using:
//
//	client.BillingInvoice.Create().
//		OnConflict(
//			sql.ResolveWithNewValues(),
//			sql.ResolveWith(func(u *sql.UpdateSet) {
//				u.SetIgnore(billinginvoice.FieldID)
//			}),
//		).
//		Exec(ctx)
func (u *BillingInvoiceUpsertOne) UpdateNewValues() *BillingInvoiceUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithNewValues())
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(s *sql.UpdateSet) {
		if _, exists := u.create.mutation.ID(); exists {
			s.SetIgnore(billinginvoice.FieldID)
		}
		if _, exists := u.create.mutation.Namespace(); exists {
			s.SetIgnore(billinginvoice.FieldNamespace)
		}
		if _, exists := u.create.mutation.CreatedAt(); exists {
			s.SetIgnore(billinginvoice.FieldCreatedAt)
		}
		if _, exists := u.create.mutation.CustomerID(); exists {
			s.SetIgnore(billinginvoice.FieldCustomerID)
		}
		if _, exists := u.create.mutation.SourceBillingProfileID(); exists {
			s.SetIgnore(billinginvoice.FieldSourceBillingProfileID)
		}
		if _, exists := u.create.mutation.Currency(); exists {
			s.SetIgnore(billinginvoice.FieldCurrency)
		}
		if _, exists := u.create.mutation.TaxAppID(); exists {
			s.SetIgnore(billinginvoice.FieldTaxAppID)
		}
		if _, exists := u.create.mutation.InvoicingAppID(); exists {
			s.SetIgnore(billinginvoice.FieldInvoicingAppID)
		}
		if _, exists := u.create.mutation.PaymentAppID(); exists {
			s.SetIgnore(billinginvoice.FieldPaymentAppID)
		}
	}))
	return u
}

// Ignore sets each column to itself in case of conflict.
// Using this option is equivalent to using:
//
//	client.BillingInvoice.Create().
//	    OnConflict(sql.ResolveWithIgnore()).
//	    Exec(ctx)
func (u *BillingInvoiceUpsertOne) Ignore() *BillingInvoiceUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithIgnore())
	return u
}

// DoNothing configures the conflict_action to `DO NOTHING`.
// Supported only by SQLite and PostgreSQL.
func (u *BillingInvoiceUpsertOne) DoNothing() *BillingInvoiceUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.DoNothing())
	return u
}

// Update allows overriding fields `UPDATE` values. See the BillingInvoiceCreate.OnConflict
// documentation for more info.
func (u *BillingInvoiceUpsertOne) Update(set func(*BillingInvoiceUpsert)) *BillingInvoiceUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(update *sql.UpdateSet) {
		set(&BillingInvoiceUpsert{UpdateSet: update})
	}))
	return u
}

// SetMetadata sets the "metadata" field.
func (u *BillingInvoiceUpsertOne) SetMetadata(v map[string]string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetMetadata(v)
	})
}

// UpdateMetadata sets the "metadata" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateMetadata() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateMetadata()
	})
}

// ClearMetadata clears the value of the "metadata" field.
func (u *BillingInvoiceUpsertOne) ClearMetadata() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearMetadata()
	})
}

// SetUpdatedAt sets the "updated_at" field.
func (u *BillingInvoiceUpsertOne) SetUpdatedAt(v time.Time) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetUpdatedAt(v)
	})
}

// UpdateUpdatedAt sets the "updated_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateUpdatedAt() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateUpdatedAt()
	})
}

// SetDeletedAt sets the "deleted_at" field.
func (u *BillingInvoiceUpsertOne) SetDeletedAt(v time.Time) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetDeletedAt(v)
	})
}

// UpdateDeletedAt sets the "deleted_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateDeletedAt() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateDeletedAt()
	})
}

// ClearDeletedAt clears the value of the "deleted_at" field.
func (u *BillingInvoiceUpsertOne) ClearDeletedAt() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearDeletedAt()
	})
}

// SetSupplierAddressCountry sets the "supplier_address_country" field.
func (u *BillingInvoiceUpsertOne) SetSupplierAddressCountry(v models.CountryCode) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierAddressCountry(v)
	})
}

// UpdateSupplierAddressCountry sets the "supplier_address_country" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateSupplierAddressCountry() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierAddressCountry()
	})
}

// ClearSupplierAddressCountry clears the value of the "supplier_address_country" field.
func (u *BillingInvoiceUpsertOne) ClearSupplierAddressCountry() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSupplierAddressCountry()
	})
}

// SetSupplierAddressPostalCode sets the "supplier_address_postal_code" field.
func (u *BillingInvoiceUpsertOne) SetSupplierAddressPostalCode(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierAddressPostalCode(v)
	})
}

// UpdateSupplierAddressPostalCode sets the "supplier_address_postal_code" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateSupplierAddressPostalCode() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierAddressPostalCode()
	})
}

// ClearSupplierAddressPostalCode clears the value of the "supplier_address_postal_code" field.
func (u *BillingInvoiceUpsertOne) ClearSupplierAddressPostalCode() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSupplierAddressPostalCode()
	})
}

// SetSupplierAddressState sets the "supplier_address_state" field.
func (u *BillingInvoiceUpsertOne) SetSupplierAddressState(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierAddressState(v)
	})
}

// UpdateSupplierAddressState sets the "supplier_address_state" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateSupplierAddressState() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierAddressState()
	})
}

// ClearSupplierAddressState clears the value of the "supplier_address_state" field.
func (u *BillingInvoiceUpsertOne) ClearSupplierAddressState() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSupplierAddressState()
	})
}

// SetSupplierAddressCity sets the "supplier_address_city" field.
func (u *BillingInvoiceUpsertOne) SetSupplierAddressCity(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierAddressCity(v)
	})
}

// UpdateSupplierAddressCity sets the "supplier_address_city" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateSupplierAddressCity() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierAddressCity()
	})
}

// ClearSupplierAddressCity clears the value of the "supplier_address_city" field.
func (u *BillingInvoiceUpsertOne) ClearSupplierAddressCity() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSupplierAddressCity()
	})
}

// SetSupplierAddressLine1 sets the "supplier_address_line1" field.
func (u *BillingInvoiceUpsertOne) SetSupplierAddressLine1(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierAddressLine1(v)
	})
}

// UpdateSupplierAddressLine1 sets the "supplier_address_line1" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateSupplierAddressLine1() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierAddressLine1()
	})
}

// ClearSupplierAddressLine1 clears the value of the "supplier_address_line1" field.
func (u *BillingInvoiceUpsertOne) ClearSupplierAddressLine1() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSupplierAddressLine1()
	})
}

// SetSupplierAddressLine2 sets the "supplier_address_line2" field.
func (u *BillingInvoiceUpsertOne) SetSupplierAddressLine2(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierAddressLine2(v)
	})
}

// UpdateSupplierAddressLine2 sets the "supplier_address_line2" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateSupplierAddressLine2() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierAddressLine2()
	})
}

// ClearSupplierAddressLine2 clears the value of the "supplier_address_line2" field.
func (u *BillingInvoiceUpsertOne) ClearSupplierAddressLine2() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSupplierAddressLine2()
	})
}

// SetSupplierAddressPhoneNumber sets the "supplier_address_phone_number" field.
func (u *BillingInvoiceUpsertOne) SetSupplierAddressPhoneNumber(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierAddressPhoneNumber(v)
	})
}

// UpdateSupplierAddressPhoneNumber sets the "supplier_address_phone_number" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateSupplierAddressPhoneNumber() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierAddressPhoneNumber()
	})
}

// ClearSupplierAddressPhoneNumber clears the value of the "supplier_address_phone_number" field.
func (u *BillingInvoiceUpsertOne) ClearSupplierAddressPhoneNumber() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSupplierAddressPhoneNumber()
	})
}

// SetCustomerAddressCountry sets the "customer_address_country" field.
func (u *BillingInvoiceUpsertOne) SetCustomerAddressCountry(v models.CountryCode) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerAddressCountry(v)
	})
}

// UpdateCustomerAddressCountry sets the "customer_address_country" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateCustomerAddressCountry() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerAddressCountry()
	})
}

// ClearCustomerAddressCountry clears the value of the "customer_address_country" field.
func (u *BillingInvoiceUpsertOne) ClearCustomerAddressCountry() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearCustomerAddressCountry()
	})
}

// SetCustomerAddressPostalCode sets the "customer_address_postal_code" field.
func (u *BillingInvoiceUpsertOne) SetCustomerAddressPostalCode(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerAddressPostalCode(v)
	})
}

// UpdateCustomerAddressPostalCode sets the "customer_address_postal_code" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateCustomerAddressPostalCode() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerAddressPostalCode()
	})
}

// ClearCustomerAddressPostalCode clears the value of the "customer_address_postal_code" field.
func (u *BillingInvoiceUpsertOne) ClearCustomerAddressPostalCode() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearCustomerAddressPostalCode()
	})
}

// SetCustomerAddressState sets the "customer_address_state" field.
func (u *BillingInvoiceUpsertOne) SetCustomerAddressState(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerAddressState(v)
	})
}

// UpdateCustomerAddressState sets the "customer_address_state" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateCustomerAddressState() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerAddressState()
	})
}

// ClearCustomerAddressState clears the value of the "customer_address_state" field.
func (u *BillingInvoiceUpsertOne) ClearCustomerAddressState() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearCustomerAddressState()
	})
}

// SetCustomerAddressCity sets the "customer_address_city" field.
func (u *BillingInvoiceUpsertOne) SetCustomerAddressCity(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerAddressCity(v)
	})
}

// UpdateCustomerAddressCity sets the "customer_address_city" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateCustomerAddressCity() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerAddressCity()
	})
}

// ClearCustomerAddressCity clears the value of the "customer_address_city" field.
func (u *BillingInvoiceUpsertOne) ClearCustomerAddressCity() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearCustomerAddressCity()
	})
}

// SetCustomerAddressLine1 sets the "customer_address_line1" field.
func (u *BillingInvoiceUpsertOne) SetCustomerAddressLine1(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerAddressLine1(v)
	})
}

// UpdateCustomerAddressLine1 sets the "customer_address_line1" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateCustomerAddressLine1() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerAddressLine1()
	})
}

// ClearCustomerAddressLine1 clears the value of the "customer_address_line1" field.
func (u *BillingInvoiceUpsertOne) ClearCustomerAddressLine1() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearCustomerAddressLine1()
	})
}

// SetCustomerAddressLine2 sets the "customer_address_line2" field.
func (u *BillingInvoiceUpsertOne) SetCustomerAddressLine2(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerAddressLine2(v)
	})
}

// UpdateCustomerAddressLine2 sets the "customer_address_line2" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateCustomerAddressLine2() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerAddressLine2()
	})
}

// ClearCustomerAddressLine2 clears the value of the "customer_address_line2" field.
func (u *BillingInvoiceUpsertOne) ClearCustomerAddressLine2() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearCustomerAddressLine2()
	})
}

// SetCustomerAddressPhoneNumber sets the "customer_address_phone_number" field.
func (u *BillingInvoiceUpsertOne) SetCustomerAddressPhoneNumber(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerAddressPhoneNumber(v)
	})
}

// UpdateCustomerAddressPhoneNumber sets the "customer_address_phone_number" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateCustomerAddressPhoneNumber() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerAddressPhoneNumber()
	})
}

// ClearCustomerAddressPhoneNumber clears the value of the "customer_address_phone_number" field.
func (u *BillingInvoiceUpsertOne) ClearCustomerAddressPhoneNumber() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearCustomerAddressPhoneNumber()
	})
}

// SetAmount sets the "amount" field.
func (u *BillingInvoiceUpsertOne) SetAmount(v alpacadecimal.Decimal) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetAmount(v)
	})
}

// UpdateAmount sets the "amount" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateAmount() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateAmount()
	})
}

// SetTaxesTotal sets the "taxes_total" field.
func (u *BillingInvoiceUpsertOne) SetTaxesTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetTaxesTotal(v)
	})
}

// UpdateTaxesTotal sets the "taxes_total" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateTaxesTotal() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateTaxesTotal()
	})
}

// SetTaxesInclusiveTotal sets the "taxes_inclusive_total" field.
func (u *BillingInvoiceUpsertOne) SetTaxesInclusiveTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetTaxesInclusiveTotal(v)
	})
}

// UpdateTaxesInclusiveTotal sets the "taxes_inclusive_total" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateTaxesInclusiveTotal() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateTaxesInclusiveTotal()
	})
}

// SetTaxesExclusiveTotal sets the "taxes_exclusive_total" field.
func (u *BillingInvoiceUpsertOne) SetTaxesExclusiveTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetTaxesExclusiveTotal(v)
	})
}

// UpdateTaxesExclusiveTotal sets the "taxes_exclusive_total" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateTaxesExclusiveTotal() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateTaxesExclusiveTotal()
	})
}

// SetChargesTotal sets the "charges_total" field.
func (u *BillingInvoiceUpsertOne) SetChargesTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetChargesTotal(v)
	})
}

// UpdateChargesTotal sets the "charges_total" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateChargesTotal() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateChargesTotal()
	})
}

// SetDiscountsTotal sets the "discounts_total" field.
func (u *BillingInvoiceUpsertOne) SetDiscountsTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetDiscountsTotal(v)
	})
}

// UpdateDiscountsTotal sets the "discounts_total" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateDiscountsTotal() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateDiscountsTotal()
	})
}

// SetTotal sets the "total" field.
func (u *BillingInvoiceUpsertOne) SetTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetTotal(v)
	})
}

// UpdateTotal sets the "total" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateTotal() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateTotal()
	})
}

// SetSupplierName sets the "supplier_name" field.
func (u *BillingInvoiceUpsertOne) SetSupplierName(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierName(v)
	})
}

// UpdateSupplierName sets the "supplier_name" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateSupplierName() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierName()
	})
}

// SetSupplierTaxCode sets the "supplier_tax_code" field.
func (u *BillingInvoiceUpsertOne) SetSupplierTaxCode(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierTaxCode(v)
	})
}

// UpdateSupplierTaxCode sets the "supplier_tax_code" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateSupplierTaxCode() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierTaxCode()
	})
}

// ClearSupplierTaxCode clears the value of the "supplier_tax_code" field.
func (u *BillingInvoiceUpsertOne) ClearSupplierTaxCode() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSupplierTaxCode()
	})
}

// SetCustomerName sets the "customer_name" field.
func (u *BillingInvoiceUpsertOne) SetCustomerName(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerName(v)
	})
}

// UpdateCustomerName sets the "customer_name" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateCustomerName() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerName()
	})
}

// SetCustomerUsageAttribution sets the "customer_usage_attribution" field.
func (u *BillingInvoiceUpsertOne) SetCustomerUsageAttribution(v *billing.VersionedCustomerUsageAttribution) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerUsageAttribution(v)
	})
}

// UpdateCustomerUsageAttribution sets the "customer_usage_attribution" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateCustomerUsageAttribution() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerUsageAttribution()
	})
}

// SetNumber sets the "number" field.
func (u *BillingInvoiceUpsertOne) SetNumber(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetNumber(v)
	})
}

// UpdateNumber sets the "number" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateNumber() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateNumber()
	})
}

// SetType sets the "type" field.
func (u *BillingInvoiceUpsertOne) SetType(v billing.InvoiceType) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetType(v)
	})
}

// UpdateType sets the "type" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateType() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateType()
	})
}

// SetDescription sets the "description" field.
func (u *BillingInvoiceUpsertOne) SetDescription(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetDescription(v)
	})
}

// UpdateDescription sets the "description" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateDescription() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateDescription()
	})
}

// ClearDescription clears the value of the "description" field.
func (u *BillingInvoiceUpsertOne) ClearDescription() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearDescription()
	})
}

// SetVoidedAt sets the "voided_at" field.
func (u *BillingInvoiceUpsertOne) SetVoidedAt(v time.Time) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetVoidedAt(v)
	})
}

// UpdateVoidedAt sets the "voided_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateVoidedAt() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateVoidedAt()
	})
}

// ClearVoidedAt clears the value of the "voided_at" field.
func (u *BillingInvoiceUpsertOne) ClearVoidedAt() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearVoidedAt()
	})
}

// SetIssuedAt sets the "issued_at" field.
func (u *BillingInvoiceUpsertOne) SetIssuedAt(v time.Time) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetIssuedAt(v)
	})
}

// UpdateIssuedAt sets the "issued_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateIssuedAt() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateIssuedAt()
	})
}

// ClearIssuedAt clears the value of the "issued_at" field.
func (u *BillingInvoiceUpsertOne) ClearIssuedAt() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearIssuedAt()
	})
}

// SetSentToCustomerAt sets the "sent_to_customer_at" field.
func (u *BillingInvoiceUpsertOne) SetSentToCustomerAt(v time.Time) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSentToCustomerAt(v)
	})
}

// UpdateSentToCustomerAt sets the "sent_to_customer_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateSentToCustomerAt() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSentToCustomerAt()
	})
}

// ClearSentToCustomerAt clears the value of the "sent_to_customer_at" field.
func (u *BillingInvoiceUpsertOne) ClearSentToCustomerAt() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSentToCustomerAt()
	})
}

// SetDraftUntil sets the "draft_until" field.
func (u *BillingInvoiceUpsertOne) SetDraftUntil(v time.Time) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetDraftUntil(v)
	})
}

// UpdateDraftUntil sets the "draft_until" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateDraftUntil() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateDraftUntil()
	})
}

// ClearDraftUntil clears the value of the "draft_until" field.
func (u *BillingInvoiceUpsertOne) ClearDraftUntil() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearDraftUntil()
	})
}

// SetDueAt sets the "due_at" field.
func (u *BillingInvoiceUpsertOne) SetDueAt(v time.Time) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetDueAt(v)
	})
}

// UpdateDueAt sets the "due_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateDueAt() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateDueAt()
	})
}

// ClearDueAt clears the value of the "due_at" field.
func (u *BillingInvoiceUpsertOne) ClearDueAt() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearDueAt()
	})
}

// SetStatus sets the "status" field.
func (u *BillingInvoiceUpsertOne) SetStatus(v billing.InvoiceStatus) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetStatus(v)
	})
}

// UpdateStatus sets the "status" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateStatus() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateStatus()
	})
}

// SetWorkflowConfigID sets the "workflow_config_id" field.
func (u *BillingInvoiceUpsertOne) SetWorkflowConfigID(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetWorkflowConfigID(v)
	})
}

// UpdateWorkflowConfigID sets the "workflow_config_id" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateWorkflowConfigID() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateWorkflowConfigID()
	})
}

// SetInvoicingAppExternalID sets the "invoicing_app_external_id" field.
func (u *BillingInvoiceUpsertOne) SetInvoicingAppExternalID(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetInvoicingAppExternalID(v)
	})
}

// UpdateInvoicingAppExternalID sets the "invoicing_app_external_id" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateInvoicingAppExternalID() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateInvoicingAppExternalID()
	})
}

// ClearInvoicingAppExternalID clears the value of the "invoicing_app_external_id" field.
func (u *BillingInvoiceUpsertOne) ClearInvoicingAppExternalID() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearInvoicingAppExternalID()
	})
}

// SetPaymentAppExternalID sets the "payment_app_external_id" field.
func (u *BillingInvoiceUpsertOne) SetPaymentAppExternalID(v string) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetPaymentAppExternalID(v)
	})
}

// UpdatePaymentAppExternalID sets the "payment_app_external_id" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdatePaymentAppExternalID() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdatePaymentAppExternalID()
	})
}

// ClearPaymentAppExternalID clears the value of the "payment_app_external_id" field.
func (u *BillingInvoiceUpsertOne) ClearPaymentAppExternalID() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearPaymentAppExternalID()
	})
}

// SetPeriodStart sets the "period_start" field.
func (u *BillingInvoiceUpsertOne) SetPeriodStart(v time.Time) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetPeriodStart(v)
	})
}

// UpdatePeriodStart sets the "period_start" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdatePeriodStart() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdatePeriodStart()
	})
}

// ClearPeriodStart clears the value of the "period_start" field.
func (u *BillingInvoiceUpsertOne) ClearPeriodStart() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearPeriodStart()
	})
}

// SetPeriodEnd sets the "period_end" field.
func (u *BillingInvoiceUpsertOne) SetPeriodEnd(v time.Time) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetPeriodEnd(v)
	})
}

// UpdatePeriodEnd sets the "period_end" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdatePeriodEnd() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdatePeriodEnd()
	})
}

// ClearPeriodEnd clears the value of the "period_end" field.
func (u *BillingInvoiceUpsertOne) ClearPeriodEnd() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearPeriodEnd()
	})
}

// SetCollectionAt sets the "collection_at" field.
func (u *BillingInvoiceUpsertOne) SetCollectionAt(v time.Time) *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCollectionAt(v)
	})
}

// UpdateCollectionAt sets the "collection_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsertOne) UpdateCollectionAt() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCollectionAt()
	})
}

// ClearCollectionAt clears the value of the "collection_at" field.
func (u *BillingInvoiceUpsertOne) ClearCollectionAt() *BillingInvoiceUpsertOne {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearCollectionAt()
	})
}

// Exec executes the query.
func (u *BillingInvoiceUpsertOne) Exec(ctx context.Context) error {
	if len(u.create.conflict) == 0 {
		return errors.New("db: missing options for BillingInvoiceCreate.OnConflict")
	}
	return u.create.Exec(ctx)
}

// ExecX is like Exec, but panics if an error occurs.
func (u *BillingInvoiceUpsertOne) ExecX(ctx context.Context) {
	if err := u.create.Exec(ctx); err != nil {
		panic(err)
	}
}

// Exec executes the UPSERT query and returns the inserted/updated ID.
func (u *BillingInvoiceUpsertOne) ID(ctx context.Context) (id string, err error) {
	if u.create.driver.Dialect() == dialect.MySQL {
		// In case of "ON CONFLICT", there is no way to get back non-numeric ID
		// fields from the database since MySQL does not support the RETURNING clause.
		return id, errors.New("db: BillingInvoiceUpsertOne.ID is not supported by MySQL driver. Use BillingInvoiceUpsertOne.Exec instead")
	}
	node, err := u.create.Save(ctx)
	if err != nil {
		return id, err
	}
	return node.ID, nil
}

// IDX is like ID, but panics if an error occurs.
func (u *BillingInvoiceUpsertOne) IDX(ctx context.Context) string {
	id, err := u.ID(ctx)
	if err != nil {
		panic(err)
	}
	return id
}

// BillingInvoiceCreateBulk is the builder for creating many BillingInvoice entities in bulk.
type BillingInvoiceCreateBulk struct {
	config
	err      error
	builders []*BillingInvoiceCreate
	conflict []sql.ConflictOption
}

// Save creates the BillingInvoice entities in the database.
func (bicb *BillingInvoiceCreateBulk) Save(ctx context.Context) ([]*BillingInvoice, error) {
	if bicb.err != nil {
		return nil, bicb.err
	}
	specs := make([]*sqlgraph.CreateSpec, len(bicb.builders))
	nodes := make([]*BillingInvoice, len(bicb.builders))
	mutators := make([]Mutator, len(bicb.builders))
	for i := range bicb.builders {
		func(i int, root context.Context) {
			builder := bicb.builders[i]
			builder.defaults()
			var mut Mutator = MutateFunc(func(ctx context.Context, m Mutation) (Value, error) {
				mutation, ok := m.(*BillingInvoiceMutation)
				if !ok {
					return nil, fmt.Errorf("unexpected mutation type %T", m)
				}
				if err := builder.check(); err != nil {
					return nil, err
				}
				builder.mutation = mutation
				var err error
				nodes[i], specs[i] = builder.createSpec()
				if i < len(mutators)-1 {
					_, err = mutators[i+1].Mutate(root, bicb.builders[i+1].mutation)
				} else {
					spec := &sqlgraph.BatchCreateSpec{Nodes: specs}
					spec.OnConflict = bicb.conflict
					// Invoke the actual operation on the latest mutation in the chain.
					if err = sqlgraph.BatchCreate(ctx, bicb.driver, spec); err != nil {
						if sqlgraph.IsConstraintError(err) {
							err = &ConstraintError{msg: err.Error(), wrap: err}
						}
					}
				}
				if err != nil {
					return nil, err
				}
				mutation.id = &nodes[i].ID
				mutation.done = true
				return nodes[i], nil
			})
			for i := len(builder.hooks) - 1; i >= 0; i-- {
				mut = builder.hooks[i](mut)
			}
			mutators[i] = mut
		}(i, ctx)
	}
	if len(mutators) > 0 {
		if _, err := mutators[0].Mutate(ctx, bicb.builders[0].mutation); err != nil {
			return nil, err
		}
	}
	return nodes, nil
}

// SaveX is like Save, but panics if an error occurs.
func (bicb *BillingInvoiceCreateBulk) SaveX(ctx context.Context) []*BillingInvoice {
	v, err := bicb.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// Exec executes the query.
func (bicb *BillingInvoiceCreateBulk) Exec(ctx context.Context) error {
	_, err := bicb.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (bicb *BillingInvoiceCreateBulk) ExecX(ctx context.Context) {
	if err := bicb.Exec(ctx); err != nil {
		panic(err)
	}
}

// OnConflict allows configuring the `ON CONFLICT` / `ON DUPLICATE KEY` clause
// of the `INSERT` statement. For example:
//
//	client.BillingInvoice.CreateBulk(builders...).
//		OnConflict(
//			// Update the row with the new values
//			// the was proposed for insertion.
//			sql.ResolveWithNewValues(),
//		).
//		// Override some of the fields with custom
//		// update values.
//		Update(func(u *ent.BillingInvoiceUpsert) {
//			SetNamespace(v+v).
//		}).
//		Exec(ctx)
func (bicb *BillingInvoiceCreateBulk) OnConflict(opts ...sql.ConflictOption) *BillingInvoiceUpsertBulk {
	bicb.conflict = opts
	return &BillingInvoiceUpsertBulk{
		create: bicb,
	}
}

// OnConflictColumns calls `OnConflict` and configures the columns
// as conflict target. Using this option is equivalent to using:
//
//	client.BillingInvoice.Create().
//		OnConflict(sql.ConflictColumns(columns...)).
//		Exec(ctx)
func (bicb *BillingInvoiceCreateBulk) OnConflictColumns(columns ...string) *BillingInvoiceUpsertBulk {
	bicb.conflict = append(bicb.conflict, sql.ConflictColumns(columns...))
	return &BillingInvoiceUpsertBulk{
		create: bicb,
	}
}

// BillingInvoiceUpsertBulk is the builder for "upsert"-ing
// a bulk of BillingInvoice nodes.
type BillingInvoiceUpsertBulk struct {
	create *BillingInvoiceCreateBulk
}

// UpdateNewValues updates the mutable fields using the new values that
// were set on create. Using this option is equivalent to using:
//
//	client.BillingInvoice.Create().
//		OnConflict(
//			sql.ResolveWithNewValues(),
//			sql.ResolveWith(func(u *sql.UpdateSet) {
//				u.SetIgnore(billinginvoice.FieldID)
//			}),
//		).
//		Exec(ctx)
func (u *BillingInvoiceUpsertBulk) UpdateNewValues() *BillingInvoiceUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithNewValues())
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(s *sql.UpdateSet) {
		for _, b := range u.create.builders {
			if _, exists := b.mutation.ID(); exists {
				s.SetIgnore(billinginvoice.FieldID)
			}
			if _, exists := b.mutation.Namespace(); exists {
				s.SetIgnore(billinginvoice.FieldNamespace)
			}
			if _, exists := b.mutation.CreatedAt(); exists {
				s.SetIgnore(billinginvoice.FieldCreatedAt)
			}
			if _, exists := b.mutation.CustomerID(); exists {
				s.SetIgnore(billinginvoice.FieldCustomerID)
			}
			if _, exists := b.mutation.SourceBillingProfileID(); exists {
				s.SetIgnore(billinginvoice.FieldSourceBillingProfileID)
			}
			if _, exists := b.mutation.Currency(); exists {
				s.SetIgnore(billinginvoice.FieldCurrency)
			}
			if _, exists := b.mutation.TaxAppID(); exists {
				s.SetIgnore(billinginvoice.FieldTaxAppID)
			}
			if _, exists := b.mutation.InvoicingAppID(); exists {
				s.SetIgnore(billinginvoice.FieldInvoicingAppID)
			}
			if _, exists := b.mutation.PaymentAppID(); exists {
				s.SetIgnore(billinginvoice.FieldPaymentAppID)
			}
		}
	}))
	return u
}

// Ignore sets each column to itself in case of conflict.
// Using this option is equivalent to using:
//
//	client.BillingInvoice.Create().
//		OnConflict(sql.ResolveWithIgnore()).
//		Exec(ctx)
func (u *BillingInvoiceUpsertBulk) Ignore() *BillingInvoiceUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithIgnore())
	return u
}

// DoNothing configures the conflict_action to `DO NOTHING`.
// Supported only by SQLite and PostgreSQL.
func (u *BillingInvoiceUpsertBulk) DoNothing() *BillingInvoiceUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.DoNothing())
	return u
}

// Update allows overriding fields `UPDATE` values. See the BillingInvoiceCreateBulk.OnConflict
// documentation for more info.
func (u *BillingInvoiceUpsertBulk) Update(set func(*BillingInvoiceUpsert)) *BillingInvoiceUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(update *sql.UpdateSet) {
		set(&BillingInvoiceUpsert{UpdateSet: update})
	}))
	return u
}

// SetMetadata sets the "metadata" field.
func (u *BillingInvoiceUpsertBulk) SetMetadata(v map[string]string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetMetadata(v)
	})
}

// UpdateMetadata sets the "metadata" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateMetadata() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateMetadata()
	})
}

// ClearMetadata clears the value of the "metadata" field.
func (u *BillingInvoiceUpsertBulk) ClearMetadata() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearMetadata()
	})
}

// SetUpdatedAt sets the "updated_at" field.
func (u *BillingInvoiceUpsertBulk) SetUpdatedAt(v time.Time) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetUpdatedAt(v)
	})
}

// UpdateUpdatedAt sets the "updated_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateUpdatedAt() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateUpdatedAt()
	})
}

// SetDeletedAt sets the "deleted_at" field.
func (u *BillingInvoiceUpsertBulk) SetDeletedAt(v time.Time) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetDeletedAt(v)
	})
}

// UpdateDeletedAt sets the "deleted_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateDeletedAt() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateDeletedAt()
	})
}

// ClearDeletedAt clears the value of the "deleted_at" field.
func (u *BillingInvoiceUpsertBulk) ClearDeletedAt() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearDeletedAt()
	})
}

// SetSupplierAddressCountry sets the "supplier_address_country" field.
func (u *BillingInvoiceUpsertBulk) SetSupplierAddressCountry(v models.CountryCode) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierAddressCountry(v)
	})
}

// UpdateSupplierAddressCountry sets the "supplier_address_country" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateSupplierAddressCountry() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierAddressCountry()
	})
}

// ClearSupplierAddressCountry clears the value of the "supplier_address_country" field.
func (u *BillingInvoiceUpsertBulk) ClearSupplierAddressCountry() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSupplierAddressCountry()
	})
}

// SetSupplierAddressPostalCode sets the "supplier_address_postal_code" field.
func (u *BillingInvoiceUpsertBulk) SetSupplierAddressPostalCode(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierAddressPostalCode(v)
	})
}

// UpdateSupplierAddressPostalCode sets the "supplier_address_postal_code" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateSupplierAddressPostalCode() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierAddressPostalCode()
	})
}

// ClearSupplierAddressPostalCode clears the value of the "supplier_address_postal_code" field.
func (u *BillingInvoiceUpsertBulk) ClearSupplierAddressPostalCode() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSupplierAddressPostalCode()
	})
}

// SetSupplierAddressState sets the "supplier_address_state" field.
func (u *BillingInvoiceUpsertBulk) SetSupplierAddressState(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierAddressState(v)
	})
}

// UpdateSupplierAddressState sets the "supplier_address_state" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateSupplierAddressState() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierAddressState()
	})
}

// ClearSupplierAddressState clears the value of the "supplier_address_state" field.
func (u *BillingInvoiceUpsertBulk) ClearSupplierAddressState() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSupplierAddressState()
	})
}

// SetSupplierAddressCity sets the "supplier_address_city" field.
func (u *BillingInvoiceUpsertBulk) SetSupplierAddressCity(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierAddressCity(v)
	})
}

// UpdateSupplierAddressCity sets the "supplier_address_city" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateSupplierAddressCity() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierAddressCity()
	})
}

// ClearSupplierAddressCity clears the value of the "supplier_address_city" field.
func (u *BillingInvoiceUpsertBulk) ClearSupplierAddressCity() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSupplierAddressCity()
	})
}

// SetSupplierAddressLine1 sets the "supplier_address_line1" field.
func (u *BillingInvoiceUpsertBulk) SetSupplierAddressLine1(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierAddressLine1(v)
	})
}

// UpdateSupplierAddressLine1 sets the "supplier_address_line1" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateSupplierAddressLine1() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierAddressLine1()
	})
}

// ClearSupplierAddressLine1 clears the value of the "supplier_address_line1" field.
func (u *BillingInvoiceUpsertBulk) ClearSupplierAddressLine1() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSupplierAddressLine1()
	})
}

// SetSupplierAddressLine2 sets the "supplier_address_line2" field.
func (u *BillingInvoiceUpsertBulk) SetSupplierAddressLine2(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierAddressLine2(v)
	})
}

// UpdateSupplierAddressLine2 sets the "supplier_address_line2" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateSupplierAddressLine2() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierAddressLine2()
	})
}

// ClearSupplierAddressLine2 clears the value of the "supplier_address_line2" field.
func (u *BillingInvoiceUpsertBulk) ClearSupplierAddressLine2() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSupplierAddressLine2()
	})
}

// SetSupplierAddressPhoneNumber sets the "supplier_address_phone_number" field.
func (u *BillingInvoiceUpsertBulk) SetSupplierAddressPhoneNumber(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierAddressPhoneNumber(v)
	})
}

// UpdateSupplierAddressPhoneNumber sets the "supplier_address_phone_number" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateSupplierAddressPhoneNumber() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierAddressPhoneNumber()
	})
}

// ClearSupplierAddressPhoneNumber clears the value of the "supplier_address_phone_number" field.
func (u *BillingInvoiceUpsertBulk) ClearSupplierAddressPhoneNumber() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSupplierAddressPhoneNumber()
	})
}

// SetCustomerAddressCountry sets the "customer_address_country" field.
func (u *BillingInvoiceUpsertBulk) SetCustomerAddressCountry(v models.CountryCode) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerAddressCountry(v)
	})
}

// UpdateCustomerAddressCountry sets the "customer_address_country" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateCustomerAddressCountry() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerAddressCountry()
	})
}

// ClearCustomerAddressCountry clears the value of the "customer_address_country" field.
func (u *BillingInvoiceUpsertBulk) ClearCustomerAddressCountry() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearCustomerAddressCountry()
	})
}

// SetCustomerAddressPostalCode sets the "customer_address_postal_code" field.
func (u *BillingInvoiceUpsertBulk) SetCustomerAddressPostalCode(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerAddressPostalCode(v)
	})
}

// UpdateCustomerAddressPostalCode sets the "customer_address_postal_code" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateCustomerAddressPostalCode() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerAddressPostalCode()
	})
}

// ClearCustomerAddressPostalCode clears the value of the "customer_address_postal_code" field.
func (u *BillingInvoiceUpsertBulk) ClearCustomerAddressPostalCode() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearCustomerAddressPostalCode()
	})
}

// SetCustomerAddressState sets the "customer_address_state" field.
func (u *BillingInvoiceUpsertBulk) SetCustomerAddressState(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerAddressState(v)
	})
}

// UpdateCustomerAddressState sets the "customer_address_state" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateCustomerAddressState() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerAddressState()
	})
}

// ClearCustomerAddressState clears the value of the "customer_address_state" field.
func (u *BillingInvoiceUpsertBulk) ClearCustomerAddressState() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearCustomerAddressState()
	})
}

// SetCustomerAddressCity sets the "customer_address_city" field.
func (u *BillingInvoiceUpsertBulk) SetCustomerAddressCity(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerAddressCity(v)
	})
}

// UpdateCustomerAddressCity sets the "customer_address_city" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateCustomerAddressCity() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerAddressCity()
	})
}

// ClearCustomerAddressCity clears the value of the "customer_address_city" field.
func (u *BillingInvoiceUpsertBulk) ClearCustomerAddressCity() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearCustomerAddressCity()
	})
}

// SetCustomerAddressLine1 sets the "customer_address_line1" field.
func (u *BillingInvoiceUpsertBulk) SetCustomerAddressLine1(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerAddressLine1(v)
	})
}

// UpdateCustomerAddressLine1 sets the "customer_address_line1" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateCustomerAddressLine1() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerAddressLine1()
	})
}

// ClearCustomerAddressLine1 clears the value of the "customer_address_line1" field.
func (u *BillingInvoiceUpsertBulk) ClearCustomerAddressLine1() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearCustomerAddressLine1()
	})
}

// SetCustomerAddressLine2 sets the "customer_address_line2" field.
func (u *BillingInvoiceUpsertBulk) SetCustomerAddressLine2(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerAddressLine2(v)
	})
}

// UpdateCustomerAddressLine2 sets the "customer_address_line2" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateCustomerAddressLine2() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerAddressLine2()
	})
}

// ClearCustomerAddressLine2 clears the value of the "customer_address_line2" field.
func (u *BillingInvoiceUpsertBulk) ClearCustomerAddressLine2() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearCustomerAddressLine2()
	})
}

// SetCustomerAddressPhoneNumber sets the "customer_address_phone_number" field.
func (u *BillingInvoiceUpsertBulk) SetCustomerAddressPhoneNumber(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerAddressPhoneNumber(v)
	})
}

// UpdateCustomerAddressPhoneNumber sets the "customer_address_phone_number" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateCustomerAddressPhoneNumber() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerAddressPhoneNumber()
	})
}

// ClearCustomerAddressPhoneNumber clears the value of the "customer_address_phone_number" field.
func (u *BillingInvoiceUpsertBulk) ClearCustomerAddressPhoneNumber() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearCustomerAddressPhoneNumber()
	})
}

// SetAmount sets the "amount" field.
func (u *BillingInvoiceUpsertBulk) SetAmount(v alpacadecimal.Decimal) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetAmount(v)
	})
}

// UpdateAmount sets the "amount" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateAmount() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateAmount()
	})
}

// SetTaxesTotal sets the "taxes_total" field.
func (u *BillingInvoiceUpsertBulk) SetTaxesTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetTaxesTotal(v)
	})
}

// UpdateTaxesTotal sets the "taxes_total" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateTaxesTotal() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateTaxesTotal()
	})
}

// SetTaxesInclusiveTotal sets the "taxes_inclusive_total" field.
func (u *BillingInvoiceUpsertBulk) SetTaxesInclusiveTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetTaxesInclusiveTotal(v)
	})
}

// UpdateTaxesInclusiveTotal sets the "taxes_inclusive_total" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateTaxesInclusiveTotal() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateTaxesInclusiveTotal()
	})
}

// SetTaxesExclusiveTotal sets the "taxes_exclusive_total" field.
func (u *BillingInvoiceUpsertBulk) SetTaxesExclusiveTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetTaxesExclusiveTotal(v)
	})
}

// UpdateTaxesExclusiveTotal sets the "taxes_exclusive_total" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateTaxesExclusiveTotal() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateTaxesExclusiveTotal()
	})
}

// SetChargesTotal sets the "charges_total" field.
func (u *BillingInvoiceUpsertBulk) SetChargesTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetChargesTotal(v)
	})
}

// UpdateChargesTotal sets the "charges_total" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateChargesTotal() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateChargesTotal()
	})
}

// SetDiscountsTotal sets the "discounts_total" field.
func (u *BillingInvoiceUpsertBulk) SetDiscountsTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetDiscountsTotal(v)
	})
}

// UpdateDiscountsTotal sets the "discounts_total" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateDiscountsTotal() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateDiscountsTotal()
	})
}

// SetTotal sets the "total" field.
func (u *BillingInvoiceUpsertBulk) SetTotal(v alpacadecimal.Decimal) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetTotal(v)
	})
}

// UpdateTotal sets the "total" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateTotal() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateTotal()
	})
}

// SetSupplierName sets the "supplier_name" field.
func (u *BillingInvoiceUpsertBulk) SetSupplierName(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierName(v)
	})
}

// UpdateSupplierName sets the "supplier_name" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateSupplierName() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierName()
	})
}

// SetSupplierTaxCode sets the "supplier_tax_code" field.
func (u *BillingInvoiceUpsertBulk) SetSupplierTaxCode(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSupplierTaxCode(v)
	})
}

// UpdateSupplierTaxCode sets the "supplier_tax_code" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateSupplierTaxCode() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSupplierTaxCode()
	})
}

// ClearSupplierTaxCode clears the value of the "supplier_tax_code" field.
func (u *BillingInvoiceUpsertBulk) ClearSupplierTaxCode() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSupplierTaxCode()
	})
}

// SetCustomerName sets the "customer_name" field.
func (u *BillingInvoiceUpsertBulk) SetCustomerName(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerName(v)
	})
}

// UpdateCustomerName sets the "customer_name" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateCustomerName() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerName()
	})
}

// SetCustomerUsageAttribution sets the "customer_usage_attribution" field.
func (u *BillingInvoiceUpsertBulk) SetCustomerUsageAttribution(v *billing.VersionedCustomerUsageAttribution) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCustomerUsageAttribution(v)
	})
}

// UpdateCustomerUsageAttribution sets the "customer_usage_attribution" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateCustomerUsageAttribution() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCustomerUsageAttribution()
	})
}

// SetNumber sets the "number" field.
func (u *BillingInvoiceUpsertBulk) SetNumber(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetNumber(v)
	})
}

// UpdateNumber sets the "number" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateNumber() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateNumber()
	})
}

// SetType sets the "type" field.
func (u *BillingInvoiceUpsertBulk) SetType(v billing.InvoiceType) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetType(v)
	})
}

// UpdateType sets the "type" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateType() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateType()
	})
}

// SetDescription sets the "description" field.
func (u *BillingInvoiceUpsertBulk) SetDescription(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetDescription(v)
	})
}

// UpdateDescription sets the "description" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateDescription() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateDescription()
	})
}

// ClearDescription clears the value of the "description" field.
func (u *BillingInvoiceUpsertBulk) ClearDescription() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearDescription()
	})
}

// SetVoidedAt sets the "voided_at" field.
func (u *BillingInvoiceUpsertBulk) SetVoidedAt(v time.Time) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetVoidedAt(v)
	})
}

// UpdateVoidedAt sets the "voided_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateVoidedAt() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateVoidedAt()
	})
}

// ClearVoidedAt clears the value of the "voided_at" field.
func (u *BillingInvoiceUpsertBulk) ClearVoidedAt() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearVoidedAt()
	})
}

// SetIssuedAt sets the "issued_at" field.
func (u *BillingInvoiceUpsertBulk) SetIssuedAt(v time.Time) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetIssuedAt(v)
	})
}

// UpdateIssuedAt sets the "issued_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateIssuedAt() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateIssuedAt()
	})
}

// ClearIssuedAt clears the value of the "issued_at" field.
func (u *BillingInvoiceUpsertBulk) ClearIssuedAt() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearIssuedAt()
	})
}

// SetSentToCustomerAt sets the "sent_to_customer_at" field.
func (u *BillingInvoiceUpsertBulk) SetSentToCustomerAt(v time.Time) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetSentToCustomerAt(v)
	})
}

// UpdateSentToCustomerAt sets the "sent_to_customer_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateSentToCustomerAt() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateSentToCustomerAt()
	})
}

// ClearSentToCustomerAt clears the value of the "sent_to_customer_at" field.
func (u *BillingInvoiceUpsertBulk) ClearSentToCustomerAt() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearSentToCustomerAt()
	})
}

// SetDraftUntil sets the "draft_until" field.
func (u *BillingInvoiceUpsertBulk) SetDraftUntil(v time.Time) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetDraftUntil(v)
	})
}

// UpdateDraftUntil sets the "draft_until" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateDraftUntil() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateDraftUntil()
	})
}

// ClearDraftUntil clears the value of the "draft_until" field.
func (u *BillingInvoiceUpsertBulk) ClearDraftUntil() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearDraftUntil()
	})
}

// SetDueAt sets the "due_at" field.
func (u *BillingInvoiceUpsertBulk) SetDueAt(v time.Time) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetDueAt(v)
	})
}

// UpdateDueAt sets the "due_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateDueAt() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateDueAt()
	})
}

// ClearDueAt clears the value of the "due_at" field.
func (u *BillingInvoiceUpsertBulk) ClearDueAt() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearDueAt()
	})
}

// SetStatus sets the "status" field.
func (u *BillingInvoiceUpsertBulk) SetStatus(v billing.InvoiceStatus) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetStatus(v)
	})
}

// UpdateStatus sets the "status" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateStatus() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateStatus()
	})
}

// SetWorkflowConfigID sets the "workflow_config_id" field.
func (u *BillingInvoiceUpsertBulk) SetWorkflowConfigID(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetWorkflowConfigID(v)
	})
}

// UpdateWorkflowConfigID sets the "workflow_config_id" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateWorkflowConfigID() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateWorkflowConfigID()
	})
}

// SetInvoicingAppExternalID sets the "invoicing_app_external_id" field.
func (u *BillingInvoiceUpsertBulk) SetInvoicingAppExternalID(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetInvoicingAppExternalID(v)
	})
}

// UpdateInvoicingAppExternalID sets the "invoicing_app_external_id" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateInvoicingAppExternalID() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateInvoicingAppExternalID()
	})
}

// ClearInvoicingAppExternalID clears the value of the "invoicing_app_external_id" field.
func (u *BillingInvoiceUpsertBulk) ClearInvoicingAppExternalID() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearInvoicingAppExternalID()
	})
}

// SetPaymentAppExternalID sets the "payment_app_external_id" field.
func (u *BillingInvoiceUpsertBulk) SetPaymentAppExternalID(v string) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetPaymentAppExternalID(v)
	})
}

// UpdatePaymentAppExternalID sets the "payment_app_external_id" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdatePaymentAppExternalID() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdatePaymentAppExternalID()
	})
}

// ClearPaymentAppExternalID clears the value of the "payment_app_external_id" field.
func (u *BillingInvoiceUpsertBulk) ClearPaymentAppExternalID() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearPaymentAppExternalID()
	})
}

// SetPeriodStart sets the "period_start" field.
func (u *BillingInvoiceUpsertBulk) SetPeriodStart(v time.Time) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetPeriodStart(v)
	})
}

// UpdatePeriodStart sets the "period_start" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdatePeriodStart() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdatePeriodStart()
	})
}

// ClearPeriodStart clears the value of the "period_start" field.
func (u *BillingInvoiceUpsertBulk) ClearPeriodStart() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearPeriodStart()
	})
}

// SetPeriodEnd sets the "period_end" field.
func (u *BillingInvoiceUpsertBulk) SetPeriodEnd(v time.Time) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetPeriodEnd(v)
	})
}

// UpdatePeriodEnd sets the "period_end" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdatePeriodEnd() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdatePeriodEnd()
	})
}

// ClearPeriodEnd clears the value of the "period_end" field.
func (u *BillingInvoiceUpsertBulk) ClearPeriodEnd() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearPeriodEnd()
	})
}

// SetCollectionAt sets the "collection_at" field.
func (u *BillingInvoiceUpsertBulk) SetCollectionAt(v time.Time) *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.SetCollectionAt(v)
	})
}

// UpdateCollectionAt sets the "collection_at" field to the value that was provided on create.
func (u *BillingInvoiceUpsertBulk) UpdateCollectionAt() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.UpdateCollectionAt()
	})
}

// ClearCollectionAt clears the value of the "collection_at" field.
func (u *BillingInvoiceUpsertBulk) ClearCollectionAt() *BillingInvoiceUpsertBulk {
	return u.Update(func(s *BillingInvoiceUpsert) {
		s.ClearCollectionAt()
	})
}

// Exec executes the query.
func (u *BillingInvoiceUpsertBulk) Exec(ctx context.Context) error {
	if u.create.err != nil {
		return u.create.err
	}
	for i, b := range u.create.builders {
		if len(b.conflict) != 0 {
			return fmt.Errorf("db: OnConflict was set for builder %d. Set it on the BillingInvoiceCreateBulk instead", i)
		}
	}
	if len(u.create.conflict) == 0 {
		return errors.New("db: missing options for BillingInvoiceCreateBulk.OnConflict")
	}
	return u.create.Exec(ctx)
}

// ExecX is like Exec, but panics if an error occurs.
func (u *BillingInvoiceUpsertBulk) ExecX(ctx context.Context) {
	if err := u.create.Exec(ctx); err != nil {
		panic(err)
	}
}
