// Code generated by ent, DO NOT EDIT.

package billinginvoiceflatfeelineconfig

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the billinginvoiceflatfeelineconfig type in the database.
	Label = "billing_invoice_flat_fee_line_config"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldNamespace holds the string denoting the namespace field in the database.
	FieldNamespace = "namespace"
	// FieldPerUnitAmount holds the string denoting the per_unit_amount field in the database.
	FieldPerUnitAmount = "per_unit_amount"
	// Table holds the table name of the billinginvoiceflatfeelineconfig in the database.
	Table = "billing_invoice_flat_fee_line_configs"
)

// Columns holds all SQL columns for billinginvoiceflatfeelineconfig fields.
var Columns = []string{
	FieldID,
	FieldNamespace,
	FieldPerUnitAmount,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NamespaceValidator is a validator for the "namespace" field. It is called by the builders before save.
	NamespaceValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() string
)

// OrderOption defines the ordering options for the BillingInvoiceFlatFeeLineConfig queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByNamespace orders the results by the namespace field.
func ByNamespace(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldNamespace, opts...).ToFunc()
}

// ByPerUnitAmount orders the results by the per_unit_amount field.
func ByPerUnitAmount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPerUnitAmount, opts...).ToFunc()
}
