// Code generated by ent, DO NOT EDIT.

package db

import (
	"time"

	"github.com/alpacahq/alpacadecimal"
	"github.com/openmeterio/openmeter/openmeter/billing"
	"github.com/openmeterio/openmeter/openmeter/productcatalog"
	"github.com/openmeterio/openmeter/pkg/currencyx"
	"github.com/openmeterio/openmeter/pkg/datex"
	"github.com/openmeterio/openmeter/pkg/models"
	"github.com/openmeterio/openmeter/pkg/timezone"
)

func (u *AppUpdate) SetOrClearMetadata(value *map[string]string) *AppUpdate {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *AppUpdateOne) SetOrClearMetadata(value *map[string]string) *AppUpdateOne {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *AppUpdate) SetOrClearDeletedAt(value *time.Time) *AppUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *AppUpdateOne) SetOrClearDeletedAt(value *time.Time) *AppUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *AppUpdate) SetOrClearDescription(value *string) *AppUpdate {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *AppUpdateOne) SetOrClearDescription(value *string) *AppUpdateOne {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *AppCustomerUpdate) SetOrClearDeletedAt(value *time.Time) *AppCustomerUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *AppCustomerUpdateOne) SetOrClearDeletedAt(value *time.Time) *AppCustomerUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *AppStripeUpdate) SetOrClearDeletedAt(value *time.Time) *AppStripeUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *AppStripeUpdateOne) SetOrClearDeletedAt(value *time.Time) *AppStripeUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *AppStripeCustomerUpdate) SetOrClearDeletedAt(value *time.Time) *AppStripeCustomerUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *AppStripeCustomerUpdateOne) SetOrClearDeletedAt(value *time.Time) *AppStripeCustomerUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *AppStripeCustomerUpdate) SetOrClearStripeDefaultPaymentMethodID(value *string) *AppStripeCustomerUpdate {
	if value == nil {
		return u.ClearStripeDefaultPaymentMethodID()
	}
	return u.SetStripeDefaultPaymentMethodID(*value)
}

func (u *AppStripeCustomerUpdateOne) SetOrClearStripeDefaultPaymentMethodID(value *string) *AppStripeCustomerUpdateOne {
	if value == nil {
		return u.ClearStripeDefaultPaymentMethodID()
	}
	return u.SetStripeDefaultPaymentMethodID(*value)
}

func (u *BalanceSnapshotUpdate) SetOrClearDeletedAt(value *time.Time) *BalanceSnapshotUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *BalanceSnapshotUpdateOne) SetOrClearDeletedAt(value *time.Time) *BalanceSnapshotUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *BillingCustomerOverrideUpdate) SetOrClearDeletedAt(value *time.Time) *BillingCustomerOverrideUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *BillingCustomerOverrideUpdateOne) SetOrClearDeletedAt(value *time.Time) *BillingCustomerOverrideUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *BillingCustomerOverrideUpdate) SetOrClearBillingProfileID(value *string) *BillingCustomerOverrideUpdate {
	if value == nil {
		return u.ClearBillingProfileID()
	}
	return u.SetBillingProfileID(*value)
}

func (u *BillingCustomerOverrideUpdateOne) SetOrClearBillingProfileID(value *string) *BillingCustomerOverrideUpdateOne {
	if value == nil {
		return u.ClearBillingProfileID()
	}
	return u.SetBillingProfileID(*value)
}

func (u *BillingCustomerOverrideUpdate) SetOrClearCollectionAlignment(value *billing.AlignmentKind) *BillingCustomerOverrideUpdate {
	if value == nil {
		return u.ClearCollectionAlignment()
	}
	return u.SetCollectionAlignment(*value)
}

func (u *BillingCustomerOverrideUpdateOne) SetOrClearCollectionAlignment(value *billing.AlignmentKind) *BillingCustomerOverrideUpdateOne {
	if value == nil {
		return u.ClearCollectionAlignment()
	}
	return u.SetCollectionAlignment(*value)
}

func (u *BillingCustomerOverrideUpdate) SetOrClearLineCollectionPeriod(value *datex.ISOString) *BillingCustomerOverrideUpdate {
	if value == nil {
		return u.ClearLineCollectionPeriod()
	}
	return u.SetLineCollectionPeriod(*value)
}

func (u *BillingCustomerOverrideUpdateOne) SetOrClearLineCollectionPeriod(value *datex.ISOString) *BillingCustomerOverrideUpdateOne {
	if value == nil {
		return u.ClearLineCollectionPeriod()
	}
	return u.SetLineCollectionPeriod(*value)
}

func (u *BillingCustomerOverrideUpdate) SetOrClearInvoiceAutoAdvance(value *bool) *BillingCustomerOverrideUpdate {
	if value == nil {
		return u.ClearInvoiceAutoAdvance()
	}
	return u.SetInvoiceAutoAdvance(*value)
}

func (u *BillingCustomerOverrideUpdateOne) SetOrClearInvoiceAutoAdvance(value *bool) *BillingCustomerOverrideUpdateOne {
	if value == nil {
		return u.ClearInvoiceAutoAdvance()
	}
	return u.SetInvoiceAutoAdvance(*value)
}

func (u *BillingCustomerOverrideUpdate) SetOrClearInvoiceDraftPeriod(value *datex.ISOString) *BillingCustomerOverrideUpdate {
	if value == nil {
		return u.ClearInvoiceDraftPeriod()
	}
	return u.SetInvoiceDraftPeriod(*value)
}

func (u *BillingCustomerOverrideUpdateOne) SetOrClearInvoiceDraftPeriod(value *datex.ISOString) *BillingCustomerOverrideUpdateOne {
	if value == nil {
		return u.ClearInvoiceDraftPeriod()
	}
	return u.SetInvoiceDraftPeriod(*value)
}

func (u *BillingCustomerOverrideUpdate) SetOrClearInvoiceDueAfter(value *datex.ISOString) *BillingCustomerOverrideUpdate {
	if value == nil {
		return u.ClearInvoiceDueAfter()
	}
	return u.SetInvoiceDueAfter(*value)
}

func (u *BillingCustomerOverrideUpdateOne) SetOrClearInvoiceDueAfter(value *datex.ISOString) *BillingCustomerOverrideUpdateOne {
	if value == nil {
		return u.ClearInvoiceDueAfter()
	}
	return u.SetInvoiceDueAfter(*value)
}

func (u *BillingCustomerOverrideUpdate) SetOrClearInvoiceCollectionMethod(value *billing.CollectionMethod) *BillingCustomerOverrideUpdate {
	if value == nil {
		return u.ClearInvoiceCollectionMethod()
	}
	return u.SetInvoiceCollectionMethod(*value)
}

func (u *BillingCustomerOverrideUpdateOne) SetOrClearInvoiceCollectionMethod(value *billing.CollectionMethod) *BillingCustomerOverrideUpdateOne {
	if value == nil {
		return u.ClearInvoiceCollectionMethod()
	}
	return u.SetInvoiceCollectionMethod(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearMetadata(value *map[string]string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearMetadata(value *map[string]string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearDeletedAt(value *time.Time) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearDeletedAt(value *time.Time) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearSupplierAddressCountry(value *models.CountryCode) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearSupplierAddressCountry()
	}
	return u.SetSupplierAddressCountry(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearSupplierAddressCountry(value *models.CountryCode) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearSupplierAddressCountry()
	}
	return u.SetSupplierAddressCountry(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearSupplierAddressPostalCode(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearSupplierAddressPostalCode()
	}
	return u.SetSupplierAddressPostalCode(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearSupplierAddressPostalCode(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearSupplierAddressPostalCode()
	}
	return u.SetSupplierAddressPostalCode(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearSupplierAddressState(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearSupplierAddressState()
	}
	return u.SetSupplierAddressState(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearSupplierAddressState(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearSupplierAddressState()
	}
	return u.SetSupplierAddressState(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearSupplierAddressCity(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearSupplierAddressCity()
	}
	return u.SetSupplierAddressCity(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearSupplierAddressCity(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearSupplierAddressCity()
	}
	return u.SetSupplierAddressCity(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearSupplierAddressLine1(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearSupplierAddressLine1()
	}
	return u.SetSupplierAddressLine1(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearSupplierAddressLine1(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearSupplierAddressLine1()
	}
	return u.SetSupplierAddressLine1(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearSupplierAddressLine2(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearSupplierAddressLine2()
	}
	return u.SetSupplierAddressLine2(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearSupplierAddressLine2(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearSupplierAddressLine2()
	}
	return u.SetSupplierAddressLine2(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearSupplierAddressPhoneNumber(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearSupplierAddressPhoneNumber()
	}
	return u.SetSupplierAddressPhoneNumber(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearSupplierAddressPhoneNumber(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearSupplierAddressPhoneNumber()
	}
	return u.SetSupplierAddressPhoneNumber(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearCustomerAddressCountry(value *models.CountryCode) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearCustomerAddressCountry()
	}
	return u.SetCustomerAddressCountry(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearCustomerAddressCountry(value *models.CountryCode) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearCustomerAddressCountry()
	}
	return u.SetCustomerAddressCountry(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearCustomerAddressPostalCode(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearCustomerAddressPostalCode()
	}
	return u.SetCustomerAddressPostalCode(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearCustomerAddressPostalCode(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearCustomerAddressPostalCode()
	}
	return u.SetCustomerAddressPostalCode(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearCustomerAddressState(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearCustomerAddressState()
	}
	return u.SetCustomerAddressState(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearCustomerAddressState(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearCustomerAddressState()
	}
	return u.SetCustomerAddressState(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearCustomerAddressCity(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearCustomerAddressCity()
	}
	return u.SetCustomerAddressCity(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearCustomerAddressCity(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearCustomerAddressCity()
	}
	return u.SetCustomerAddressCity(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearCustomerAddressLine1(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearCustomerAddressLine1()
	}
	return u.SetCustomerAddressLine1(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearCustomerAddressLine1(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearCustomerAddressLine1()
	}
	return u.SetCustomerAddressLine1(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearCustomerAddressLine2(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearCustomerAddressLine2()
	}
	return u.SetCustomerAddressLine2(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearCustomerAddressLine2(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearCustomerAddressLine2()
	}
	return u.SetCustomerAddressLine2(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearCustomerAddressPhoneNumber(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearCustomerAddressPhoneNumber()
	}
	return u.SetCustomerAddressPhoneNumber(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearCustomerAddressPhoneNumber(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearCustomerAddressPhoneNumber()
	}
	return u.SetCustomerAddressPhoneNumber(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearSupplierTaxCode(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearSupplierTaxCode()
	}
	return u.SetSupplierTaxCode(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearSupplierTaxCode(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearSupplierTaxCode()
	}
	return u.SetSupplierTaxCode(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearCustomerTimezone(value *timezone.Timezone) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearCustomerTimezone()
	}
	return u.SetCustomerTimezone(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearCustomerTimezone(value *timezone.Timezone) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearCustomerTimezone()
	}
	return u.SetCustomerTimezone(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearNumber(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearNumber()
	}
	return u.SetNumber(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearNumber(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearNumber()
	}
	return u.SetNumber(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearDescription(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearDescription(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearVoidedAt(value *time.Time) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearVoidedAt()
	}
	return u.SetVoidedAt(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearVoidedAt(value *time.Time) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearVoidedAt()
	}
	return u.SetVoidedAt(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearIssuedAt(value *time.Time) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearIssuedAt()
	}
	return u.SetIssuedAt(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearIssuedAt(value *time.Time) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearIssuedAt()
	}
	return u.SetIssuedAt(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearDraftUntil(value *time.Time) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearDraftUntil()
	}
	return u.SetDraftUntil(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearDraftUntil(value *time.Time) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearDraftUntil()
	}
	return u.SetDraftUntil(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearDueAt(value *time.Time) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearDueAt()
	}
	return u.SetDueAt(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearDueAt(value *time.Time) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearDueAt()
	}
	return u.SetDueAt(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearInvoicingAppExternalID(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearInvoicingAppExternalID()
	}
	return u.SetInvoicingAppExternalID(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearInvoicingAppExternalID(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearInvoicingAppExternalID()
	}
	return u.SetInvoicingAppExternalID(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearPaymentAppExternalID(value *string) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearPaymentAppExternalID()
	}
	return u.SetPaymentAppExternalID(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearPaymentAppExternalID(value *string) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearPaymentAppExternalID()
	}
	return u.SetPaymentAppExternalID(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearPeriodStart(value *time.Time) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearPeriodStart()
	}
	return u.SetPeriodStart(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearPeriodStart(value *time.Time) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearPeriodStart()
	}
	return u.SetPeriodStart(*value)
}

func (u *BillingInvoiceUpdate) SetOrClearPeriodEnd(value *time.Time) *BillingInvoiceUpdate {
	if value == nil {
		return u.ClearPeriodEnd()
	}
	return u.SetPeriodEnd(*value)
}

func (u *BillingInvoiceUpdateOne) SetOrClearPeriodEnd(value *time.Time) *BillingInvoiceUpdateOne {
	if value == nil {
		return u.ClearPeriodEnd()
	}
	return u.SetPeriodEnd(*value)
}

func (u *BillingInvoiceLineUpdate) SetOrClearMetadata(value *map[string]string) *BillingInvoiceLineUpdate {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *BillingInvoiceLineUpdateOne) SetOrClearMetadata(value *map[string]string) *BillingInvoiceLineUpdateOne {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *BillingInvoiceLineUpdate) SetOrClearDeletedAt(value *time.Time) *BillingInvoiceLineUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *BillingInvoiceLineUpdateOne) SetOrClearDeletedAt(value *time.Time) *BillingInvoiceLineUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *BillingInvoiceLineUpdate) SetOrClearDescription(value *string) *BillingInvoiceLineUpdate {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *BillingInvoiceLineUpdateOne) SetOrClearDescription(value *string) *BillingInvoiceLineUpdateOne {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *BillingInvoiceLineUpdate) SetOrClearParentLineID(value *string) *BillingInvoiceLineUpdate {
	if value == nil {
		return u.ClearParentLineID()
	}
	return u.SetParentLineID(*value)
}

func (u *BillingInvoiceLineUpdateOne) SetOrClearParentLineID(value *string) *BillingInvoiceLineUpdateOne {
	if value == nil {
		return u.ClearParentLineID()
	}
	return u.SetParentLineID(*value)
}

func (u *BillingInvoiceLineUpdate) SetOrClearQuantity(value *alpacadecimal.Decimal) *BillingInvoiceLineUpdate {
	if value == nil {
		return u.ClearQuantity()
	}
	return u.SetQuantity(*value)
}

func (u *BillingInvoiceLineUpdateOne) SetOrClearQuantity(value *alpacadecimal.Decimal) *BillingInvoiceLineUpdateOne {
	if value == nil {
		return u.ClearQuantity()
	}
	return u.SetQuantity(*value)
}

func (u *BillingInvoiceLineUpdate) SetOrClearTaxConfig(value *productcatalog.TaxConfig) *BillingInvoiceLineUpdate {
	if value == nil {
		return u.ClearTaxConfig()
	}
	return u.SetTaxConfig(*value)
}

func (u *BillingInvoiceLineUpdateOne) SetOrClearTaxConfig(value *productcatalog.TaxConfig) *BillingInvoiceLineUpdateOne {
	if value == nil {
		return u.ClearTaxConfig()
	}
	return u.SetTaxConfig(*value)
}

func (u *BillingInvoiceLineUpdate) SetOrClearInvoicingAppExternalID(value *string) *BillingInvoiceLineUpdate {
	if value == nil {
		return u.ClearInvoicingAppExternalID()
	}
	return u.SetInvoicingAppExternalID(*value)
}

func (u *BillingInvoiceLineUpdateOne) SetOrClearInvoicingAppExternalID(value *string) *BillingInvoiceLineUpdateOne {
	if value == nil {
		return u.ClearInvoicingAppExternalID()
	}
	return u.SetInvoicingAppExternalID(*value)
}

func (u *BillingInvoiceLineUpdate) SetOrClearChildUniqueReferenceID(value *string) *BillingInvoiceLineUpdate {
	if value == nil {
		return u.ClearChildUniqueReferenceID()
	}
	return u.SetChildUniqueReferenceID(*value)
}

func (u *BillingInvoiceLineUpdateOne) SetOrClearChildUniqueReferenceID(value *string) *BillingInvoiceLineUpdateOne {
	if value == nil {
		return u.ClearChildUniqueReferenceID()
	}
	return u.SetChildUniqueReferenceID(*value)
}

func (u *BillingInvoiceLineUpdate) SetOrClearSubscriptionID(value *string) *BillingInvoiceLineUpdate {
	if value == nil {
		return u.ClearSubscriptionID()
	}
	return u.SetSubscriptionID(*value)
}

func (u *BillingInvoiceLineUpdateOne) SetOrClearSubscriptionID(value *string) *BillingInvoiceLineUpdateOne {
	if value == nil {
		return u.ClearSubscriptionID()
	}
	return u.SetSubscriptionID(*value)
}

func (u *BillingInvoiceLineUpdate) SetOrClearSubscriptionPhaseID(value *string) *BillingInvoiceLineUpdate {
	if value == nil {
		return u.ClearSubscriptionPhaseID()
	}
	return u.SetSubscriptionPhaseID(*value)
}

func (u *BillingInvoiceLineUpdateOne) SetOrClearSubscriptionPhaseID(value *string) *BillingInvoiceLineUpdateOne {
	if value == nil {
		return u.ClearSubscriptionPhaseID()
	}
	return u.SetSubscriptionPhaseID(*value)
}

func (u *BillingInvoiceLineUpdate) SetOrClearSubscriptionItemID(value *string) *BillingInvoiceLineUpdate {
	if value == nil {
		return u.ClearSubscriptionItemID()
	}
	return u.SetSubscriptionItemID(*value)
}

func (u *BillingInvoiceLineUpdateOne) SetOrClearSubscriptionItemID(value *string) *BillingInvoiceLineUpdateOne {
	if value == nil {
		return u.ClearSubscriptionItemID()
	}
	return u.SetSubscriptionItemID(*value)
}

func (u *BillingInvoiceLineDiscountUpdate) SetOrClearDeletedAt(value *time.Time) *BillingInvoiceLineDiscountUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *BillingInvoiceLineDiscountUpdateOne) SetOrClearDeletedAt(value *time.Time) *BillingInvoiceLineDiscountUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *BillingInvoiceLineDiscountUpdate) SetOrClearChildUniqueReferenceID(value *string) *BillingInvoiceLineDiscountUpdate {
	if value == nil {
		return u.ClearChildUniqueReferenceID()
	}
	return u.SetChildUniqueReferenceID(*value)
}

func (u *BillingInvoiceLineDiscountUpdateOne) SetOrClearChildUniqueReferenceID(value *string) *BillingInvoiceLineDiscountUpdateOne {
	if value == nil {
		return u.ClearChildUniqueReferenceID()
	}
	return u.SetChildUniqueReferenceID(*value)
}

func (u *BillingInvoiceLineDiscountUpdate) SetOrClearDescription(value *string) *BillingInvoiceLineDiscountUpdate {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *BillingInvoiceLineDiscountUpdateOne) SetOrClearDescription(value *string) *BillingInvoiceLineDiscountUpdateOne {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *BillingInvoiceLineDiscountUpdate) SetOrClearInvoicingAppExternalID(value *string) *BillingInvoiceLineDiscountUpdate {
	if value == nil {
		return u.ClearInvoicingAppExternalID()
	}
	return u.SetInvoicingAppExternalID(*value)
}

func (u *BillingInvoiceLineDiscountUpdateOne) SetOrClearInvoicingAppExternalID(value *string) *BillingInvoiceLineDiscountUpdateOne {
	if value == nil {
		return u.ClearInvoicingAppExternalID()
	}
	return u.SetInvoicingAppExternalID(*value)
}

func (u *BillingInvoiceUsageBasedLineConfigUpdate) SetOrClearPreLinePeriodQuantity(value *alpacadecimal.Decimal) *BillingInvoiceUsageBasedLineConfigUpdate {
	if value == nil {
		return u.ClearPreLinePeriodQuantity()
	}
	return u.SetPreLinePeriodQuantity(*value)
}

func (u *BillingInvoiceUsageBasedLineConfigUpdateOne) SetOrClearPreLinePeriodQuantity(value *alpacadecimal.Decimal) *BillingInvoiceUsageBasedLineConfigUpdateOne {
	if value == nil {
		return u.ClearPreLinePeriodQuantity()
	}
	return u.SetPreLinePeriodQuantity(*value)
}

func (u *BillingInvoiceValidationIssueUpdate) SetOrClearDeletedAt(value *time.Time) *BillingInvoiceValidationIssueUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *BillingInvoiceValidationIssueUpdateOne) SetOrClearDeletedAt(value *time.Time) *BillingInvoiceValidationIssueUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *BillingInvoiceValidationIssueUpdate) SetOrClearCode(value *string) *BillingInvoiceValidationIssueUpdate {
	if value == nil {
		return u.ClearCode()
	}
	return u.SetCode(*value)
}

func (u *BillingInvoiceValidationIssueUpdateOne) SetOrClearCode(value *string) *BillingInvoiceValidationIssueUpdateOne {
	if value == nil {
		return u.ClearCode()
	}
	return u.SetCode(*value)
}

func (u *BillingInvoiceValidationIssueUpdate) SetOrClearPath(value *string) *BillingInvoiceValidationIssueUpdate {
	if value == nil {
		return u.ClearPath()
	}
	return u.SetPath(*value)
}

func (u *BillingInvoiceValidationIssueUpdateOne) SetOrClearPath(value *string) *BillingInvoiceValidationIssueUpdateOne {
	if value == nil {
		return u.ClearPath()
	}
	return u.SetPath(*value)
}

func (u *BillingProfileUpdate) SetOrClearMetadata(value *map[string]string) *BillingProfileUpdate {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *BillingProfileUpdateOne) SetOrClearMetadata(value *map[string]string) *BillingProfileUpdateOne {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *BillingProfileUpdate) SetOrClearDeletedAt(value *time.Time) *BillingProfileUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *BillingProfileUpdateOne) SetOrClearDeletedAt(value *time.Time) *BillingProfileUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *BillingProfileUpdate) SetOrClearDescription(value *string) *BillingProfileUpdate {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *BillingProfileUpdateOne) SetOrClearDescription(value *string) *BillingProfileUpdateOne {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *BillingProfileUpdate) SetOrClearSupplierAddressCountry(value *models.CountryCode) *BillingProfileUpdate {
	if value == nil {
		return u.ClearSupplierAddressCountry()
	}
	return u.SetSupplierAddressCountry(*value)
}

func (u *BillingProfileUpdateOne) SetOrClearSupplierAddressCountry(value *models.CountryCode) *BillingProfileUpdateOne {
	if value == nil {
		return u.ClearSupplierAddressCountry()
	}
	return u.SetSupplierAddressCountry(*value)
}

func (u *BillingProfileUpdate) SetOrClearSupplierAddressPostalCode(value *string) *BillingProfileUpdate {
	if value == nil {
		return u.ClearSupplierAddressPostalCode()
	}
	return u.SetSupplierAddressPostalCode(*value)
}

func (u *BillingProfileUpdateOne) SetOrClearSupplierAddressPostalCode(value *string) *BillingProfileUpdateOne {
	if value == nil {
		return u.ClearSupplierAddressPostalCode()
	}
	return u.SetSupplierAddressPostalCode(*value)
}

func (u *BillingProfileUpdate) SetOrClearSupplierAddressState(value *string) *BillingProfileUpdate {
	if value == nil {
		return u.ClearSupplierAddressState()
	}
	return u.SetSupplierAddressState(*value)
}

func (u *BillingProfileUpdateOne) SetOrClearSupplierAddressState(value *string) *BillingProfileUpdateOne {
	if value == nil {
		return u.ClearSupplierAddressState()
	}
	return u.SetSupplierAddressState(*value)
}

func (u *BillingProfileUpdate) SetOrClearSupplierAddressCity(value *string) *BillingProfileUpdate {
	if value == nil {
		return u.ClearSupplierAddressCity()
	}
	return u.SetSupplierAddressCity(*value)
}

func (u *BillingProfileUpdateOne) SetOrClearSupplierAddressCity(value *string) *BillingProfileUpdateOne {
	if value == nil {
		return u.ClearSupplierAddressCity()
	}
	return u.SetSupplierAddressCity(*value)
}

func (u *BillingProfileUpdate) SetOrClearSupplierAddressLine1(value *string) *BillingProfileUpdate {
	if value == nil {
		return u.ClearSupplierAddressLine1()
	}
	return u.SetSupplierAddressLine1(*value)
}

func (u *BillingProfileUpdateOne) SetOrClearSupplierAddressLine1(value *string) *BillingProfileUpdateOne {
	if value == nil {
		return u.ClearSupplierAddressLine1()
	}
	return u.SetSupplierAddressLine1(*value)
}

func (u *BillingProfileUpdate) SetOrClearSupplierAddressLine2(value *string) *BillingProfileUpdate {
	if value == nil {
		return u.ClearSupplierAddressLine2()
	}
	return u.SetSupplierAddressLine2(*value)
}

func (u *BillingProfileUpdateOne) SetOrClearSupplierAddressLine2(value *string) *BillingProfileUpdateOne {
	if value == nil {
		return u.ClearSupplierAddressLine2()
	}
	return u.SetSupplierAddressLine2(*value)
}

func (u *BillingProfileUpdate) SetOrClearSupplierAddressPhoneNumber(value *string) *BillingProfileUpdate {
	if value == nil {
		return u.ClearSupplierAddressPhoneNumber()
	}
	return u.SetSupplierAddressPhoneNumber(*value)
}

func (u *BillingProfileUpdateOne) SetOrClearSupplierAddressPhoneNumber(value *string) *BillingProfileUpdateOne {
	if value == nil {
		return u.ClearSupplierAddressPhoneNumber()
	}
	return u.SetSupplierAddressPhoneNumber(*value)
}

func (u *BillingProfileUpdate) SetOrClearSupplierTaxCode(value *string) *BillingProfileUpdate {
	if value == nil {
		return u.ClearSupplierTaxCode()
	}
	return u.SetSupplierTaxCode(*value)
}

func (u *BillingProfileUpdateOne) SetOrClearSupplierTaxCode(value *string) *BillingProfileUpdateOne {
	if value == nil {
		return u.ClearSupplierTaxCode()
	}
	return u.SetSupplierTaxCode(*value)
}

func (u *BillingWorkflowConfigUpdate) SetOrClearDeletedAt(value *time.Time) *BillingWorkflowConfigUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *BillingWorkflowConfigUpdateOne) SetOrClearDeletedAt(value *time.Time) *BillingWorkflowConfigUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *CustomerUpdate) SetOrClearMetadata(value *map[string]string) *CustomerUpdate {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *CustomerUpdateOne) SetOrClearMetadata(value *map[string]string) *CustomerUpdateOne {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *CustomerUpdate) SetOrClearDeletedAt(value *time.Time) *CustomerUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *CustomerUpdateOne) SetOrClearDeletedAt(value *time.Time) *CustomerUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *CustomerUpdate) SetOrClearDescription(value *string) *CustomerUpdate {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *CustomerUpdateOne) SetOrClearDescription(value *string) *CustomerUpdateOne {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *CustomerUpdate) SetOrClearBillingAddressCountry(value *models.CountryCode) *CustomerUpdate {
	if value == nil {
		return u.ClearBillingAddressCountry()
	}
	return u.SetBillingAddressCountry(*value)
}

func (u *CustomerUpdateOne) SetOrClearBillingAddressCountry(value *models.CountryCode) *CustomerUpdateOne {
	if value == nil {
		return u.ClearBillingAddressCountry()
	}
	return u.SetBillingAddressCountry(*value)
}

func (u *CustomerUpdate) SetOrClearBillingAddressPostalCode(value *string) *CustomerUpdate {
	if value == nil {
		return u.ClearBillingAddressPostalCode()
	}
	return u.SetBillingAddressPostalCode(*value)
}

func (u *CustomerUpdateOne) SetOrClearBillingAddressPostalCode(value *string) *CustomerUpdateOne {
	if value == nil {
		return u.ClearBillingAddressPostalCode()
	}
	return u.SetBillingAddressPostalCode(*value)
}

func (u *CustomerUpdate) SetOrClearBillingAddressState(value *string) *CustomerUpdate {
	if value == nil {
		return u.ClearBillingAddressState()
	}
	return u.SetBillingAddressState(*value)
}

func (u *CustomerUpdateOne) SetOrClearBillingAddressState(value *string) *CustomerUpdateOne {
	if value == nil {
		return u.ClearBillingAddressState()
	}
	return u.SetBillingAddressState(*value)
}

func (u *CustomerUpdate) SetOrClearBillingAddressCity(value *string) *CustomerUpdate {
	if value == nil {
		return u.ClearBillingAddressCity()
	}
	return u.SetBillingAddressCity(*value)
}

func (u *CustomerUpdateOne) SetOrClearBillingAddressCity(value *string) *CustomerUpdateOne {
	if value == nil {
		return u.ClearBillingAddressCity()
	}
	return u.SetBillingAddressCity(*value)
}

func (u *CustomerUpdate) SetOrClearBillingAddressLine1(value *string) *CustomerUpdate {
	if value == nil {
		return u.ClearBillingAddressLine1()
	}
	return u.SetBillingAddressLine1(*value)
}

func (u *CustomerUpdateOne) SetOrClearBillingAddressLine1(value *string) *CustomerUpdateOne {
	if value == nil {
		return u.ClearBillingAddressLine1()
	}
	return u.SetBillingAddressLine1(*value)
}

func (u *CustomerUpdate) SetOrClearBillingAddressLine2(value *string) *CustomerUpdate {
	if value == nil {
		return u.ClearBillingAddressLine2()
	}
	return u.SetBillingAddressLine2(*value)
}

func (u *CustomerUpdateOne) SetOrClearBillingAddressLine2(value *string) *CustomerUpdateOne {
	if value == nil {
		return u.ClearBillingAddressLine2()
	}
	return u.SetBillingAddressLine2(*value)
}

func (u *CustomerUpdate) SetOrClearBillingAddressPhoneNumber(value *string) *CustomerUpdate {
	if value == nil {
		return u.ClearBillingAddressPhoneNumber()
	}
	return u.SetBillingAddressPhoneNumber(*value)
}

func (u *CustomerUpdateOne) SetOrClearBillingAddressPhoneNumber(value *string) *CustomerUpdateOne {
	if value == nil {
		return u.ClearBillingAddressPhoneNumber()
	}
	return u.SetBillingAddressPhoneNumber(*value)
}

func (u *CustomerUpdate) SetOrClearPrimaryEmail(value *string) *CustomerUpdate {
	if value == nil {
		return u.ClearPrimaryEmail()
	}
	return u.SetPrimaryEmail(*value)
}

func (u *CustomerUpdateOne) SetOrClearPrimaryEmail(value *string) *CustomerUpdateOne {
	if value == nil {
		return u.ClearPrimaryEmail()
	}
	return u.SetPrimaryEmail(*value)
}

func (u *CustomerUpdate) SetOrClearTimezone(value *timezone.Timezone) *CustomerUpdate {
	if value == nil {
		return u.ClearTimezone()
	}
	return u.SetTimezone(*value)
}

func (u *CustomerUpdateOne) SetOrClearTimezone(value *timezone.Timezone) *CustomerUpdateOne {
	if value == nil {
		return u.ClearTimezone()
	}
	return u.SetTimezone(*value)
}

func (u *CustomerUpdate) SetOrClearCurrency(value *currencyx.Code) *CustomerUpdate {
	if value == nil {
		return u.ClearCurrency()
	}
	return u.SetCurrency(*value)
}

func (u *CustomerUpdateOne) SetOrClearCurrency(value *currencyx.Code) *CustomerUpdateOne {
	if value == nil {
		return u.ClearCurrency()
	}
	return u.SetCurrency(*value)
}

func (u *CustomerSubjectsUpdate) SetOrClearDeletedAt(value *time.Time) *CustomerSubjectsUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *CustomerSubjectsUpdateOne) SetOrClearDeletedAt(value *time.Time) *CustomerSubjectsUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *EntitlementUpdate) SetOrClearMetadata(value *map[string]string) *EntitlementUpdate {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *EntitlementUpdateOne) SetOrClearMetadata(value *map[string]string) *EntitlementUpdateOne {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *EntitlementUpdate) SetOrClearDeletedAt(value *time.Time) *EntitlementUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *EntitlementUpdateOne) SetOrClearDeletedAt(value *time.Time) *EntitlementUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *EntitlementUpdate) SetOrClearActiveTo(value *time.Time) *EntitlementUpdate {
	if value == nil {
		return u.ClearActiveTo()
	}
	return u.SetActiveTo(*value)
}

func (u *EntitlementUpdateOne) SetOrClearActiveTo(value *time.Time) *EntitlementUpdateOne {
	if value == nil {
		return u.ClearActiveTo()
	}
	return u.SetActiveTo(*value)
}

func (u *EntitlementUpdate) SetOrClearConfig(value *[]uint8) *EntitlementUpdate {
	if value == nil {
		return u.ClearConfig()
	}
	return u.SetConfig(*value)
}

func (u *EntitlementUpdateOne) SetOrClearConfig(value *[]uint8) *EntitlementUpdateOne {
	if value == nil {
		return u.ClearConfig()
	}
	return u.SetConfig(*value)
}

func (u *EntitlementUpdate) SetOrClearUsagePeriodAnchor(value *time.Time) *EntitlementUpdate {
	if value == nil {
		return u.ClearUsagePeriodAnchor()
	}
	return u.SetUsagePeriodAnchor(*value)
}

func (u *EntitlementUpdateOne) SetOrClearUsagePeriodAnchor(value *time.Time) *EntitlementUpdateOne {
	if value == nil {
		return u.ClearUsagePeriodAnchor()
	}
	return u.SetUsagePeriodAnchor(*value)
}

func (u *EntitlementUpdate) SetOrClearCurrentUsagePeriodStart(value *time.Time) *EntitlementUpdate {
	if value == nil {
		return u.ClearCurrentUsagePeriodStart()
	}
	return u.SetCurrentUsagePeriodStart(*value)
}

func (u *EntitlementUpdateOne) SetOrClearCurrentUsagePeriodStart(value *time.Time) *EntitlementUpdateOne {
	if value == nil {
		return u.ClearCurrentUsagePeriodStart()
	}
	return u.SetCurrentUsagePeriodStart(*value)
}

func (u *EntitlementUpdate) SetOrClearCurrentUsagePeriodEnd(value *time.Time) *EntitlementUpdate {
	if value == nil {
		return u.ClearCurrentUsagePeriodEnd()
	}
	return u.SetCurrentUsagePeriodEnd(*value)
}

func (u *EntitlementUpdateOne) SetOrClearCurrentUsagePeriodEnd(value *time.Time) *EntitlementUpdateOne {
	if value == nil {
		return u.ClearCurrentUsagePeriodEnd()
	}
	return u.SetCurrentUsagePeriodEnd(*value)
}

func (u *FeatureUpdate) SetOrClearDeletedAt(value *time.Time) *FeatureUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *FeatureUpdateOne) SetOrClearDeletedAt(value *time.Time) *FeatureUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *FeatureUpdate) SetOrClearMetadata(value *map[string]string) *FeatureUpdate {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *FeatureUpdateOne) SetOrClearMetadata(value *map[string]string) *FeatureUpdateOne {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *FeatureUpdate) SetOrClearMeterGroupByFilters(value *map[string]string) *FeatureUpdate {
	if value == nil {
		return u.ClearMeterGroupByFilters()
	}
	return u.SetMeterGroupByFilters(*value)
}

func (u *FeatureUpdateOne) SetOrClearMeterGroupByFilters(value *map[string]string) *FeatureUpdateOne {
	if value == nil {
		return u.ClearMeterGroupByFilters()
	}
	return u.SetMeterGroupByFilters(*value)
}

func (u *FeatureUpdate) SetOrClearArchivedAt(value *time.Time) *FeatureUpdate {
	if value == nil {
		return u.ClearArchivedAt()
	}
	return u.SetArchivedAt(*value)
}

func (u *FeatureUpdateOne) SetOrClearArchivedAt(value *time.Time) *FeatureUpdateOne {
	if value == nil {
		return u.ClearArchivedAt()
	}
	return u.SetArchivedAt(*value)
}

func (u *GrantUpdate) SetOrClearMetadata(value *map[string]string) *GrantUpdate {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *GrantUpdateOne) SetOrClearMetadata(value *map[string]string) *GrantUpdateOne {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *GrantUpdate) SetOrClearDeletedAt(value *time.Time) *GrantUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *GrantUpdateOne) SetOrClearDeletedAt(value *time.Time) *GrantUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *GrantUpdate) SetOrClearVoidedAt(value *time.Time) *GrantUpdate {
	if value == nil {
		return u.ClearVoidedAt()
	}
	return u.SetVoidedAt(*value)
}

func (u *GrantUpdateOne) SetOrClearVoidedAt(value *time.Time) *GrantUpdateOne {
	if value == nil {
		return u.ClearVoidedAt()
	}
	return u.SetVoidedAt(*value)
}

func (u *NotificationChannelUpdate) SetOrClearDeletedAt(value *time.Time) *NotificationChannelUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *NotificationChannelUpdateOne) SetOrClearDeletedAt(value *time.Time) *NotificationChannelUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *NotificationChannelUpdate) SetOrClearDisabled(value *bool) *NotificationChannelUpdate {
	if value == nil {
		return u.ClearDisabled()
	}
	return u.SetDisabled(*value)
}

func (u *NotificationChannelUpdateOne) SetOrClearDisabled(value *bool) *NotificationChannelUpdateOne {
	if value == nil {
		return u.ClearDisabled()
	}
	return u.SetDisabled(*value)
}

func (u *NotificationEventUpdate) SetOrClearAnnotations(value *map[string]interface{}) *NotificationEventUpdate {
	if value == nil {
		return u.ClearAnnotations()
	}
	return u.SetAnnotations(*value)
}

func (u *NotificationEventUpdateOne) SetOrClearAnnotations(value *map[string]interface{}) *NotificationEventUpdateOne {
	if value == nil {
		return u.ClearAnnotations()
	}
	return u.SetAnnotations(*value)
}

func (u *NotificationEventDeliveryStatusUpdate) SetOrClearReason(value *string) *NotificationEventDeliveryStatusUpdate {
	if value == nil {
		return u.ClearReason()
	}
	return u.SetReason(*value)
}

func (u *NotificationEventDeliveryStatusUpdateOne) SetOrClearReason(value *string) *NotificationEventDeliveryStatusUpdateOne {
	if value == nil {
		return u.ClearReason()
	}
	return u.SetReason(*value)
}

func (u *NotificationRuleUpdate) SetOrClearDeletedAt(value *time.Time) *NotificationRuleUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *NotificationRuleUpdateOne) SetOrClearDeletedAt(value *time.Time) *NotificationRuleUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *NotificationRuleUpdate) SetOrClearDisabled(value *bool) *NotificationRuleUpdate {
	if value == nil {
		return u.ClearDisabled()
	}
	return u.SetDisabled(*value)
}

func (u *NotificationRuleUpdateOne) SetOrClearDisabled(value *bool) *NotificationRuleUpdateOne {
	if value == nil {
		return u.ClearDisabled()
	}
	return u.SetDisabled(*value)
}

func (u *PlanUpdate) SetOrClearMetadata(value *map[string]string) *PlanUpdate {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *PlanUpdateOne) SetOrClearMetadata(value *map[string]string) *PlanUpdateOne {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *PlanUpdate) SetOrClearDeletedAt(value *time.Time) *PlanUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *PlanUpdateOne) SetOrClearDeletedAt(value *time.Time) *PlanUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *PlanUpdate) SetOrClearDescription(value *string) *PlanUpdate {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *PlanUpdateOne) SetOrClearDescription(value *string) *PlanUpdateOne {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *PlanUpdate) SetOrClearEffectiveFrom(value *time.Time) *PlanUpdate {
	if value == nil {
		return u.ClearEffectiveFrom()
	}
	return u.SetEffectiveFrom(*value)
}

func (u *PlanUpdateOne) SetOrClearEffectiveFrom(value *time.Time) *PlanUpdateOne {
	if value == nil {
		return u.ClearEffectiveFrom()
	}
	return u.SetEffectiveFrom(*value)
}

func (u *PlanUpdate) SetOrClearEffectiveTo(value *time.Time) *PlanUpdate {
	if value == nil {
		return u.ClearEffectiveTo()
	}
	return u.SetEffectiveTo(*value)
}

func (u *PlanUpdateOne) SetOrClearEffectiveTo(value *time.Time) *PlanUpdateOne {
	if value == nil {
		return u.ClearEffectiveTo()
	}
	return u.SetEffectiveTo(*value)
}

func (u *PlanPhaseUpdate) SetOrClearMetadata(value *map[string]string) *PlanPhaseUpdate {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *PlanPhaseUpdateOne) SetOrClearMetadata(value *map[string]string) *PlanPhaseUpdateOne {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *PlanPhaseUpdate) SetOrClearDeletedAt(value *time.Time) *PlanPhaseUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *PlanPhaseUpdateOne) SetOrClearDeletedAt(value *time.Time) *PlanPhaseUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *PlanPhaseUpdate) SetOrClearDescription(value *string) *PlanPhaseUpdate {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *PlanPhaseUpdateOne) SetOrClearDescription(value *string) *PlanPhaseUpdateOne {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *PlanPhaseUpdate) SetOrClearDuration(value *datex.ISOString) *PlanPhaseUpdate {
	if value == nil {
		return u.ClearDuration()
	}
	return u.SetDuration(*value)
}

func (u *PlanPhaseUpdateOne) SetOrClearDuration(value *datex.ISOString) *PlanPhaseUpdateOne {
	if value == nil {
		return u.ClearDuration()
	}
	return u.SetDuration(*value)
}

func (u *PlanPhaseUpdate) SetOrClearDiscounts(value *[]productcatalog.Discount) *PlanPhaseUpdate {
	if value == nil {
		return u.ClearDiscounts()
	}
	return u.SetDiscounts(*value)
}

func (u *PlanPhaseUpdateOne) SetOrClearDiscounts(value *[]productcatalog.Discount) *PlanPhaseUpdateOne {
	if value == nil {
		return u.ClearDiscounts()
	}
	return u.SetDiscounts(*value)
}

func (u *PlanRateCardUpdate) SetOrClearMetadata(value *map[string]string) *PlanRateCardUpdate {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *PlanRateCardUpdateOne) SetOrClearMetadata(value *map[string]string) *PlanRateCardUpdateOne {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *PlanRateCardUpdate) SetOrClearDeletedAt(value *time.Time) *PlanRateCardUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *PlanRateCardUpdateOne) SetOrClearDeletedAt(value *time.Time) *PlanRateCardUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *PlanRateCardUpdate) SetOrClearDescription(value *string) *PlanRateCardUpdate {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *PlanRateCardUpdateOne) SetOrClearDescription(value *string) *PlanRateCardUpdateOne {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *PlanRateCardUpdate) SetOrClearFeatureKey(value *string) *PlanRateCardUpdate {
	if value == nil {
		return u.ClearFeatureKey()
	}
	return u.SetFeatureKey(*value)
}

func (u *PlanRateCardUpdateOne) SetOrClearFeatureKey(value *string) *PlanRateCardUpdateOne {
	if value == nil {
		return u.ClearFeatureKey()
	}
	return u.SetFeatureKey(*value)
}

func (u *PlanRateCardUpdate) SetOrClearEntitlementTemplate(value **productcatalog.EntitlementTemplate) *PlanRateCardUpdate {
	if value == nil {
		return u.ClearEntitlementTemplate()
	}
	return u.SetEntitlementTemplate(*value)
}

func (u *PlanRateCardUpdateOne) SetOrClearEntitlementTemplate(value **productcatalog.EntitlementTemplate) *PlanRateCardUpdateOne {
	if value == nil {
		return u.ClearEntitlementTemplate()
	}
	return u.SetEntitlementTemplate(*value)
}

func (u *PlanRateCardUpdate) SetOrClearTaxConfig(value **productcatalog.TaxConfig) *PlanRateCardUpdate {
	if value == nil {
		return u.ClearTaxConfig()
	}
	return u.SetTaxConfig(*value)
}

func (u *PlanRateCardUpdateOne) SetOrClearTaxConfig(value **productcatalog.TaxConfig) *PlanRateCardUpdateOne {
	if value == nil {
		return u.ClearTaxConfig()
	}
	return u.SetTaxConfig(*value)
}

func (u *PlanRateCardUpdate) SetOrClearBillingCadence(value *datex.ISOString) *PlanRateCardUpdate {
	if value == nil {
		return u.ClearBillingCadence()
	}
	return u.SetBillingCadence(*value)
}

func (u *PlanRateCardUpdateOne) SetOrClearBillingCadence(value *datex.ISOString) *PlanRateCardUpdateOne {
	if value == nil {
		return u.ClearBillingCadence()
	}
	return u.SetBillingCadence(*value)
}

func (u *PlanRateCardUpdate) SetOrClearPrice(value **productcatalog.Price) *PlanRateCardUpdate {
	if value == nil {
		return u.ClearPrice()
	}
	return u.SetPrice(*value)
}

func (u *PlanRateCardUpdateOne) SetOrClearPrice(value **productcatalog.Price) *PlanRateCardUpdateOne {
	if value == nil {
		return u.ClearPrice()
	}
	return u.SetPrice(*value)
}

func (u *PlanRateCardUpdate) SetOrClearFeatureID(value *string) *PlanRateCardUpdate {
	if value == nil {
		return u.ClearFeatureID()
	}
	return u.SetFeatureID(*value)
}

func (u *PlanRateCardUpdateOne) SetOrClearFeatureID(value *string) *PlanRateCardUpdateOne {
	if value == nil {
		return u.ClearFeatureID()
	}
	return u.SetFeatureID(*value)
}

func (u *SubscriptionUpdate) SetOrClearDeletedAt(value *time.Time) *SubscriptionUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *SubscriptionUpdateOne) SetOrClearDeletedAt(value *time.Time) *SubscriptionUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *SubscriptionUpdate) SetOrClearMetadata(value *map[string]string) *SubscriptionUpdate {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *SubscriptionUpdateOne) SetOrClearMetadata(value *map[string]string) *SubscriptionUpdateOne {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *SubscriptionUpdate) SetOrClearActiveTo(value *time.Time) *SubscriptionUpdate {
	if value == nil {
		return u.ClearActiveTo()
	}
	return u.SetActiveTo(*value)
}

func (u *SubscriptionUpdateOne) SetOrClearActiveTo(value *time.Time) *SubscriptionUpdateOne {
	if value == nil {
		return u.ClearActiveTo()
	}
	return u.SetActiveTo(*value)
}

func (u *SubscriptionUpdate) SetOrClearDescription(value *string) *SubscriptionUpdate {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *SubscriptionUpdateOne) SetOrClearDescription(value *string) *SubscriptionUpdateOne {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *SubscriptionUpdate) SetOrClearPlanID(value *string) *SubscriptionUpdate {
	if value == nil {
		return u.ClearPlanID()
	}
	return u.SetPlanID(*value)
}

func (u *SubscriptionUpdateOne) SetOrClearPlanID(value *string) *SubscriptionUpdateOne {
	if value == nil {
		return u.ClearPlanID()
	}
	return u.SetPlanID(*value)
}

func (u *SubscriptionItemUpdate) SetOrClearDeletedAt(value *time.Time) *SubscriptionItemUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *SubscriptionItemUpdateOne) SetOrClearDeletedAt(value *time.Time) *SubscriptionItemUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *SubscriptionItemUpdate) SetOrClearMetadata(value *map[string]string) *SubscriptionItemUpdate {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *SubscriptionItemUpdateOne) SetOrClearMetadata(value *map[string]string) *SubscriptionItemUpdateOne {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *SubscriptionItemUpdate) SetOrClearActiveTo(value *time.Time) *SubscriptionItemUpdate {
	if value == nil {
		return u.ClearActiveTo()
	}
	return u.SetActiveTo(*value)
}

func (u *SubscriptionItemUpdateOne) SetOrClearActiveTo(value *time.Time) *SubscriptionItemUpdateOne {
	if value == nil {
		return u.ClearActiveTo()
	}
	return u.SetActiveTo(*value)
}

func (u *SubscriptionItemUpdate) SetOrClearEntitlementID(value *string) *SubscriptionItemUpdate {
	if value == nil {
		return u.ClearEntitlementID()
	}
	return u.SetEntitlementID(*value)
}

func (u *SubscriptionItemUpdateOne) SetOrClearEntitlementID(value *string) *SubscriptionItemUpdateOne {
	if value == nil {
		return u.ClearEntitlementID()
	}
	return u.SetEntitlementID(*value)
}

func (u *SubscriptionItemUpdate) SetOrClearActiveFromOverrideRelativeToPhaseStart(value *datex.ISOString) *SubscriptionItemUpdate {
	if value == nil {
		return u.ClearActiveFromOverrideRelativeToPhaseStart()
	}
	return u.SetActiveFromOverrideRelativeToPhaseStart(*value)
}

func (u *SubscriptionItemUpdateOne) SetOrClearActiveFromOverrideRelativeToPhaseStart(value *datex.ISOString) *SubscriptionItemUpdateOne {
	if value == nil {
		return u.ClearActiveFromOverrideRelativeToPhaseStart()
	}
	return u.SetActiveFromOverrideRelativeToPhaseStart(*value)
}

func (u *SubscriptionItemUpdate) SetOrClearActiveToOverrideRelativeToPhaseStart(value *datex.ISOString) *SubscriptionItemUpdate {
	if value == nil {
		return u.ClearActiveToOverrideRelativeToPhaseStart()
	}
	return u.SetActiveToOverrideRelativeToPhaseStart(*value)
}

func (u *SubscriptionItemUpdateOne) SetOrClearActiveToOverrideRelativeToPhaseStart(value *datex.ISOString) *SubscriptionItemUpdateOne {
	if value == nil {
		return u.ClearActiveToOverrideRelativeToPhaseStart()
	}
	return u.SetActiveToOverrideRelativeToPhaseStart(*value)
}

func (u *SubscriptionItemUpdate) SetOrClearDescription(value *string) *SubscriptionItemUpdate {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *SubscriptionItemUpdateOne) SetOrClearDescription(value *string) *SubscriptionItemUpdateOne {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *SubscriptionItemUpdate) SetOrClearFeatureKey(value *string) *SubscriptionItemUpdate {
	if value == nil {
		return u.ClearFeatureKey()
	}
	return u.SetFeatureKey(*value)
}

func (u *SubscriptionItemUpdateOne) SetOrClearFeatureKey(value *string) *SubscriptionItemUpdateOne {
	if value == nil {
		return u.ClearFeatureKey()
	}
	return u.SetFeatureKey(*value)
}

func (u *SubscriptionItemUpdate) SetOrClearEntitlementTemplate(value **productcatalog.EntitlementTemplate) *SubscriptionItemUpdate {
	if value == nil {
		return u.ClearEntitlementTemplate()
	}
	return u.SetEntitlementTemplate(*value)
}

func (u *SubscriptionItemUpdateOne) SetOrClearEntitlementTemplate(value **productcatalog.EntitlementTemplate) *SubscriptionItemUpdateOne {
	if value == nil {
		return u.ClearEntitlementTemplate()
	}
	return u.SetEntitlementTemplate(*value)
}

func (u *SubscriptionItemUpdate) SetOrClearTaxConfig(value **productcatalog.TaxConfig) *SubscriptionItemUpdate {
	if value == nil {
		return u.ClearTaxConfig()
	}
	return u.SetTaxConfig(*value)
}

func (u *SubscriptionItemUpdateOne) SetOrClearTaxConfig(value **productcatalog.TaxConfig) *SubscriptionItemUpdateOne {
	if value == nil {
		return u.ClearTaxConfig()
	}
	return u.SetTaxConfig(*value)
}

func (u *SubscriptionItemUpdate) SetOrClearBillingCadence(value *datex.ISOString) *SubscriptionItemUpdate {
	if value == nil {
		return u.ClearBillingCadence()
	}
	return u.SetBillingCadence(*value)
}

func (u *SubscriptionItemUpdateOne) SetOrClearBillingCadence(value *datex.ISOString) *SubscriptionItemUpdateOne {
	if value == nil {
		return u.ClearBillingCadence()
	}
	return u.SetBillingCadence(*value)
}

func (u *SubscriptionItemUpdate) SetOrClearPrice(value **productcatalog.Price) *SubscriptionItemUpdate {
	if value == nil {
		return u.ClearPrice()
	}
	return u.SetPrice(*value)
}

func (u *SubscriptionItemUpdateOne) SetOrClearPrice(value **productcatalog.Price) *SubscriptionItemUpdateOne {
	if value == nil {
		return u.ClearPrice()
	}
	return u.SetPrice(*value)
}

func (u *SubscriptionPhaseUpdate) SetOrClearDeletedAt(value *time.Time) *SubscriptionPhaseUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *SubscriptionPhaseUpdateOne) SetOrClearDeletedAt(value *time.Time) *SubscriptionPhaseUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *SubscriptionPhaseUpdate) SetOrClearMetadata(value *map[string]string) *SubscriptionPhaseUpdate {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *SubscriptionPhaseUpdateOne) SetOrClearMetadata(value *map[string]string) *SubscriptionPhaseUpdateOne {
	if value == nil {
		return u.ClearMetadata()
	}
	return u.SetMetadata(*value)
}

func (u *SubscriptionPhaseUpdate) SetOrClearDescription(value *string) *SubscriptionPhaseUpdate {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *SubscriptionPhaseUpdateOne) SetOrClearDescription(value *string) *SubscriptionPhaseUpdateOne {
	if value == nil {
		return u.ClearDescription()
	}
	return u.SetDescription(*value)
}

func (u *UsageResetUpdate) SetOrClearDeletedAt(value *time.Time) *UsageResetUpdate {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}

func (u *UsageResetUpdateOne) SetOrClearDeletedAt(value *time.Time) *UsageResetUpdateOne {
	if value == nil {
		return u.ClearDeletedAt()
	}
	return u.SetDeletedAt(*value)
}
