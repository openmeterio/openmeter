// Code generated by ent, DO NOT EDIT.

package db

import (
	"context"
	"errors"
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
	"github.com/alpacahq/alpacadecimal"
	"github.com/openmeterio/openmeter/openmeter/billing"
	"github.com/openmeterio/openmeter/openmeter/ent/db/billinginvoice"
	"github.com/openmeterio/openmeter/openmeter/ent/db/billinginvoiceline"
	"github.com/openmeterio/openmeter/openmeter/ent/db/billinginvoicevalidationissue"
	"github.com/openmeterio/openmeter/openmeter/ent/db/billingworkflowconfig"
	"github.com/openmeterio/openmeter/openmeter/ent/db/predicate"
	"github.com/openmeterio/openmeter/pkg/models"
)

// BillingInvoiceUpdate is the builder for updating BillingInvoice entities.
type BillingInvoiceUpdate struct {
	config
	hooks    []Hook
	mutation *BillingInvoiceMutation
}

// Where appends a list predicates to the BillingInvoiceUpdate builder.
func (_u *BillingInvoiceUpdate) Where(ps ...predicate.BillingInvoice) *BillingInvoiceUpdate {
	_u.mutation.Where(ps...)
	return _u
}

// SetMetadata sets the "metadata" field.
func (_u *BillingInvoiceUpdate) SetMetadata(v map[string]string) *BillingInvoiceUpdate {
	_u.mutation.SetMetadata(v)
	return _u
}

// ClearMetadata clears the value of the "metadata" field.
func (_u *BillingInvoiceUpdate) ClearMetadata() *BillingInvoiceUpdate {
	_u.mutation.ClearMetadata()
	return _u
}

// SetUpdatedAt sets the "updated_at" field.
func (_u *BillingInvoiceUpdate) SetUpdatedAt(v time.Time) *BillingInvoiceUpdate {
	_u.mutation.SetUpdatedAt(v)
	return _u
}

// SetDeletedAt sets the "deleted_at" field.
func (_u *BillingInvoiceUpdate) SetDeletedAt(v time.Time) *BillingInvoiceUpdate {
	_u.mutation.SetDeletedAt(v)
	return _u
}

// SetNillableDeletedAt sets the "deleted_at" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableDeletedAt(v *time.Time) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetDeletedAt(*v)
	}
	return _u
}

// ClearDeletedAt clears the value of the "deleted_at" field.
func (_u *BillingInvoiceUpdate) ClearDeletedAt() *BillingInvoiceUpdate {
	_u.mutation.ClearDeletedAt()
	return _u
}

// SetSupplierAddressCountry sets the "supplier_address_country" field.
func (_u *BillingInvoiceUpdate) SetSupplierAddressCountry(v models.CountryCode) *BillingInvoiceUpdate {
	_u.mutation.SetSupplierAddressCountry(v)
	return _u
}

// SetNillableSupplierAddressCountry sets the "supplier_address_country" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableSupplierAddressCountry(v *models.CountryCode) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetSupplierAddressCountry(*v)
	}
	return _u
}

// ClearSupplierAddressCountry clears the value of the "supplier_address_country" field.
func (_u *BillingInvoiceUpdate) ClearSupplierAddressCountry() *BillingInvoiceUpdate {
	_u.mutation.ClearSupplierAddressCountry()
	return _u
}

// SetSupplierAddressPostalCode sets the "supplier_address_postal_code" field.
func (_u *BillingInvoiceUpdate) SetSupplierAddressPostalCode(v string) *BillingInvoiceUpdate {
	_u.mutation.SetSupplierAddressPostalCode(v)
	return _u
}

// SetNillableSupplierAddressPostalCode sets the "supplier_address_postal_code" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableSupplierAddressPostalCode(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetSupplierAddressPostalCode(*v)
	}
	return _u
}

// ClearSupplierAddressPostalCode clears the value of the "supplier_address_postal_code" field.
func (_u *BillingInvoiceUpdate) ClearSupplierAddressPostalCode() *BillingInvoiceUpdate {
	_u.mutation.ClearSupplierAddressPostalCode()
	return _u
}

// SetSupplierAddressState sets the "supplier_address_state" field.
func (_u *BillingInvoiceUpdate) SetSupplierAddressState(v string) *BillingInvoiceUpdate {
	_u.mutation.SetSupplierAddressState(v)
	return _u
}

// SetNillableSupplierAddressState sets the "supplier_address_state" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableSupplierAddressState(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetSupplierAddressState(*v)
	}
	return _u
}

// ClearSupplierAddressState clears the value of the "supplier_address_state" field.
func (_u *BillingInvoiceUpdate) ClearSupplierAddressState() *BillingInvoiceUpdate {
	_u.mutation.ClearSupplierAddressState()
	return _u
}

// SetSupplierAddressCity sets the "supplier_address_city" field.
func (_u *BillingInvoiceUpdate) SetSupplierAddressCity(v string) *BillingInvoiceUpdate {
	_u.mutation.SetSupplierAddressCity(v)
	return _u
}

// SetNillableSupplierAddressCity sets the "supplier_address_city" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableSupplierAddressCity(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetSupplierAddressCity(*v)
	}
	return _u
}

// ClearSupplierAddressCity clears the value of the "supplier_address_city" field.
func (_u *BillingInvoiceUpdate) ClearSupplierAddressCity() *BillingInvoiceUpdate {
	_u.mutation.ClearSupplierAddressCity()
	return _u
}

// SetSupplierAddressLine1 sets the "supplier_address_line1" field.
func (_u *BillingInvoiceUpdate) SetSupplierAddressLine1(v string) *BillingInvoiceUpdate {
	_u.mutation.SetSupplierAddressLine1(v)
	return _u
}

// SetNillableSupplierAddressLine1 sets the "supplier_address_line1" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableSupplierAddressLine1(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetSupplierAddressLine1(*v)
	}
	return _u
}

// ClearSupplierAddressLine1 clears the value of the "supplier_address_line1" field.
func (_u *BillingInvoiceUpdate) ClearSupplierAddressLine1() *BillingInvoiceUpdate {
	_u.mutation.ClearSupplierAddressLine1()
	return _u
}

// SetSupplierAddressLine2 sets the "supplier_address_line2" field.
func (_u *BillingInvoiceUpdate) SetSupplierAddressLine2(v string) *BillingInvoiceUpdate {
	_u.mutation.SetSupplierAddressLine2(v)
	return _u
}

// SetNillableSupplierAddressLine2 sets the "supplier_address_line2" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableSupplierAddressLine2(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetSupplierAddressLine2(*v)
	}
	return _u
}

// ClearSupplierAddressLine2 clears the value of the "supplier_address_line2" field.
func (_u *BillingInvoiceUpdate) ClearSupplierAddressLine2() *BillingInvoiceUpdate {
	_u.mutation.ClearSupplierAddressLine2()
	return _u
}

// SetSupplierAddressPhoneNumber sets the "supplier_address_phone_number" field.
func (_u *BillingInvoiceUpdate) SetSupplierAddressPhoneNumber(v string) *BillingInvoiceUpdate {
	_u.mutation.SetSupplierAddressPhoneNumber(v)
	return _u
}

// SetNillableSupplierAddressPhoneNumber sets the "supplier_address_phone_number" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableSupplierAddressPhoneNumber(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetSupplierAddressPhoneNumber(*v)
	}
	return _u
}

// ClearSupplierAddressPhoneNumber clears the value of the "supplier_address_phone_number" field.
func (_u *BillingInvoiceUpdate) ClearSupplierAddressPhoneNumber() *BillingInvoiceUpdate {
	_u.mutation.ClearSupplierAddressPhoneNumber()
	return _u
}

// SetCustomerAddressCountry sets the "customer_address_country" field.
func (_u *BillingInvoiceUpdate) SetCustomerAddressCountry(v models.CountryCode) *BillingInvoiceUpdate {
	_u.mutation.SetCustomerAddressCountry(v)
	return _u
}

// SetNillableCustomerAddressCountry sets the "customer_address_country" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableCustomerAddressCountry(v *models.CountryCode) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetCustomerAddressCountry(*v)
	}
	return _u
}

// ClearCustomerAddressCountry clears the value of the "customer_address_country" field.
func (_u *BillingInvoiceUpdate) ClearCustomerAddressCountry() *BillingInvoiceUpdate {
	_u.mutation.ClearCustomerAddressCountry()
	return _u
}

// SetCustomerAddressPostalCode sets the "customer_address_postal_code" field.
func (_u *BillingInvoiceUpdate) SetCustomerAddressPostalCode(v string) *BillingInvoiceUpdate {
	_u.mutation.SetCustomerAddressPostalCode(v)
	return _u
}

// SetNillableCustomerAddressPostalCode sets the "customer_address_postal_code" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableCustomerAddressPostalCode(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetCustomerAddressPostalCode(*v)
	}
	return _u
}

// ClearCustomerAddressPostalCode clears the value of the "customer_address_postal_code" field.
func (_u *BillingInvoiceUpdate) ClearCustomerAddressPostalCode() *BillingInvoiceUpdate {
	_u.mutation.ClearCustomerAddressPostalCode()
	return _u
}

// SetCustomerAddressState sets the "customer_address_state" field.
func (_u *BillingInvoiceUpdate) SetCustomerAddressState(v string) *BillingInvoiceUpdate {
	_u.mutation.SetCustomerAddressState(v)
	return _u
}

// SetNillableCustomerAddressState sets the "customer_address_state" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableCustomerAddressState(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetCustomerAddressState(*v)
	}
	return _u
}

// ClearCustomerAddressState clears the value of the "customer_address_state" field.
func (_u *BillingInvoiceUpdate) ClearCustomerAddressState() *BillingInvoiceUpdate {
	_u.mutation.ClearCustomerAddressState()
	return _u
}

// SetCustomerAddressCity sets the "customer_address_city" field.
func (_u *BillingInvoiceUpdate) SetCustomerAddressCity(v string) *BillingInvoiceUpdate {
	_u.mutation.SetCustomerAddressCity(v)
	return _u
}

// SetNillableCustomerAddressCity sets the "customer_address_city" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableCustomerAddressCity(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetCustomerAddressCity(*v)
	}
	return _u
}

// ClearCustomerAddressCity clears the value of the "customer_address_city" field.
func (_u *BillingInvoiceUpdate) ClearCustomerAddressCity() *BillingInvoiceUpdate {
	_u.mutation.ClearCustomerAddressCity()
	return _u
}

// SetCustomerAddressLine1 sets the "customer_address_line1" field.
func (_u *BillingInvoiceUpdate) SetCustomerAddressLine1(v string) *BillingInvoiceUpdate {
	_u.mutation.SetCustomerAddressLine1(v)
	return _u
}

// SetNillableCustomerAddressLine1 sets the "customer_address_line1" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableCustomerAddressLine1(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetCustomerAddressLine1(*v)
	}
	return _u
}

// ClearCustomerAddressLine1 clears the value of the "customer_address_line1" field.
func (_u *BillingInvoiceUpdate) ClearCustomerAddressLine1() *BillingInvoiceUpdate {
	_u.mutation.ClearCustomerAddressLine1()
	return _u
}

// SetCustomerAddressLine2 sets the "customer_address_line2" field.
func (_u *BillingInvoiceUpdate) SetCustomerAddressLine2(v string) *BillingInvoiceUpdate {
	_u.mutation.SetCustomerAddressLine2(v)
	return _u
}

// SetNillableCustomerAddressLine2 sets the "customer_address_line2" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableCustomerAddressLine2(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetCustomerAddressLine2(*v)
	}
	return _u
}

// ClearCustomerAddressLine2 clears the value of the "customer_address_line2" field.
func (_u *BillingInvoiceUpdate) ClearCustomerAddressLine2() *BillingInvoiceUpdate {
	_u.mutation.ClearCustomerAddressLine2()
	return _u
}

// SetCustomerAddressPhoneNumber sets the "customer_address_phone_number" field.
func (_u *BillingInvoiceUpdate) SetCustomerAddressPhoneNumber(v string) *BillingInvoiceUpdate {
	_u.mutation.SetCustomerAddressPhoneNumber(v)
	return _u
}

// SetNillableCustomerAddressPhoneNumber sets the "customer_address_phone_number" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableCustomerAddressPhoneNumber(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetCustomerAddressPhoneNumber(*v)
	}
	return _u
}

// ClearCustomerAddressPhoneNumber clears the value of the "customer_address_phone_number" field.
func (_u *BillingInvoiceUpdate) ClearCustomerAddressPhoneNumber() *BillingInvoiceUpdate {
	_u.mutation.ClearCustomerAddressPhoneNumber()
	return _u
}

// SetAmount sets the "amount" field.
func (_u *BillingInvoiceUpdate) SetAmount(v alpacadecimal.Decimal) *BillingInvoiceUpdate {
	_u.mutation.SetAmount(v)
	return _u
}

// SetNillableAmount sets the "amount" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableAmount(v *alpacadecimal.Decimal) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetAmount(*v)
	}
	return _u
}

// SetTaxesTotal sets the "taxes_total" field.
func (_u *BillingInvoiceUpdate) SetTaxesTotal(v alpacadecimal.Decimal) *BillingInvoiceUpdate {
	_u.mutation.SetTaxesTotal(v)
	return _u
}

// SetNillableTaxesTotal sets the "taxes_total" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableTaxesTotal(v *alpacadecimal.Decimal) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetTaxesTotal(*v)
	}
	return _u
}

// SetTaxesInclusiveTotal sets the "taxes_inclusive_total" field.
func (_u *BillingInvoiceUpdate) SetTaxesInclusiveTotal(v alpacadecimal.Decimal) *BillingInvoiceUpdate {
	_u.mutation.SetTaxesInclusiveTotal(v)
	return _u
}

// SetNillableTaxesInclusiveTotal sets the "taxes_inclusive_total" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableTaxesInclusiveTotal(v *alpacadecimal.Decimal) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetTaxesInclusiveTotal(*v)
	}
	return _u
}

// SetTaxesExclusiveTotal sets the "taxes_exclusive_total" field.
func (_u *BillingInvoiceUpdate) SetTaxesExclusiveTotal(v alpacadecimal.Decimal) *BillingInvoiceUpdate {
	_u.mutation.SetTaxesExclusiveTotal(v)
	return _u
}

// SetNillableTaxesExclusiveTotal sets the "taxes_exclusive_total" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableTaxesExclusiveTotal(v *alpacadecimal.Decimal) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetTaxesExclusiveTotal(*v)
	}
	return _u
}

// SetChargesTotal sets the "charges_total" field.
func (_u *BillingInvoiceUpdate) SetChargesTotal(v alpacadecimal.Decimal) *BillingInvoiceUpdate {
	_u.mutation.SetChargesTotal(v)
	return _u
}

// SetNillableChargesTotal sets the "charges_total" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableChargesTotal(v *alpacadecimal.Decimal) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetChargesTotal(*v)
	}
	return _u
}

// SetDiscountsTotal sets the "discounts_total" field.
func (_u *BillingInvoiceUpdate) SetDiscountsTotal(v alpacadecimal.Decimal) *BillingInvoiceUpdate {
	_u.mutation.SetDiscountsTotal(v)
	return _u
}

// SetNillableDiscountsTotal sets the "discounts_total" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableDiscountsTotal(v *alpacadecimal.Decimal) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetDiscountsTotal(*v)
	}
	return _u
}

// SetTotal sets the "total" field.
func (_u *BillingInvoiceUpdate) SetTotal(v alpacadecimal.Decimal) *BillingInvoiceUpdate {
	_u.mutation.SetTotal(v)
	return _u
}

// SetNillableTotal sets the "total" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableTotal(v *alpacadecimal.Decimal) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetTotal(*v)
	}
	return _u
}

// SetSupplierName sets the "supplier_name" field.
func (_u *BillingInvoiceUpdate) SetSupplierName(v string) *BillingInvoiceUpdate {
	_u.mutation.SetSupplierName(v)
	return _u
}

// SetNillableSupplierName sets the "supplier_name" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableSupplierName(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetSupplierName(*v)
	}
	return _u
}

// SetSupplierTaxCode sets the "supplier_tax_code" field.
func (_u *BillingInvoiceUpdate) SetSupplierTaxCode(v string) *BillingInvoiceUpdate {
	_u.mutation.SetSupplierTaxCode(v)
	return _u
}

// SetNillableSupplierTaxCode sets the "supplier_tax_code" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableSupplierTaxCode(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetSupplierTaxCode(*v)
	}
	return _u
}

// ClearSupplierTaxCode clears the value of the "supplier_tax_code" field.
func (_u *BillingInvoiceUpdate) ClearSupplierTaxCode() *BillingInvoiceUpdate {
	_u.mutation.ClearSupplierTaxCode()
	return _u
}

// SetCustomerName sets the "customer_name" field.
func (_u *BillingInvoiceUpdate) SetCustomerName(v string) *BillingInvoiceUpdate {
	_u.mutation.SetCustomerName(v)
	return _u
}

// SetNillableCustomerName sets the "customer_name" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableCustomerName(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetCustomerName(*v)
	}
	return _u
}

// SetCustomerUsageAttribution sets the "customer_usage_attribution" field.
func (_u *BillingInvoiceUpdate) SetCustomerUsageAttribution(v *billing.VersionedCustomerUsageAttribution) *BillingInvoiceUpdate {
	_u.mutation.SetCustomerUsageAttribution(v)
	return _u
}

// SetNumber sets the "number" field.
func (_u *BillingInvoiceUpdate) SetNumber(v string) *BillingInvoiceUpdate {
	_u.mutation.SetNumber(v)
	return _u
}

// SetNillableNumber sets the "number" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableNumber(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetNumber(*v)
	}
	return _u
}

// SetType sets the "type" field.
func (_u *BillingInvoiceUpdate) SetType(v billing.InvoiceType) *BillingInvoiceUpdate {
	_u.mutation.SetType(v)
	return _u
}

// SetNillableType sets the "type" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableType(v *billing.InvoiceType) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetType(*v)
	}
	return _u
}

// SetDescription sets the "description" field.
func (_u *BillingInvoiceUpdate) SetDescription(v string) *BillingInvoiceUpdate {
	_u.mutation.SetDescription(v)
	return _u
}

// SetNillableDescription sets the "description" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableDescription(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetDescription(*v)
	}
	return _u
}

// ClearDescription clears the value of the "description" field.
func (_u *BillingInvoiceUpdate) ClearDescription() *BillingInvoiceUpdate {
	_u.mutation.ClearDescription()
	return _u
}

// SetVoidedAt sets the "voided_at" field.
func (_u *BillingInvoiceUpdate) SetVoidedAt(v time.Time) *BillingInvoiceUpdate {
	_u.mutation.SetVoidedAt(v)
	return _u
}

// SetNillableVoidedAt sets the "voided_at" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableVoidedAt(v *time.Time) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetVoidedAt(*v)
	}
	return _u
}

// ClearVoidedAt clears the value of the "voided_at" field.
func (_u *BillingInvoiceUpdate) ClearVoidedAt() *BillingInvoiceUpdate {
	_u.mutation.ClearVoidedAt()
	return _u
}

// SetIssuedAt sets the "issued_at" field.
func (_u *BillingInvoiceUpdate) SetIssuedAt(v time.Time) *BillingInvoiceUpdate {
	_u.mutation.SetIssuedAt(v)
	return _u
}

// SetNillableIssuedAt sets the "issued_at" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableIssuedAt(v *time.Time) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetIssuedAt(*v)
	}
	return _u
}

// ClearIssuedAt clears the value of the "issued_at" field.
func (_u *BillingInvoiceUpdate) ClearIssuedAt() *BillingInvoiceUpdate {
	_u.mutation.ClearIssuedAt()
	return _u
}

// SetSentToCustomerAt sets the "sent_to_customer_at" field.
func (_u *BillingInvoiceUpdate) SetSentToCustomerAt(v time.Time) *BillingInvoiceUpdate {
	_u.mutation.SetSentToCustomerAt(v)
	return _u
}

// SetNillableSentToCustomerAt sets the "sent_to_customer_at" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableSentToCustomerAt(v *time.Time) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetSentToCustomerAt(*v)
	}
	return _u
}

// ClearSentToCustomerAt clears the value of the "sent_to_customer_at" field.
func (_u *BillingInvoiceUpdate) ClearSentToCustomerAt() *BillingInvoiceUpdate {
	_u.mutation.ClearSentToCustomerAt()
	return _u
}

// SetDraftUntil sets the "draft_until" field.
func (_u *BillingInvoiceUpdate) SetDraftUntil(v time.Time) *BillingInvoiceUpdate {
	_u.mutation.SetDraftUntil(v)
	return _u
}

// SetNillableDraftUntil sets the "draft_until" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableDraftUntil(v *time.Time) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetDraftUntil(*v)
	}
	return _u
}

// ClearDraftUntil clears the value of the "draft_until" field.
func (_u *BillingInvoiceUpdate) ClearDraftUntil() *BillingInvoiceUpdate {
	_u.mutation.ClearDraftUntil()
	return _u
}

// SetDueAt sets the "due_at" field.
func (_u *BillingInvoiceUpdate) SetDueAt(v time.Time) *BillingInvoiceUpdate {
	_u.mutation.SetDueAt(v)
	return _u
}

// SetNillableDueAt sets the "due_at" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableDueAt(v *time.Time) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetDueAt(*v)
	}
	return _u
}

// ClearDueAt clears the value of the "due_at" field.
func (_u *BillingInvoiceUpdate) ClearDueAt() *BillingInvoiceUpdate {
	_u.mutation.ClearDueAt()
	return _u
}

// SetStatus sets the "status" field.
func (_u *BillingInvoiceUpdate) SetStatus(v billing.InvoiceStatus) *BillingInvoiceUpdate {
	_u.mutation.SetStatus(v)
	return _u
}

// SetNillableStatus sets the "status" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableStatus(v *billing.InvoiceStatus) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetStatus(*v)
	}
	return _u
}

// SetStatusDetailsCache sets the "status_details_cache" field.
func (_u *BillingInvoiceUpdate) SetStatusDetailsCache(v billing.InvoiceStatusDetails) *BillingInvoiceUpdate {
	_u.mutation.SetStatusDetailsCache(v)
	return _u
}

// SetNillableStatusDetailsCache sets the "status_details_cache" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableStatusDetailsCache(v *billing.InvoiceStatusDetails) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetStatusDetailsCache(*v)
	}
	return _u
}

// ClearStatusDetailsCache clears the value of the "status_details_cache" field.
func (_u *BillingInvoiceUpdate) ClearStatusDetailsCache() *BillingInvoiceUpdate {
	_u.mutation.ClearStatusDetailsCache()
	return _u
}

// SetWorkflowConfigID sets the "workflow_config_id" field.
func (_u *BillingInvoiceUpdate) SetWorkflowConfigID(v string) *BillingInvoiceUpdate {
	_u.mutation.SetWorkflowConfigID(v)
	return _u
}

// SetNillableWorkflowConfigID sets the "workflow_config_id" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableWorkflowConfigID(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetWorkflowConfigID(*v)
	}
	return _u
}

// SetInvoicingAppExternalID sets the "invoicing_app_external_id" field.
func (_u *BillingInvoiceUpdate) SetInvoicingAppExternalID(v string) *BillingInvoiceUpdate {
	_u.mutation.SetInvoicingAppExternalID(v)
	return _u
}

// SetNillableInvoicingAppExternalID sets the "invoicing_app_external_id" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableInvoicingAppExternalID(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetInvoicingAppExternalID(*v)
	}
	return _u
}

// ClearInvoicingAppExternalID clears the value of the "invoicing_app_external_id" field.
func (_u *BillingInvoiceUpdate) ClearInvoicingAppExternalID() *BillingInvoiceUpdate {
	_u.mutation.ClearInvoicingAppExternalID()
	return _u
}

// SetPaymentAppExternalID sets the "payment_app_external_id" field.
func (_u *BillingInvoiceUpdate) SetPaymentAppExternalID(v string) *BillingInvoiceUpdate {
	_u.mutation.SetPaymentAppExternalID(v)
	return _u
}

// SetNillablePaymentAppExternalID sets the "payment_app_external_id" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillablePaymentAppExternalID(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetPaymentAppExternalID(*v)
	}
	return _u
}

// ClearPaymentAppExternalID clears the value of the "payment_app_external_id" field.
func (_u *BillingInvoiceUpdate) ClearPaymentAppExternalID() *BillingInvoiceUpdate {
	_u.mutation.ClearPaymentAppExternalID()
	return _u
}

// SetTaxAppExternalID sets the "tax_app_external_id" field.
func (_u *BillingInvoiceUpdate) SetTaxAppExternalID(v string) *BillingInvoiceUpdate {
	_u.mutation.SetTaxAppExternalID(v)
	return _u
}

// SetNillableTaxAppExternalID sets the "tax_app_external_id" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableTaxAppExternalID(v *string) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetTaxAppExternalID(*v)
	}
	return _u
}

// ClearTaxAppExternalID clears the value of the "tax_app_external_id" field.
func (_u *BillingInvoiceUpdate) ClearTaxAppExternalID() *BillingInvoiceUpdate {
	_u.mutation.ClearTaxAppExternalID()
	return _u
}

// SetPeriodStart sets the "period_start" field.
func (_u *BillingInvoiceUpdate) SetPeriodStart(v time.Time) *BillingInvoiceUpdate {
	_u.mutation.SetPeriodStart(v)
	return _u
}

// SetNillablePeriodStart sets the "period_start" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillablePeriodStart(v *time.Time) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetPeriodStart(*v)
	}
	return _u
}

// ClearPeriodStart clears the value of the "period_start" field.
func (_u *BillingInvoiceUpdate) ClearPeriodStart() *BillingInvoiceUpdate {
	_u.mutation.ClearPeriodStart()
	return _u
}

// SetPeriodEnd sets the "period_end" field.
func (_u *BillingInvoiceUpdate) SetPeriodEnd(v time.Time) *BillingInvoiceUpdate {
	_u.mutation.SetPeriodEnd(v)
	return _u
}

// SetNillablePeriodEnd sets the "period_end" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillablePeriodEnd(v *time.Time) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetPeriodEnd(*v)
	}
	return _u
}

// ClearPeriodEnd clears the value of the "period_end" field.
func (_u *BillingInvoiceUpdate) ClearPeriodEnd() *BillingInvoiceUpdate {
	_u.mutation.ClearPeriodEnd()
	return _u
}

// SetCollectionAt sets the "collection_at" field.
func (_u *BillingInvoiceUpdate) SetCollectionAt(v time.Time) *BillingInvoiceUpdate {
	_u.mutation.SetCollectionAt(v)
	return _u
}

// SetNillableCollectionAt sets the "collection_at" field if the given value is not nil.
func (_u *BillingInvoiceUpdate) SetNillableCollectionAt(v *time.Time) *BillingInvoiceUpdate {
	if v != nil {
		_u.SetCollectionAt(*v)
	}
	return _u
}

// ClearCollectionAt clears the value of the "collection_at" field.
func (_u *BillingInvoiceUpdate) ClearCollectionAt() *BillingInvoiceUpdate {
	_u.mutation.ClearCollectionAt()
	return _u
}

// SetBillingWorkflowConfigID sets the "billing_workflow_config" edge to the BillingWorkflowConfig entity by ID.
func (_u *BillingInvoiceUpdate) SetBillingWorkflowConfigID(id string) *BillingInvoiceUpdate {
	_u.mutation.SetBillingWorkflowConfigID(id)
	return _u
}

// SetBillingWorkflowConfig sets the "billing_workflow_config" edge to the BillingWorkflowConfig entity.
func (_u *BillingInvoiceUpdate) SetBillingWorkflowConfig(v *BillingWorkflowConfig) *BillingInvoiceUpdate {
	return _u.SetBillingWorkflowConfigID(v.ID)
}

// AddBillingInvoiceLineIDs adds the "billing_invoice_lines" edge to the BillingInvoiceLine entity by IDs.
func (_u *BillingInvoiceUpdate) AddBillingInvoiceLineIDs(ids ...string) *BillingInvoiceUpdate {
	_u.mutation.AddBillingInvoiceLineIDs(ids...)
	return _u
}

// AddBillingInvoiceLines adds the "billing_invoice_lines" edges to the BillingInvoiceLine entity.
func (_u *BillingInvoiceUpdate) AddBillingInvoiceLines(v ...*BillingInvoiceLine) *BillingInvoiceUpdate {
	ids := make([]string, len(v))
	for i := range v {
		ids[i] = v[i].ID
	}
	return _u.AddBillingInvoiceLineIDs(ids...)
}

// AddBillingInvoiceValidationIssueIDs adds the "billing_invoice_validation_issues" edge to the BillingInvoiceValidationIssue entity by IDs.
func (_u *BillingInvoiceUpdate) AddBillingInvoiceValidationIssueIDs(ids ...string) *BillingInvoiceUpdate {
	_u.mutation.AddBillingInvoiceValidationIssueIDs(ids...)
	return _u
}

// AddBillingInvoiceValidationIssues adds the "billing_invoice_validation_issues" edges to the BillingInvoiceValidationIssue entity.
func (_u *BillingInvoiceUpdate) AddBillingInvoiceValidationIssues(v ...*BillingInvoiceValidationIssue) *BillingInvoiceUpdate {
	ids := make([]string, len(v))
	for i := range v {
		ids[i] = v[i].ID
	}
	return _u.AddBillingInvoiceValidationIssueIDs(ids...)
}

// Mutation returns the BillingInvoiceMutation object of the builder.
func (_u *BillingInvoiceUpdate) Mutation() *BillingInvoiceMutation {
	return _u.mutation
}

// ClearBillingWorkflowConfig clears the "billing_workflow_config" edge to the BillingWorkflowConfig entity.
func (_u *BillingInvoiceUpdate) ClearBillingWorkflowConfig() *BillingInvoiceUpdate {
	_u.mutation.ClearBillingWorkflowConfig()
	return _u
}

// ClearBillingInvoiceLines clears all "billing_invoice_lines" edges to the BillingInvoiceLine entity.
func (_u *BillingInvoiceUpdate) ClearBillingInvoiceLines() *BillingInvoiceUpdate {
	_u.mutation.ClearBillingInvoiceLines()
	return _u
}

// RemoveBillingInvoiceLineIDs removes the "billing_invoice_lines" edge to BillingInvoiceLine entities by IDs.
func (_u *BillingInvoiceUpdate) RemoveBillingInvoiceLineIDs(ids ...string) *BillingInvoiceUpdate {
	_u.mutation.RemoveBillingInvoiceLineIDs(ids...)
	return _u
}

// RemoveBillingInvoiceLines removes "billing_invoice_lines" edges to BillingInvoiceLine entities.
func (_u *BillingInvoiceUpdate) RemoveBillingInvoiceLines(v ...*BillingInvoiceLine) *BillingInvoiceUpdate {
	ids := make([]string, len(v))
	for i := range v {
		ids[i] = v[i].ID
	}
	return _u.RemoveBillingInvoiceLineIDs(ids...)
}

// ClearBillingInvoiceValidationIssues clears all "billing_invoice_validation_issues" edges to the BillingInvoiceValidationIssue entity.
func (_u *BillingInvoiceUpdate) ClearBillingInvoiceValidationIssues() *BillingInvoiceUpdate {
	_u.mutation.ClearBillingInvoiceValidationIssues()
	return _u
}

// RemoveBillingInvoiceValidationIssueIDs removes the "billing_invoice_validation_issues" edge to BillingInvoiceValidationIssue entities by IDs.
func (_u *BillingInvoiceUpdate) RemoveBillingInvoiceValidationIssueIDs(ids ...string) *BillingInvoiceUpdate {
	_u.mutation.RemoveBillingInvoiceValidationIssueIDs(ids...)
	return _u
}

// RemoveBillingInvoiceValidationIssues removes "billing_invoice_validation_issues" edges to BillingInvoiceValidationIssue entities.
func (_u *BillingInvoiceUpdate) RemoveBillingInvoiceValidationIssues(v ...*BillingInvoiceValidationIssue) *BillingInvoiceUpdate {
	ids := make([]string, len(v))
	for i := range v {
		ids[i] = v[i].ID
	}
	return _u.RemoveBillingInvoiceValidationIssueIDs(ids...)
}

// Save executes the query and returns the number of nodes affected by the update operation.
func (_u *BillingInvoiceUpdate) Save(ctx context.Context) (int, error) {
	_u.defaults()
	return withHooks(ctx, _u.sqlSave, _u.mutation, _u.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (_u *BillingInvoiceUpdate) SaveX(ctx context.Context) int {
	affected, err := _u.Save(ctx)
	if err != nil {
		panic(err)
	}
	return affected
}

// Exec executes the query.
func (_u *BillingInvoiceUpdate) Exec(ctx context.Context) error {
	_, err := _u.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (_u *BillingInvoiceUpdate) ExecX(ctx context.Context) {
	if err := _u.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (_u *BillingInvoiceUpdate) defaults() {
	if _, ok := _u.mutation.UpdatedAt(); !ok {
		v := billinginvoice.UpdateDefaultUpdatedAt()
		_u.mutation.SetUpdatedAt(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (_u *BillingInvoiceUpdate) check() error {
	if v, ok := _u.mutation.SupplierAddressCountry(); ok {
		if err := billinginvoice.SupplierAddressCountryValidator(string(v)); err != nil {
			return &ValidationError{Name: "supplier_address_country", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.supplier_address_country": %w`, err)}
		}
	}
	if v, ok := _u.mutation.CustomerAddressCountry(); ok {
		if err := billinginvoice.CustomerAddressCountryValidator(string(v)); err != nil {
			return &ValidationError{Name: "customer_address_country", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.customer_address_country": %w`, err)}
		}
	}
	if v, ok := _u.mutation.SupplierName(); ok {
		if err := billinginvoice.SupplierNameValidator(v); err != nil {
			return &ValidationError{Name: "supplier_name", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.supplier_name": %w`, err)}
		}
	}
	if v, ok := _u.mutation.CustomerName(); ok {
		if err := billinginvoice.CustomerNameValidator(v); err != nil {
			return &ValidationError{Name: "customer_name", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.customer_name": %w`, err)}
		}
	}
	if v, ok := _u.mutation.GetType(); ok {
		if err := billinginvoice.TypeValidator(v); err != nil {
			return &ValidationError{Name: "type", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.type": %w`, err)}
		}
	}
	if v, ok := _u.mutation.Status(); ok {
		if err := billinginvoice.StatusValidator(v); err != nil {
			return &ValidationError{Name: "status", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.status": %w`, err)}
		}
	}
	if _u.mutation.SourceBillingProfileCleared() && len(_u.mutation.SourceBillingProfileIDs()) > 0 {
		return errors.New(`db: clearing a required unique edge "BillingInvoice.source_billing_profile"`)
	}
	if _u.mutation.BillingWorkflowConfigCleared() && len(_u.mutation.BillingWorkflowConfigIDs()) > 0 {
		return errors.New(`db: clearing a required unique edge "BillingInvoice.billing_workflow_config"`)
	}
	if _u.mutation.BillingInvoiceCustomerCleared() && len(_u.mutation.BillingInvoiceCustomerIDs()) > 0 {
		return errors.New(`db: clearing a required unique edge "BillingInvoice.billing_invoice_customer"`)
	}
	if _u.mutation.TaxAppCleared() && len(_u.mutation.TaxAppIDs()) > 0 {
		return errors.New(`db: clearing a required unique edge "BillingInvoice.tax_app"`)
	}
	if _u.mutation.InvoicingAppCleared() && len(_u.mutation.InvoicingAppIDs()) > 0 {
		return errors.New(`db: clearing a required unique edge "BillingInvoice.invoicing_app"`)
	}
	if _u.mutation.PaymentAppCleared() && len(_u.mutation.PaymentAppIDs()) > 0 {
		return errors.New(`db: clearing a required unique edge "BillingInvoice.payment_app"`)
	}
	return nil
}

func (_u *BillingInvoiceUpdate) sqlSave(ctx context.Context) (_node int, err error) {
	if err := _u.check(); err != nil {
		return _node, err
	}
	_spec := sqlgraph.NewUpdateSpec(billinginvoice.Table, billinginvoice.Columns, sqlgraph.NewFieldSpec(billinginvoice.FieldID, field.TypeString))
	if ps := _u.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := _u.mutation.Metadata(); ok {
		_spec.SetField(billinginvoice.FieldMetadata, field.TypeJSON, value)
	}
	if _u.mutation.MetadataCleared() {
		_spec.ClearField(billinginvoice.FieldMetadata, field.TypeJSON)
	}
	if value, ok := _u.mutation.UpdatedAt(); ok {
		_spec.SetField(billinginvoice.FieldUpdatedAt, field.TypeTime, value)
	}
	if value, ok := _u.mutation.DeletedAt(); ok {
		_spec.SetField(billinginvoice.FieldDeletedAt, field.TypeTime, value)
	}
	if _u.mutation.DeletedAtCleared() {
		_spec.ClearField(billinginvoice.FieldDeletedAt, field.TypeTime)
	}
	if value, ok := _u.mutation.SupplierAddressCountry(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressCountry, field.TypeString, value)
	}
	if _u.mutation.SupplierAddressCountryCleared() {
		_spec.ClearField(billinginvoice.FieldSupplierAddressCountry, field.TypeString)
	}
	if value, ok := _u.mutation.SupplierAddressPostalCode(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressPostalCode, field.TypeString, value)
	}
	if _u.mutation.SupplierAddressPostalCodeCleared() {
		_spec.ClearField(billinginvoice.FieldSupplierAddressPostalCode, field.TypeString)
	}
	if value, ok := _u.mutation.SupplierAddressState(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressState, field.TypeString, value)
	}
	if _u.mutation.SupplierAddressStateCleared() {
		_spec.ClearField(billinginvoice.FieldSupplierAddressState, field.TypeString)
	}
	if value, ok := _u.mutation.SupplierAddressCity(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressCity, field.TypeString, value)
	}
	if _u.mutation.SupplierAddressCityCleared() {
		_spec.ClearField(billinginvoice.FieldSupplierAddressCity, field.TypeString)
	}
	if value, ok := _u.mutation.SupplierAddressLine1(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressLine1, field.TypeString, value)
	}
	if _u.mutation.SupplierAddressLine1Cleared() {
		_spec.ClearField(billinginvoice.FieldSupplierAddressLine1, field.TypeString)
	}
	if value, ok := _u.mutation.SupplierAddressLine2(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressLine2, field.TypeString, value)
	}
	if _u.mutation.SupplierAddressLine2Cleared() {
		_spec.ClearField(billinginvoice.FieldSupplierAddressLine2, field.TypeString)
	}
	if value, ok := _u.mutation.SupplierAddressPhoneNumber(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressPhoneNumber, field.TypeString, value)
	}
	if _u.mutation.SupplierAddressPhoneNumberCleared() {
		_spec.ClearField(billinginvoice.FieldSupplierAddressPhoneNumber, field.TypeString)
	}
	if value, ok := _u.mutation.CustomerAddressCountry(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressCountry, field.TypeString, value)
	}
	if _u.mutation.CustomerAddressCountryCleared() {
		_spec.ClearField(billinginvoice.FieldCustomerAddressCountry, field.TypeString)
	}
	if value, ok := _u.mutation.CustomerAddressPostalCode(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressPostalCode, field.TypeString, value)
	}
	if _u.mutation.CustomerAddressPostalCodeCleared() {
		_spec.ClearField(billinginvoice.FieldCustomerAddressPostalCode, field.TypeString)
	}
	if value, ok := _u.mutation.CustomerAddressState(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressState, field.TypeString, value)
	}
	if _u.mutation.CustomerAddressStateCleared() {
		_spec.ClearField(billinginvoice.FieldCustomerAddressState, field.TypeString)
	}
	if value, ok := _u.mutation.CustomerAddressCity(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressCity, field.TypeString, value)
	}
	if _u.mutation.CustomerAddressCityCleared() {
		_spec.ClearField(billinginvoice.FieldCustomerAddressCity, field.TypeString)
	}
	if value, ok := _u.mutation.CustomerAddressLine1(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressLine1, field.TypeString, value)
	}
	if _u.mutation.CustomerAddressLine1Cleared() {
		_spec.ClearField(billinginvoice.FieldCustomerAddressLine1, field.TypeString)
	}
	if value, ok := _u.mutation.CustomerAddressLine2(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressLine2, field.TypeString, value)
	}
	if _u.mutation.CustomerAddressLine2Cleared() {
		_spec.ClearField(billinginvoice.FieldCustomerAddressLine2, field.TypeString)
	}
	if value, ok := _u.mutation.CustomerAddressPhoneNumber(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressPhoneNumber, field.TypeString, value)
	}
	if _u.mutation.CustomerAddressPhoneNumberCleared() {
		_spec.ClearField(billinginvoice.FieldCustomerAddressPhoneNumber, field.TypeString)
	}
	if value, ok := _u.mutation.Amount(); ok {
		_spec.SetField(billinginvoice.FieldAmount, field.TypeOther, value)
	}
	if value, ok := _u.mutation.TaxesTotal(); ok {
		_spec.SetField(billinginvoice.FieldTaxesTotal, field.TypeOther, value)
	}
	if value, ok := _u.mutation.TaxesInclusiveTotal(); ok {
		_spec.SetField(billinginvoice.FieldTaxesInclusiveTotal, field.TypeOther, value)
	}
	if value, ok := _u.mutation.TaxesExclusiveTotal(); ok {
		_spec.SetField(billinginvoice.FieldTaxesExclusiveTotal, field.TypeOther, value)
	}
	if value, ok := _u.mutation.ChargesTotal(); ok {
		_spec.SetField(billinginvoice.FieldChargesTotal, field.TypeOther, value)
	}
	if value, ok := _u.mutation.DiscountsTotal(); ok {
		_spec.SetField(billinginvoice.FieldDiscountsTotal, field.TypeOther, value)
	}
	if value, ok := _u.mutation.Total(); ok {
		_spec.SetField(billinginvoice.FieldTotal, field.TypeOther, value)
	}
	if value, ok := _u.mutation.SupplierName(); ok {
		_spec.SetField(billinginvoice.FieldSupplierName, field.TypeString, value)
	}
	if value, ok := _u.mutation.SupplierTaxCode(); ok {
		_spec.SetField(billinginvoice.FieldSupplierTaxCode, field.TypeString, value)
	}
	if _u.mutation.SupplierTaxCodeCleared() {
		_spec.ClearField(billinginvoice.FieldSupplierTaxCode, field.TypeString)
	}
	if value, ok := _u.mutation.CustomerName(); ok {
		_spec.SetField(billinginvoice.FieldCustomerName, field.TypeString, value)
	}
	if value, ok := _u.mutation.CustomerUsageAttribution(); ok {
		_spec.SetField(billinginvoice.FieldCustomerUsageAttribution, field.TypeJSON, value)
	}
	if value, ok := _u.mutation.Number(); ok {
		_spec.SetField(billinginvoice.FieldNumber, field.TypeString, value)
	}
	if value, ok := _u.mutation.GetType(); ok {
		_spec.SetField(billinginvoice.FieldType, field.TypeEnum, value)
	}
	if value, ok := _u.mutation.Description(); ok {
		_spec.SetField(billinginvoice.FieldDescription, field.TypeString, value)
	}
	if _u.mutation.DescriptionCleared() {
		_spec.ClearField(billinginvoice.FieldDescription, field.TypeString)
	}
	if value, ok := _u.mutation.VoidedAt(); ok {
		_spec.SetField(billinginvoice.FieldVoidedAt, field.TypeTime, value)
	}
	if _u.mutation.VoidedAtCleared() {
		_spec.ClearField(billinginvoice.FieldVoidedAt, field.TypeTime)
	}
	if value, ok := _u.mutation.IssuedAt(); ok {
		_spec.SetField(billinginvoice.FieldIssuedAt, field.TypeTime, value)
	}
	if _u.mutation.IssuedAtCleared() {
		_spec.ClearField(billinginvoice.FieldIssuedAt, field.TypeTime)
	}
	if value, ok := _u.mutation.SentToCustomerAt(); ok {
		_spec.SetField(billinginvoice.FieldSentToCustomerAt, field.TypeTime, value)
	}
	if _u.mutation.SentToCustomerAtCleared() {
		_spec.ClearField(billinginvoice.FieldSentToCustomerAt, field.TypeTime)
	}
	if value, ok := _u.mutation.DraftUntil(); ok {
		_spec.SetField(billinginvoice.FieldDraftUntil, field.TypeTime, value)
	}
	if _u.mutation.DraftUntilCleared() {
		_spec.ClearField(billinginvoice.FieldDraftUntil, field.TypeTime)
	}
	if value, ok := _u.mutation.DueAt(); ok {
		_spec.SetField(billinginvoice.FieldDueAt, field.TypeTime, value)
	}
	if _u.mutation.DueAtCleared() {
		_spec.ClearField(billinginvoice.FieldDueAt, field.TypeTime)
	}
	if value, ok := _u.mutation.Status(); ok {
		_spec.SetField(billinginvoice.FieldStatus, field.TypeEnum, value)
	}
	if value, ok := _u.mutation.StatusDetailsCache(); ok {
		_spec.SetField(billinginvoice.FieldStatusDetailsCache, field.TypeJSON, value)
	}
	if _u.mutation.StatusDetailsCacheCleared() {
		_spec.ClearField(billinginvoice.FieldStatusDetailsCache, field.TypeJSON)
	}
	if value, ok := _u.mutation.InvoicingAppExternalID(); ok {
		_spec.SetField(billinginvoice.FieldInvoicingAppExternalID, field.TypeString, value)
	}
	if _u.mutation.InvoicingAppExternalIDCleared() {
		_spec.ClearField(billinginvoice.FieldInvoicingAppExternalID, field.TypeString)
	}
	if value, ok := _u.mutation.PaymentAppExternalID(); ok {
		_spec.SetField(billinginvoice.FieldPaymentAppExternalID, field.TypeString, value)
	}
	if _u.mutation.PaymentAppExternalIDCleared() {
		_spec.ClearField(billinginvoice.FieldPaymentAppExternalID, field.TypeString)
	}
	if value, ok := _u.mutation.TaxAppExternalID(); ok {
		_spec.SetField(billinginvoice.FieldTaxAppExternalID, field.TypeString, value)
	}
	if _u.mutation.TaxAppExternalIDCleared() {
		_spec.ClearField(billinginvoice.FieldTaxAppExternalID, field.TypeString)
	}
	if value, ok := _u.mutation.PeriodStart(); ok {
		_spec.SetField(billinginvoice.FieldPeriodStart, field.TypeTime, value)
	}
	if _u.mutation.PeriodStartCleared() {
		_spec.ClearField(billinginvoice.FieldPeriodStart, field.TypeTime)
	}
	if value, ok := _u.mutation.PeriodEnd(); ok {
		_spec.SetField(billinginvoice.FieldPeriodEnd, field.TypeTime, value)
	}
	if _u.mutation.PeriodEndCleared() {
		_spec.ClearField(billinginvoice.FieldPeriodEnd, field.TypeTime)
	}
	if value, ok := _u.mutation.CollectionAt(); ok {
		_spec.SetField(billinginvoice.FieldCollectionAt, field.TypeTime, value)
	}
	if _u.mutation.CollectionAtCleared() {
		_spec.ClearField(billinginvoice.FieldCollectionAt, field.TypeTime)
	}
	if _u.mutation.BillingWorkflowConfigCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2O,
			Inverse: true,
			Table:   billinginvoice.BillingWorkflowConfigTable,
			Columns: []string{billinginvoice.BillingWorkflowConfigColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billingworkflowconfig.FieldID, field.TypeString),
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := _u.mutation.BillingWorkflowConfigIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2O,
			Inverse: true,
			Table:   billinginvoice.BillingWorkflowConfigTable,
			Columns: []string{billinginvoice.BillingWorkflowConfigColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billingworkflowconfig.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if _u.mutation.BillingInvoiceLinesCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   billinginvoice.BillingInvoiceLinesTable,
			Columns: []string{billinginvoice.BillingInvoiceLinesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoiceline.FieldID, field.TypeString),
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := _u.mutation.RemovedBillingInvoiceLinesIDs(); len(nodes) > 0 && !_u.mutation.BillingInvoiceLinesCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   billinginvoice.BillingInvoiceLinesTable,
			Columns: []string{billinginvoice.BillingInvoiceLinesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoiceline.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := _u.mutation.BillingInvoiceLinesIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   billinginvoice.BillingInvoiceLinesTable,
			Columns: []string{billinginvoice.BillingInvoiceLinesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoiceline.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if _u.mutation.BillingInvoiceValidationIssuesCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   billinginvoice.BillingInvoiceValidationIssuesTable,
			Columns: []string{billinginvoice.BillingInvoiceValidationIssuesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoicevalidationissue.FieldID, field.TypeString),
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := _u.mutation.RemovedBillingInvoiceValidationIssuesIDs(); len(nodes) > 0 && !_u.mutation.BillingInvoiceValidationIssuesCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   billinginvoice.BillingInvoiceValidationIssuesTable,
			Columns: []string{billinginvoice.BillingInvoiceValidationIssuesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoicevalidationissue.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := _u.mutation.BillingInvoiceValidationIssuesIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   billinginvoice.BillingInvoiceValidationIssuesTable,
			Columns: []string{billinginvoice.BillingInvoiceValidationIssuesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoicevalidationissue.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if _node, err = sqlgraph.UpdateNodes(ctx, _u.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{billinginvoice.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return 0, err
	}
	_u.mutation.done = true
	return _node, nil
}

// BillingInvoiceUpdateOne is the builder for updating a single BillingInvoice entity.
type BillingInvoiceUpdateOne struct {
	config
	fields   []string
	hooks    []Hook
	mutation *BillingInvoiceMutation
}

// SetMetadata sets the "metadata" field.
func (_u *BillingInvoiceUpdateOne) SetMetadata(v map[string]string) *BillingInvoiceUpdateOne {
	_u.mutation.SetMetadata(v)
	return _u
}

// ClearMetadata clears the value of the "metadata" field.
func (_u *BillingInvoiceUpdateOne) ClearMetadata() *BillingInvoiceUpdateOne {
	_u.mutation.ClearMetadata()
	return _u
}

// SetUpdatedAt sets the "updated_at" field.
func (_u *BillingInvoiceUpdateOne) SetUpdatedAt(v time.Time) *BillingInvoiceUpdateOne {
	_u.mutation.SetUpdatedAt(v)
	return _u
}

// SetDeletedAt sets the "deleted_at" field.
func (_u *BillingInvoiceUpdateOne) SetDeletedAt(v time.Time) *BillingInvoiceUpdateOne {
	_u.mutation.SetDeletedAt(v)
	return _u
}

// SetNillableDeletedAt sets the "deleted_at" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableDeletedAt(v *time.Time) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetDeletedAt(*v)
	}
	return _u
}

// ClearDeletedAt clears the value of the "deleted_at" field.
func (_u *BillingInvoiceUpdateOne) ClearDeletedAt() *BillingInvoiceUpdateOne {
	_u.mutation.ClearDeletedAt()
	return _u
}

// SetSupplierAddressCountry sets the "supplier_address_country" field.
func (_u *BillingInvoiceUpdateOne) SetSupplierAddressCountry(v models.CountryCode) *BillingInvoiceUpdateOne {
	_u.mutation.SetSupplierAddressCountry(v)
	return _u
}

// SetNillableSupplierAddressCountry sets the "supplier_address_country" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableSupplierAddressCountry(v *models.CountryCode) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetSupplierAddressCountry(*v)
	}
	return _u
}

// ClearSupplierAddressCountry clears the value of the "supplier_address_country" field.
func (_u *BillingInvoiceUpdateOne) ClearSupplierAddressCountry() *BillingInvoiceUpdateOne {
	_u.mutation.ClearSupplierAddressCountry()
	return _u
}

// SetSupplierAddressPostalCode sets the "supplier_address_postal_code" field.
func (_u *BillingInvoiceUpdateOne) SetSupplierAddressPostalCode(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetSupplierAddressPostalCode(v)
	return _u
}

// SetNillableSupplierAddressPostalCode sets the "supplier_address_postal_code" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableSupplierAddressPostalCode(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetSupplierAddressPostalCode(*v)
	}
	return _u
}

// ClearSupplierAddressPostalCode clears the value of the "supplier_address_postal_code" field.
func (_u *BillingInvoiceUpdateOne) ClearSupplierAddressPostalCode() *BillingInvoiceUpdateOne {
	_u.mutation.ClearSupplierAddressPostalCode()
	return _u
}

// SetSupplierAddressState sets the "supplier_address_state" field.
func (_u *BillingInvoiceUpdateOne) SetSupplierAddressState(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetSupplierAddressState(v)
	return _u
}

// SetNillableSupplierAddressState sets the "supplier_address_state" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableSupplierAddressState(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetSupplierAddressState(*v)
	}
	return _u
}

// ClearSupplierAddressState clears the value of the "supplier_address_state" field.
func (_u *BillingInvoiceUpdateOne) ClearSupplierAddressState() *BillingInvoiceUpdateOne {
	_u.mutation.ClearSupplierAddressState()
	return _u
}

// SetSupplierAddressCity sets the "supplier_address_city" field.
func (_u *BillingInvoiceUpdateOne) SetSupplierAddressCity(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetSupplierAddressCity(v)
	return _u
}

// SetNillableSupplierAddressCity sets the "supplier_address_city" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableSupplierAddressCity(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetSupplierAddressCity(*v)
	}
	return _u
}

// ClearSupplierAddressCity clears the value of the "supplier_address_city" field.
func (_u *BillingInvoiceUpdateOne) ClearSupplierAddressCity() *BillingInvoiceUpdateOne {
	_u.mutation.ClearSupplierAddressCity()
	return _u
}

// SetSupplierAddressLine1 sets the "supplier_address_line1" field.
func (_u *BillingInvoiceUpdateOne) SetSupplierAddressLine1(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetSupplierAddressLine1(v)
	return _u
}

// SetNillableSupplierAddressLine1 sets the "supplier_address_line1" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableSupplierAddressLine1(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetSupplierAddressLine1(*v)
	}
	return _u
}

// ClearSupplierAddressLine1 clears the value of the "supplier_address_line1" field.
func (_u *BillingInvoiceUpdateOne) ClearSupplierAddressLine1() *BillingInvoiceUpdateOne {
	_u.mutation.ClearSupplierAddressLine1()
	return _u
}

// SetSupplierAddressLine2 sets the "supplier_address_line2" field.
func (_u *BillingInvoiceUpdateOne) SetSupplierAddressLine2(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetSupplierAddressLine2(v)
	return _u
}

// SetNillableSupplierAddressLine2 sets the "supplier_address_line2" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableSupplierAddressLine2(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetSupplierAddressLine2(*v)
	}
	return _u
}

// ClearSupplierAddressLine2 clears the value of the "supplier_address_line2" field.
func (_u *BillingInvoiceUpdateOne) ClearSupplierAddressLine2() *BillingInvoiceUpdateOne {
	_u.mutation.ClearSupplierAddressLine2()
	return _u
}

// SetSupplierAddressPhoneNumber sets the "supplier_address_phone_number" field.
func (_u *BillingInvoiceUpdateOne) SetSupplierAddressPhoneNumber(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetSupplierAddressPhoneNumber(v)
	return _u
}

// SetNillableSupplierAddressPhoneNumber sets the "supplier_address_phone_number" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableSupplierAddressPhoneNumber(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetSupplierAddressPhoneNumber(*v)
	}
	return _u
}

// ClearSupplierAddressPhoneNumber clears the value of the "supplier_address_phone_number" field.
func (_u *BillingInvoiceUpdateOne) ClearSupplierAddressPhoneNumber() *BillingInvoiceUpdateOne {
	_u.mutation.ClearSupplierAddressPhoneNumber()
	return _u
}

// SetCustomerAddressCountry sets the "customer_address_country" field.
func (_u *BillingInvoiceUpdateOne) SetCustomerAddressCountry(v models.CountryCode) *BillingInvoiceUpdateOne {
	_u.mutation.SetCustomerAddressCountry(v)
	return _u
}

// SetNillableCustomerAddressCountry sets the "customer_address_country" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableCustomerAddressCountry(v *models.CountryCode) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetCustomerAddressCountry(*v)
	}
	return _u
}

// ClearCustomerAddressCountry clears the value of the "customer_address_country" field.
func (_u *BillingInvoiceUpdateOne) ClearCustomerAddressCountry() *BillingInvoiceUpdateOne {
	_u.mutation.ClearCustomerAddressCountry()
	return _u
}

// SetCustomerAddressPostalCode sets the "customer_address_postal_code" field.
func (_u *BillingInvoiceUpdateOne) SetCustomerAddressPostalCode(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetCustomerAddressPostalCode(v)
	return _u
}

// SetNillableCustomerAddressPostalCode sets the "customer_address_postal_code" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableCustomerAddressPostalCode(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetCustomerAddressPostalCode(*v)
	}
	return _u
}

// ClearCustomerAddressPostalCode clears the value of the "customer_address_postal_code" field.
func (_u *BillingInvoiceUpdateOne) ClearCustomerAddressPostalCode() *BillingInvoiceUpdateOne {
	_u.mutation.ClearCustomerAddressPostalCode()
	return _u
}

// SetCustomerAddressState sets the "customer_address_state" field.
func (_u *BillingInvoiceUpdateOne) SetCustomerAddressState(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetCustomerAddressState(v)
	return _u
}

// SetNillableCustomerAddressState sets the "customer_address_state" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableCustomerAddressState(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetCustomerAddressState(*v)
	}
	return _u
}

// ClearCustomerAddressState clears the value of the "customer_address_state" field.
func (_u *BillingInvoiceUpdateOne) ClearCustomerAddressState() *BillingInvoiceUpdateOne {
	_u.mutation.ClearCustomerAddressState()
	return _u
}

// SetCustomerAddressCity sets the "customer_address_city" field.
func (_u *BillingInvoiceUpdateOne) SetCustomerAddressCity(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetCustomerAddressCity(v)
	return _u
}

// SetNillableCustomerAddressCity sets the "customer_address_city" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableCustomerAddressCity(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetCustomerAddressCity(*v)
	}
	return _u
}

// ClearCustomerAddressCity clears the value of the "customer_address_city" field.
func (_u *BillingInvoiceUpdateOne) ClearCustomerAddressCity() *BillingInvoiceUpdateOne {
	_u.mutation.ClearCustomerAddressCity()
	return _u
}

// SetCustomerAddressLine1 sets the "customer_address_line1" field.
func (_u *BillingInvoiceUpdateOne) SetCustomerAddressLine1(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetCustomerAddressLine1(v)
	return _u
}

// SetNillableCustomerAddressLine1 sets the "customer_address_line1" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableCustomerAddressLine1(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetCustomerAddressLine1(*v)
	}
	return _u
}

// ClearCustomerAddressLine1 clears the value of the "customer_address_line1" field.
func (_u *BillingInvoiceUpdateOne) ClearCustomerAddressLine1() *BillingInvoiceUpdateOne {
	_u.mutation.ClearCustomerAddressLine1()
	return _u
}

// SetCustomerAddressLine2 sets the "customer_address_line2" field.
func (_u *BillingInvoiceUpdateOne) SetCustomerAddressLine2(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetCustomerAddressLine2(v)
	return _u
}

// SetNillableCustomerAddressLine2 sets the "customer_address_line2" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableCustomerAddressLine2(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetCustomerAddressLine2(*v)
	}
	return _u
}

// ClearCustomerAddressLine2 clears the value of the "customer_address_line2" field.
func (_u *BillingInvoiceUpdateOne) ClearCustomerAddressLine2() *BillingInvoiceUpdateOne {
	_u.mutation.ClearCustomerAddressLine2()
	return _u
}

// SetCustomerAddressPhoneNumber sets the "customer_address_phone_number" field.
func (_u *BillingInvoiceUpdateOne) SetCustomerAddressPhoneNumber(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetCustomerAddressPhoneNumber(v)
	return _u
}

// SetNillableCustomerAddressPhoneNumber sets the "customer_address_phone_number" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableCustomerAddressPhoneNumber(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetCustomerAddressPhoneNumber(*v)
	}
	return _u
}

// ClearCustomerAddressPhoneNumber clears the value of the "customer_address_phone_number" field.
func (_u *BillingInvoiceUpdateOne) ClearCustomerAddressPhoneNumber() *BillingInvoiceUpdateOne {
	_u.mutation.ClearCustomerAddressPhoneNumber()
	return _u
}

// SetAmount sets the "amount" field.
func (_u *BillingInvoiceUpdateOne) SetAmount(v alpacadecimal.Decimal) *BillingInvoiceUpdateOne {
	_u.mutation.SetAmount(v)
	return _u
}

// SetNillableAmount sets the "amount" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableAmount(v *alpacadecimal.Decimal) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetAmount(*v)
	}
	return _u
}

// SetTaxesTotal sets the "taxes_total" field.
func (_u *BillingInvoiceUpdateOne) SetTaxesTotal(v alpacadecimal.Decimal) *BillingInvoiceUpdateOne {
	_u.mutation.SetTaxesTotal(v)
	return _u
}

// SetNillableTaxesTotal sets the "taxes_total" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableTaxesTotal(v *alpacadecimal.Decimal) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetTaxesTotal(*v)
	}
	return _u
}

// SetTaxesInclusiveTotal sets the "taxes_inclusive_total" field.
func (_u *BillingInvoiceUpdateOne) SetTaxesInclusiveTotal(v alpacadecimal.Decimal) *BillingInvoiceUpdateOne {
	_u.mutation.SetTaxesInclusiveTotal(v)
	return _u
}

// SetNillableTaxesInclusiveTotal sets the "taxes_inclusive_total" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableTaxesInclusiveTotal(v *alpacadecimal.Decimal) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetTaxesInclusiveTotal(*v)
	}
	return _u
}

// SetTaxesExclusiveTotal sets the "taxes_exclusive_total" field.
func (_u *BillingInvoiceUpdateOne) SetTaxesExclusiveTotal(v alpacadecimal.Decimal) *BillingInvoiceUpdateOne {
	_u.mutation.SetTaxesExclusiveTotal(v)
	return _u
}

// SetNillableTaxesExclusiveTotal sets the "taxes_exclusive_total" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableTaxesExclusiveTotal(v *alpacadecimal.Decimal) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetTaxesExclusiveTotal(*v)
	}
	return _u
}

// SetChargesTotal sets the "charges_total" field.
func (_u *BillingInvoiceUpdateOne) SetChargesTotal(v alpacadecimal.Decimal) *BillingInvoiceUpdateOne {
	_u.mutation.SetChargesTotal(v)
	return _u
}

// SetNillableChargesTotal sets the "charges_total" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableChargesTotal(v *alpacadecimal.Decimal) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetChargesTotal(*v)
	}
	return _u
}

// SetDiscountsTotal sets the "discounts_total" field.
func (_u *BillingInvoiceUpdateOne) SetDiscountsTotal(v alpacadecimal.Decimal) *BillingInvoiceUpdateOne {
	_u.mutation.SetDiscountsTotal(v)
	return _u
}

// SetNillableDiscountsTotal sets the "discounts_total" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableDiscountsTotal(v *alpacadecimal.Decimal) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetDiscountsTotal(*v)
	}
	return _u
}

// SetTotal sets the "total" field.
func (_u *BillingInvoiceUpdateOne) SetTotal(v alpacadecimal.Decimal) *BillingInvoiceUpdateOne {
	_u.mutation.SetTotal(v)
	return _u
}

// SetNillableTotal sets the "total" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableTotal(v *alpacadecimal.Decimal) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetTotal(*v)
	}
	return _u
}

// SetSupplierName sets the "supplier_name" field.
func (_u *BillingInvoiceUpdateOne) SetSupplierName(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetSupplierName(v)
	return _u
}

// SetNillableSupplierName sets the "supplier_name" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableSupplierName(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetSupplierName(*v)
	}
	return _u
}

// SetSupplierTaxCode sets the "supplier_tax_code" field.
func (_u *BillingInvoiceUpdateOne) SetSupplierTaxCode(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetSupplierTaxCode(v)
	return _u
}

// SetNillableSupplierTaxCode sets the "supplier_tax_code" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableSupplierTaxCode(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetSupplierTaxCode(*v)
	}
	return _u
}

// ClearSupplierTaxCode clears the value of the "supplier_tax_code" field.
func (_u *BillingInvoiceUpdateOne) ClearSupplierTaxCode() *BillingInvoiceUpdateOne {
	_u.mutation.ClearSupplierTaxCode()
	return _u
}

// SetCustomerName sets the "customer_name" field.
func (_u *BillingInvoiceUpdateOne) SetCustomerName(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetCustomerName(v)
	return _u
}

// SetNillableCustomerName sets the "customer_name" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableCustomerName(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetCustomerName(*v)
	}
	return _u
}

// SetCustomerUsageAttribution sets the "customer_usage_attribution" field.
func (_u *BillingInvoiceUpdateOne) SetCustomerUsageAttribution(v *billing.VersionedCustomerUsageAttribution) *BillingInvoiceUpdateOne {
	_u.mutation.SetCustomerUsageAttribution(v)
	return _u
}

// SetNumber sets the "number" field.
func (_u *BillingInvoiceUpdateOne) SetNumber(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetNumber(v)
	return _u
}

// SetNillableNumber sets the "number" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableNumber(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetNumber(*v)
	}
	return _u
}

// SetType sets the "type" field.
func (_u *BillingInvoiceUpdateOne) SetType(v billing.InvoiceType) *BillingInvoiceUpdateOne {
	_u.mutation.SetType(v)
	return _u
}

// SetNillableType sets the "type" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableType(v *billing.InvoiceType) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetType(*v)
	}
	return _u
}

// SetDescription sets the "description" field.
func (_u *BillingInvoiceUpdateOne) SetDescription(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetDescription(v)
	return _u
}

// SetNillableDescription sets the "description" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableDescription(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetDescription(*v)
	}
	return _u
}

// ClearDescription clears the value of the "description" field.
func (_u *BillingInvoiceUpdateOne) ClearDescription() *BillingInvoiceUpdateOne {
	_u.mutation.ClearDescription()
	return _u
}

// SetVoidedAt sets the "voided_at" field.
func (_u *BillingInvoiceUpdateOne) SetVoidedAt(v time.Time) *BillingInvoiceUpdateOne {
	_u.mutation.SetVoidedAt(v)
	return _u
}

// SetNillableVoidedAt sets the "voided_at" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableVoidedAt(v *time.Time) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetVoidedAt(*v)
	}
	return _u
}

// ClearVoidedAt clears the value of the "voided_at" field.
func (_u *BillingInvoiceUpdateOne) ClearVoidedAt() *BillingInvoiceUpdateOne {
	_u.mutation.ClearVoidedAt()
	return _u
}

// SetIssuedAt sets the "issued_at" field.
func (_u *BillingInvoiceUpdateOne) SetIssuedAt(v time.Time) *BillingInvoiceUpdateOne {
	_u.mutation.SetIssuedAt(v)
	return _u
}

// SetNillableIssuedAt sets the "issued_at" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableIssuedAt(v *time.Time) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetIssuedAt(*v)
	}
	return _u
}

// ClearIssuedAt clears the value of the "issued_at" field.
func (_u *BillingInvoiceUpdateOne) ClearIssuedAt() *BillingInvoiceUpdateOne {
	_u.mutation.ClearIssuedAt()
	return _u
}

// SetSentToCustomerAt sets the "sent_to_customer_at" field.
func (_u *BillingInvoiceUpdateOne) SetSentToCustomerAt(v time.Time) *BillingInvoiceUpdateOne {
	_u.mutation.SetSentToCustomerAt(v)
	return _u
}

// SetNillableSentToCustomerAt sets the "sent_to_customer_at" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableSentToCustomerAt(v *time.Time) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetSentToCustomerAt(*v)
	}
	return _u
}

// ClearSentToCustomerAt clears the value of the "sent_to_customer_at" field.
func (_u *BillingInvoiceUpdateOne) ClearSentToCustomerAt() *BillingInvoiceUpdateOne {
	_u.mutation.ClearSentToCustomerAt()
	return _u
}

// SetDraftUntil sets the "draft_until" field.
func (_u *BillingInvoiceUpdateOne) SetDraftUntil(v time.Time) *BillingInvoiceUpdateOne {
	_u.mutation.SetDraftUntil(v)
	return _u
}

// SetNillableDraftUntil sets the "draft_until" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableDraftUntil(v *time.Time) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetDraftUntil(*v)
	}
	return _u
}

// ClearDraftUntil clears the value of the "draft_until" field.
func (_u *BillingInvoiceUpdateOne) ClearDraftUntil() *BillingInvoiceUpdateOne {
	_u.mutation.ClearDraftUntil()
	return _u
}

// SetDueAt sets the "due_at" field.
func (_u *BillingInvoiceUpdateOne) SetDueAt(v time.Time) *BillingInvoiceUpdateOne {
	_u.mutation.SetDueAt(v)
	return _u
}

// SetNillableDueAt sets the "due_at" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableDueAt(v *time.Time) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetDueAt(*v)
	}
	return _u
}

// ClearDueAt clears the value of the "due_at" field.
func (_u *BillingInvoiceUpdateOne) ClearDueAt() *BillingInvoiceUpdateOne {
	_u.mutation.ClearDueAt()
	return _u
}

// SetStatus sets the "status" field.
func (_u *BillingInvoiceUpdateOne) SetStatus(v billing.InvoiceStatus) *BillingInvoiceUpdateOne {
	_u.mutation.SetStatus(v)
	return _u
}

// SetNillableStatus sets the "status" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableStatus(v *billing.InvoiceStatus) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetStatus(*v)
	}
	return _u
}

// SetStatusDetailsCache sets the "status_details_cache" field.
func (_u *BillingInvoiceUpdateOne) SetStatusDetailsCache(v billing.InvoiceStatusDetails) *BillingInvoiceUpdateOne {
	_u.mutation.SetStatusDetailsCache(v)
	return _u
}

// SetNillableStatusDetailsCache sets the "status_details_cache" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableStatusDetailsCache(v *billing.InvoiceStatusDetails) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetStatusDetailsCache(*v)
	}
	return _u
}

// ClearStatusDetailsCache clears the value of the "status_details_cache" field.
func (_u *BillingInvoiceUpdateOne) ClearStatusDetailsCache() *BillingInvoiceUpdateOne {
	_u.mutation.ClearStatusDetailsCache()
	return _u
}

// SetWorkflowConfigID sets the "workflow_config_id" field.
func (_u *BillingInvoiceUpdateOne) SetWorkflowConfigID(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetWorkflowConfigID(v)
	return _u
}

// SetNillableWorkflowConfigID sets the "workflow_config_id" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableWorkflowConfigID(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetWorkflowConfigID(*v)
	}
	return _u
}

// SetInvoicingAppExternalID sets the "invoicing_app_external_id" field.
func (_u *BillingInvoiceUpdateOne) SetInvoicingAppExternalID(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetInvoicingAppExternalID(v)
	return _u
}

// SetNillableInvoicingAppExternalID sets the "invoicing_app_external_id" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableInvoicingAppExternalID(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetInvoicingAppExternalID(*v)
	}
	return _u
}

// ClearInvoicingAppExternalID clears the value of the "invoicing_app_external_id" field.
func (_u *BillingInvoiceUpdateOne) ClearInvoicingAppExternalID() *BillingInvoiceUpdateOne {
	_u.mutation.ClearInvoicingAppExternalID()
	return _u
}

// SetPaymentAppExternalID sets the "payment_app_external_id" field.
func (_u *BillingInvoiceUpdateOne) SetPaymentAppExternalID(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetPaymentAppExternalID(v)
	return _u
}

// SetNillablePaymentAppExternalID sets the "payment_app_external_id" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillablePaymentAppExternalID(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetPaymentAppExternalID(*v)
	}
	return _u
}

// ClearPaymentAppExternalID clears the value of the "payment_app_external_id" field.
func (_u *BillingInvoiceUpdateOne) ClearPaymentAppExternalID() *BillingInvoiceUpdateOne {
	_u.mutation.ClearPaymentAppExternalID()
	return _u
}

// SetTaxAppExternalID sets the "tax_app_external_id" field.
func (_u *BillingInvoiceUpdateOne) SetTaxAppExternalID(v string) *BillingInvoiceUpdateOne {
	_u.mutation.SetTaxAppExternalID(v)
	return _u
}

// SetNillableTaxAppExternalID sets the "tax_app_external_id" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableTaxAppExternalID(v *string) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetTaxAppExternalID(*v)
	}
	return _u
}

// ClearTaxAppExternalID clears the value of the "tax_app_external_id" field.
func (_u *BillingInvoiceUpdateOne) ClearTaxAppExternalID() *BillingInvoiceUpdateOne {
	_u.mutation.ClearTaxAppExternalID()
	return _u
}

// SetPeriodStart sets the "period_start" field.
func (_u *BillingInvoiceUpdateOne) SetPeriodStart(v time.Time) *BillingInvoiceUpdateOne {
	_u.mutation.SetPeriodStart(v)
	return _u
}

// SetNillablePeriodStart sets the "period_start" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillablePeriodStart(v *time.Time) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetPeriodStart(*v)
	}
	return _u
}

// ClearPeriodStart clears the value of the "period_start" field.
func (_u *BillingInvoiceUpdateOne) ClearPeriodStart() *BillingInvoiceUpdateOne {
	_u.mutation.ClearPeriodStart()
	return _u
}

// SetPeriodEnd sets the "period_end" field.
func (_u *BillingInvoiceUpdateOne) SetPeriodEnd(v time.Time) *BillingInvoiceUpdateOne {
	_u.mutation.SetPeriodEnd(v)
	return _u
}

// SetNillablePeriodEnd sets the "period_end" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillablePeriodEnd(v *time.Time) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetPeriodEnd(*v)
	}
	return _u
}

// ClearPeriodEnd clears the value of the "period_end" field.
func (_u *BillingInvoiceUpdateOne) ClearPeriodEnd() *BillingInvoiceUpdateOne {
	_u.mutation.ClearPeriodEnd()
	return _u
}

// SetCollectionAt sets the "collection_at" field.
func (_u *BillingInvoiceUpdateOne) SetCollectionAt(v time.Time) *BillingInvoiceUpdateOne {
	_u.mutation.SetCollectionAt(v)
	return _u
}

// SetNillableCollectionAt sets the "collection_at" field if the given value is not nil.
func (_u *BillingInvoiceUpdateOne) SetNillableCollectionAt(v *time.Time) *BillingInvoiceUpdateOne {
	if v != nil {
		_u.SetCollectionAt(*v)
	}
	return _u
}

// ClearCollectionAt clears the value of the "collection_at" field.
func (_u *BillingInvoiceUpdateOne) ClearCollectionAt() *BillingInvoiceUpdateOne {
	_u.mutation.ClearCollectionAt()
	return _u
}

// SetBillingWorkflowConfigID sets the "billing_workflow_config" edge to the BillingWorkflowConfig entity by ID.
func (_u *BillingInvoiceUpdateOne) SetBillingWorkflowConfigID(id string) *BillingInvoiceUpdateOne {
	_u.mutation.SetBillingWorkflowConfigID(id)
	return _u
}

// SetBillingWorkflowConfig sets the "billing_workflow_config" edge to the BillingWorkflowConfig entity.
func (_u *BillingInvoiceUpdateOne) SetBillingWorkflowConfig(v *BillingWorkflowConfig) *BillingInvoiceUpdateOne {
	return _u.SetBillingWorkflowConfigID(v.ID)
}

// AddBillingInvoiceLineIDs adds the "billing_invoice_lines" edge to the BillingInvoiceLine entity by IDs.
func (_u *BillingInvoiceUpdateOne) AddBillingInvoiceLineIDs(ids ...string) *BillingInvoiceUpdateOne {
	_u.mutation.AddBillingInvoiceLineIDs(ids...)
	return _u
}

// AddBillingInvoiceLines adds the "billing_invoice_lines" edges to the BillingInvoiceLine entity.
func (_u *BillingInvoiceUpdateOne) AddBillingInvoiceLines(v ...*BillingInvoiceLine) *BillingInvoiceUpdateOne {
	ids := make([]string, len(v))
	for i := range v {
		ids[i] = v[i].ID
	}
	return _u.AddBillingInvoiceLineIDs(ids...)
}

// AddBillingInvoiceValidationIssueIDs adds the "billing_invoice_validation_issues" edge to the BillingInvoiceValidationIssue entity by IDs.
func (_u *BillingInvoiceUpdateOne) AddBillingInvoiceValidationIssueIDs(ids ...string) *BillingInvoiceUpdateOne {
	_u.mutation.AddBillingInvoiceValidationIssueIDs(ids...)
	return _u
}

// AddBillingInvoiceValidationIssues adds the "billing_invoice_validation_issues" edges to the BillingInvoiceValidationIssue entity.
func (_u *BillingInvoiceUpdateOne) AddBillingInvoiceValidationIssues(v ...*BillingInvoiceValidationIssue) *BillingInvoiceUpdateOne {
	ids := make([]string, len(v))
	for i := range v {
		ids[i] = v[i].ID
	}
	return _u.AddBillingInvoiceValidationIssueIDs(ids...)
}

// Mutation returns the BillingInvoiceMutation object of the builder.
func (_u *BillingInvoiceUpdateOne) Mutation() *BillingInvoiceMutation {
	return _u.mutation
}

// ClearBillingWorkflowConfig clears the "billing_workflow_config" edge to the BillingWorkflowConfig entity.
func (_u *BillingInvoiceUpdateOne) ClearBillingWorkflowConfig() *BillingInvoiceUpdateOne {
	_u.mutation.ClearBillingWorkflowConfig()
	return _u
}

// ClearBillingInvoiceLines clears all "billing_invoice_lines" edges to the BillingInvoiceLine entity.
func (_u *BillingInvoiceUpdateOne) ClearBillingInvoiceLines() *BillingInvoiceUpdateOne {
	_u.mutation.ClearBillingInvoiceLines()
	return _u
}

// RemoveBillingInvoiceLineIDs removes the "billing_invoice_lines" edge to BillingInvoiceLine entities by IDs.
func (_u *BillingInvoiceUpdateOne) RemoveBillingInvoiceLineIDs(ids ...string) *BillingInvoiceUpdateOne {
	_u.mutation.RemoveBillingInvoiceLineIDs(ids...)
	return _u
}

// RemoveBillingInvoiceLines removes "billing_invoice_lines" edges to BillingInvoiceLine entities.
func (_u *BillingInvoiceUpdateOne) RemoveBillingInvoiceLines(v ...*BillingInvoiceLine) *BillingInvoiceUpdateOne {
	ids := make([]string, len(v))
	for i := range v {
		ids[i] = v[i].ID
	}
	return _u.RemoveBillingInvoiceLineIDs(ids...)
}

// ClearBillingInvoiceValidationIssues clears all "billing_invoice_validation_issues" edges to the BillingInvoiceValidationIssue entity.
func (_u *BillingInvoiceUpdateOne) ClearBillingInvoiceValidationIssues() *BillingInvoiceUpdateOne {
	_u.mutation.ClearBillingInvoiceValidationIssues()
	return _u
}

// RemoveBillingInvoiceValidationIssueIDs removes the "billing_invoice_validation_issues" edge to BillingInvoiceValidationIssue entities by IDs.
func (_u *BillingInvoiceUpdateOne) RemoveBillingInvoiceValidationIssueIDs(ids ...string) *BillingInvoiceUpdateOne {
	_u.mutation.RemoveBillingInvoiceValidationIssueIDs(ids...)
	return _u
}

// RemoveBillingInvoiceValidationIssues removes "billing_invoice_validation_issues" edges to BillingInvoiceValidationIssue entities.
func (_u *BillingInvoiceUpdateOne) RemoveBillingInvoiceValidationIssues(v ...*BillingInvoiceValidationIssue) *BillingInvoiceUpdateOne {
	ids := make([]string, len(v))
	for i := range v {
		ids[i] = v[i].ID
	}
	return _u.RemoveBillingInvoiceValidationIssueIDs(ids...)
}

// Where appends a list predicates to the BillingInvoiceUpdate builder.
func (_u *BillingInvoiceUpdateOne) Where(ps ...predicate.BillingInvoice) *BillingInvoiceUpdateOne {
	_u.mutation.Where(ps...)
	return _u
}

// Select allows selecting one or more fields (columns) of the returned entity.
// The default is selecting all fields defined in the entity schema.
func (_u *BillingInvoiceUpdateOne) Select(field string, fields ...string) *BillingInvoiceUpdateOne {
	_u.fields = append([]string{field}, fields...)
	return _u
}

// Save executes the query and returns the updated BillingInvoice entity.
func (_u *BillingInvoiceUpdateOne) Save(ctx context.Context) (*BillingInvoice, error) {
	_u.defaults()
	return withHooks(ctx, _u.sqlSave, _u.mutation, _u.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (_u *BillingInvoiceUpdateOne) SaveX(ctx context.Context) *BillingInvoice {
	node, err := _u.Save(ctx)
	if err != nil {
		panic(err)
	}
	return node
}

// Exec executes the query on the entity.
func (_u *BillingInvoiceUpdateOne) Exec(ctx context.Context) error {
	_, err := _u.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (_u *BillingInvoiceUpdateOne) ExecX(ctx context.Context) {
	if err := _u.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (_u *BillingInvoiceUpdateOne) defaults() {
	if _, ok := _u.mutation.UpdatedAt(); !ok {
		v := billinginvoice.UpdateDefaultUpdatedAt()
		_u.mutation.SetUpdatedAt(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (_u *BillingInvoiceUpdateOne) check() error {
	if v, ok := _u.mutation.SupplierAddressCountry(); ok {
		if err := billinginvoice.SupplierAddressCountryValidator(string(v)); err != nil {
			return &ValidationError{Name: "supplier_address_country", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.supplier_address_country": %w`, err)}
		}
	}
	if v, ok := _u.mutation.CustomerAddressCountry(); ok {
		if err := billinginvoice.CustomerAddressCountryValidator(string(v)); err != nil {
			return &ValidationError{Name: "customer_address_country", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.customer_address_country": %w`, err)}
		}
	}
	if v, ok := _u.mutation.SupplierName(); ok {
		if err := billinginvoice.SupplierNameValidator(v); err != nil {
			return &ValidationError{Name: "supplier_name", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.supplier_name": %w`, err)}
		}
	}
	if v, ok := _u.mutation.CustomerName(); ok {
		if err := billinginvoice.CustomerNameValidator(v); err != nil {
			return &ValidationError{Name: "customer_name", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.customer_name": %w`, err)}
		}
	}
	if v, ok := _u.mutation.GetType(); ok {
		if err := billinginvoice.TypeValidator(v); err != nil {
			return &ValidationError{Name: "type", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.type": %w`, err)}
		}
	}
	if v, ok := _u.mutation.Status(); ok {
		if err := billinginvoice.StatusValidator(v); err != nil {
			return &ValidationError{Name: "status", err: fmt.Errorf(`db: validator failed for field "BillingInvoice.status": %w`, err)}
		}
	}
	if _u.mutation.SourceBillingProfileCleared() && len(_u.mutation.SourceBillingProfileIDs()) > 0 {
		return errors.New(`db: clearing a required unique edge "BillingInvoice.source_billing_profile"`)
	}
	if _u.mutation.BillingWorkflowConfigCleared() && len(_u.mutation.BillingWorkflowConfigIDs()) > 0 {
		return errors.New(`db: clearing a required unique edge "BillingInvoice.billing_workflow_config"`)
	}
	if _u.mutation.BillingInvoiceCustomerCleared() && len(_u.mutation.BillingInvoiceCustomerIDs()) > 0 {
		return errors.New(`db: clearing a required unique edge "BillingInvoice.billing_invoice_customer"`)
	}
	if _u.mutation.TaxAppCleared() && len(_u.mutation.TaxAppIDs()) > 0 {
		return errors.New(`db: clearing a required unique edge "BillingInvoice.tax_app"`)
	}
	if _u.mutation.InvoicingAppCleared() && len(_u.mutation.InvoicingAppIDs()) > 0 {
		return errors.New(`db: clearing a required unique edge "BillingInvoice.invoicing_app"`)
	}
	if _u.mutation.PaymentAppCleared() && len(_u.mutation.PaymentAppIDs()) > 0 {
		return errors.New(`db: clearing a required unique edge "BillingInvoice.payment_app"`)
	}
	return nil
}

func (_u *BillingInvoiceUpdateOne) sqlSave(ctx context.Context) (_node *BillingInvoice, err error) {
	if err := _u.check(); err != nil {
		return _node, err
	}
	_spec := sqlgraph.NewUpdateSpec(billinginvoice.Table, billinginvoice.Columns, sqlgraph.NewFieldSpec(billinginvoice.FieldID, field.TypeString))
	id, ok := _u.mutation.ID()
	if !ok {
		return nil, &ValidationError{Name: "id", err: errors.New(`db: missing "BillingInvoice.id" for update`)}
	}
	_spec.Node.ID.Value = id
	if fields := _u.fields; len(fields) > 0 {
		_spec.Node.Columns = make([]string, 0, len(fields))
		_spec.Node.Columns = append(_spec.Node.Columns, billinginvoice.FieldID)
		for _, f := range fields {
			if !billinginvoice.ValidColumn(f) {
				return nil, &ValidationError{Name: f, err: fmt.Errorf("db: invalid field %q for query", f)}
			}
			if f != billinginvoice.FieldID {
				_spec.Node.Columns = append(_spec.Node.Columns, f)
			}
		}
	}
	if ps := _u.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := _u.mutation.Metadata(); ok {
		_spec.SetField(billinginvoice.FieldMetadata, field.TypeJSON, value)
	}
	if _u.mutation.MetadataCleared() {
		_spec.ClearField(billinginvoice.FieldMetadata, field.TypeJSON)
	}
	if value, ok := _u.mutation.UpdatedAt(); ok {
		_spec.SetField(billinginvoice.FieldUpdatedAt, field.TypeTime, value)
	}
	if value, ok := _u.mutation.DeletedAt(); ok {
		_spec.SetField(billinginvoice.FieldDeletedAt, field.TypeTime, value)
	}
	if _u.mutation.DeletedAtCleared() {
		_spec.ClearField(billinginvoice.FieldDeletedAt, field.TypeTime)
	}
	if value, ok := _u.mutation.SupplierAddressCountry(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressCountry, field.TypeString, value)
	}
	if _u.mutation.SupplierAddressCountryCleared() {
		_spec.ClearField(billinginvoice.FieldSupplierAddressCountry, field.TypeString)
	}
	if value, ok := _u.mutation.SupplierAddressPostalCode(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressPostalCode, field.TypeString, value)
	}
	if _u.mutation.SupplierAddressPostalCodeCleared() {
		_spec.ClearField(billinginvoice.FieldSupplierAddressPostalCode, field.TypeString)
	}
	if value, ok := _u.mutation.SupplierAddressState(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressState, field.TypeString, value)
	}
	if _u.mutation.SupplierAddressStateCleared() {
		_spec.ClearField(billinginvoice.FieldSupplierAddressState, field.TypeString)
	}
	if value, ok := _u.mutation.SupplierAddressCity(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressCity, field.TypeString, value)
	}
	if _u.mutation.SupplierAddressCityCleared() {
		_spec.ClearField(billinginvoice.FieldSupplierAddressCity, field.TypeString)
	}
	if value, ok := _u.mutation.SupplierAddressLine1(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressLine1, field.TypeString, value)
	}
	if _u.mutation.SupplierAddressLine1Cleared() {
		_spec.ClearField(billinginvoice.FieldSupplierAddressLine1, field.TypeString)
	}
	if value, ok := _u.mutation.SupplierAddressLine2(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressLine2, field.TypeString, value)
	}
	if _u.mutation.SupplierAddressLine2Cleared() {
		_spec.ClearField(billinginvoice.FieldSupplierAddressLine2, field.TypeString)
	}
	if value, ok := _u.mutation.SupplierAddressPhoneNumber(); ok {
		_spec.SetField(billinginvoice.FieldSupplierAddressPhoneNumber, field.TypeString, value)
	}
	if _u.mutation.SupplierAddressPhoneNumberCleared() {
		_spec.ClearField(billinginvoice.FieldSupplierAddressPhoneNumber, field.TypeString)
	}
	if value, ok := _u.mutation.CustomerAddressCountry(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressCountry, field.TypeString, value)
	}
	if _u.mutation.CustomerAddressCountryCleared() {
		_spec.ClearField(billinginvoice.FieldCustomerAddressCountry, field.TypeString)
	}
	if value, ok := _u.mutation.CustomerAddressPostalCode(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressPostalCode, field.TypeString, value)
	}
	if _u.mutation.CustomerAddressPostalCodeCleared() {
		_spec.ClearField(billinginvoice.FieldCustomerAddressPostalCode, field.TypeString)
	}
	if value, ok := _u.mutation.CustomerAddressState(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressState, field.TypeString, value)
	}
	if _u.mutation.CustomerAddressStateCleared() {
		_spec.ClearField(billinginvoice.FieldCustomerAddressState, field.TypeString)
	}
	if value, ok := _u.mutation.CustomerAddressCity(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressCity, field.TypeString, value)
	}
	if _u.mutation.CustomerAddressCityCleared() {
		_spec.ClearField(billinginvoice.FieldCustomerAddressCity, field.TypeString)
	}
	if value, ok := _u.mutation.CustomerAddressLine1(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressLine1, field.TypeString, value)
	}
	if _u.mutation.CustomerAddressLine1Cleared() {
		_spec.ClearField(billinginvoice.FieldCustomerAddressLine1, field.TypeString)
	}
	if value, ok := _u.mutation.CustomerAddressLine2(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressLine2, field.TypeString, value)
	}
	if _u.mutation.CustomerAddressLine2Cleared() {
		_spec.ClearField(billinginvoice.FieldCustomerAddressLine2, field.TypeString)
	}
	if value, ok := _u.mutation.CustomerAddressPhoneNumber(); ok {
		_spec.SetField(billinginvoice.FieldCustomerAddressPhoneNumber, field.TypeString, value)
	}
	if _u.mutation.CustomerAddressPhoneNumberCleared() {
		_spec.ClearField(billinginvoice.FieldCustomerAddressPhoneNumber, field.TypeString)
	}
	if value, ok := _u.mutation.Amount(); ok {
		_spec.SetField(billinginvoice.FieldAmount, field.TypeOther, value)
	}
	if value, ok := _u.mutation.TaxesTotal(); ok {
		_spec.SetField(billinginvoice.FieldTaxesTotal, field.TypeOther, value)
	}
	if value, ok := _u.mutation.TaxesInclusiveTotal(); ok {
		_spec.SetField(billinginvoice.FieldTaxesInclusiveTotal, field.TypeOther, value)
	}
	if value, ok := _u.mutation.TaxesExclusiveTotal(); ok {
		_spec.SetField(billinginvoice.FieldTaxesExclusiveTotal, field.TypeOther, value)
	}
	if value, ok := _u.mutation.ChargesTotal(); ok {
		_spec.SetField(billinginvoice.FieldChargesTotal, field.TypeOther, value)
	}
	if value, ok := _u.mutation.DiscountsTotal(); ok {
		_spec.SetField(billinginvoice.FieldDiscountsTotal, field.TypeOther, value)
	}
	if value, ok := _u.mutation.Total(); ok {
		_spec.SetField(billinginvoice.FieldTotal, field.TypeOther, value)
	}
	if value, ok := _u.mutation.SupplierName(); ok {
		_spec.SetField(billinginvoice.FieldSupplierName, field.TypeString, value)
	}
	if value, ok := _u.mutation.SupplierTaxCode(); ok {
		_spec.SetField(billinginvoice.FieldSupplierTaxCode, field.TypeString, value)
	}
	if _u.mutation.SupplierTaxCodeCleared() {
		_spec.ClearField(billinginvoice.FieldSupplierTaxCode, field.TypeString)
	}
	if value, ok := _u.mutation.CustomerName(); ok {
		_spec.SetField(billinginvoice.FieldCustomerName, field.TypeString, value)
	}
	if value, ok := _u.mutation.CustomerUsageAttribution(); ok {
		_spec.SetField(billinginvoice.FieldCustomerUsageAttribution, field.TypeJSON, value)
	}
	if value, ok := _u.mutation.Number(); ok {
		_spec.SetField(billinginvoice.FieldNumber, field.TypeString, value)
	}
	if value, ok := _u.mutation.GetType(); ok {
		_spec.SetField(billinginvoice.FieldType, field.TypeEnum, value)
	}
	if value, ok := _u.mutation.Description(); ok {
		_spec.SetField(billinginvoice.FieldDescription, field.TypeString, value)
	}
	if _u.mutation.DescriptionCleared() {
		_spec.ClearField(billinginvoice.FieldDescription, field.TypeString)
	}
	if value, ok := _u.mutation.VoidedAt(); ok {
		_spec.SetField(billinginvoice.FieldVoidedAt, field.TypeTime, value)
	}
	if _u.mutation.VoidedAtCleared() {
		_spec.ClearField(billinginvoice.FieldVoidedAt, field.TypeTime)
	}
	if value, ok := _u.mutation.IssuedAt(); ok {
		_spec.SetField(billinginvoice.FieldIssuedAt, field.TypeTime, value)
	}
	if _u.mutation.IssuedAtCleared() {
		_spec.ClearField(billinginvoice.FieldIssuedAt, field.TypeTime)
	}
	if value, ok := _u.mutation.SentToCustomerAt(); ok {
		_spec.SetField(billinginvoice.FieldSentToCustomerAt, field.TypeTime, value)
	}
	if _u.mutation.SentToCustomerAtCleared() {
		_spec.ClearField(billinginvoice.FieldSentToCustomerAt, field.TypeTime)
	}
	if value, ok := _u.mutation.DraftUntil(); ok {
		_spec.SetField(billinginvoice.FieldDraftUntil, field.TypeTime, value)
	}
	if _u.mutation.DraftUntilCleared() {
		_spec.ClearField(billinginvoice.FieldDraftUntil, field.TypeTime)
	}
	if value, ok := _u.mutation.DueAt(); ok {
		_spec.SetField(billinginvoice.FieldDueAt, field.TypeTime, value)
	}
	if _u.mutation.DueAtCleared() {
		_spec.ClearField(billinginvoice.FieldDueAt, field.TypeTime)
	}
	if value, ok := _u.mutation.Status(); ok {
		_spec.SetField(billinginvoice.FieldStatus, field.TypeEnum, value)
	}
	if value, ok := _u.mutation.StatusDetailsCache(); ok {
		_spec.SetField(billinginvoice.FieldStatusDetailsCache, field.TypeJSON, value)
	}
	if _u.mutation.StatusDetailsCacheCleared() {
		_spec.ClearField(billinginvoice.FieldStatusDetailsCache, field.TypeJSON)
	}
	if value, ok := _u.mutation.InvoicingAppExternalID(); ok {
		_spec.SetField(billinginvoice.FieldInvoicingAppExternalID, field.TypeString, value)
	}
	if _u.mutation.InvoicingAppExternalIDCleared() {
		_spec.ClearField(billinginvoice.FieldInvoicingAppExternalID, field.TypeString)
	}
	if value, ok := _u.mutation.PaymentAppExternalID(); ok {
		_spec.SetField(billinginvoice.FieldPaymentAppExternalID, field.TypeString, value)
	}
	if _u.mutation.PaymentAppExternalIDCleared() {
		_spec.ClearField(billinginvoice.FieldPaymentAppExternalID, field.TypeString)
	}
	if value, ok := _u.mutation.TaxAppExternalID(); ok {
		_spec.SetField(billinginvoice.FieldTaxAppExternalID, field.TypeString, value)
	}
	if _u.mutation.TaxAppExternalIDCleared() {
		_spec.ClearField(billinginvoice.FieldTaxAppExternalID, field.TypeString)
	}
	if value, ok := _u.mutation.PeriodStart(); ok {
		_spec.SetField(billinginvoice.FieldPeriodStart, field.TypeTime, value)
	}
	if _u.mutation.PeriodStartCleared() {
		_spec.ClearField(billinginvoice.FieldPeriodStart, field.TypeTime)
	}
	if value, ok := _u.mutation.PeriodEnd(); ok {
		_spec.SetField(billinginvoice.FieldPeriodEnd, field.TypeTime, value)
	}
	if _u.mutation.PeriodEndCleared() {
		_spec.ClearField(billinginvoice.FieldPeriodEnd, field.TypeTime)
	}
	if value, ok := _u.mutation.CollectionAt(); ok {
		_spec.SetField(billinginvoice.FieldCollectionAt, field.TypeTime, value)
	}
	if _u.mutation.CollectionAtCleared() {
		_spec.ClearField(billinginvoice.FieldCollectionAt, field.TypeTime)
	}
	if _u.mutation.BillingWorkflowConfigCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2O,
			Inverse: true,
			Table:   billinginvoice.BillingWorkflowConfigTable,
			Columns: []string{billinginvoice.BillingWorkflowConfigColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billingworkflowconfig.FieldID, field.TypeString),
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := _u.mutation.BillingWorkflowConfigIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2O,
			Inverse: true,
			Table:   billinginvoice.BillingWorkflowConfigTable,
			Columns: []string{billinginvoice.BillingWorkflowConfigColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billingworkflowconfig.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if _u.mutation.BillingInvoiceLinesCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   billinginvoice.BillingInvoiceLinesTable,
			Columns: []string{billinginvoice.BillingInvoiceLinesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoiceline.FieldID, field.TypeString),
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := _u.mutation.RemovedBillingInvoiceLinesIDs(); len(nodes) > 0 && !_u.mutation.BillingInvoiceLinesCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   billinginvoice.BillingInvoiceLinesTable,
			Columns: []string{billinginvoice.BillingInvoiceLinesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoiceline.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := _u.mutation.BillingInvoiceLinesIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   billinginvoice.BillingInvoiceLinesTable,
			Columns: []string{billinginvoice.BillingInvoiceLinesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoiceline.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if _u.mutation.BillingInvoiceValidationIssuesCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   billinginvoice.BillingInvoiceValidationIssuesTable,
			Columns: []string{billinginvoice.BillingInvoiceValidationIssuesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoicevalidationissue.FieldID, field.TypeString),
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := _u.mutation.RemovedBillingInvoiceValidationIssuesIDs(); len(nodes) > 0 && !_u.mutation.BillingInvoiceValidationIssuesCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   billinginvoice.BillingInvoiceValidationIssuesTable,
			Columns: []string{billinginvoice.BillingInvoiceValidationIssuesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoicevalidationissue.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := _u.mutation.BillingInvoiceValidationIssuesIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   billinginvoice.BillingInvoiceValidationIssuesTable,
			Columns: []string{billinginvoice.BillingInvoiceValidationIssuesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(billinginvoicevalidationissue.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	_node = &BillingInvoice{config: _u.config}
	_spec.Assign = _node.assignValues
	_spec.ScanValues = _node.scanValues
	if err = sqlgraph.UpdateNode(ctx, _u.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{billinginvoice.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	_u.mutation.done = true
	return _node, nil
}
