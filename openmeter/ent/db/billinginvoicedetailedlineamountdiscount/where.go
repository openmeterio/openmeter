// Code generated by ent, DO NOT EDIT.

package billinginvoicedetailedlineamountdiscount

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/alpacahq/alpacadecimal"
	"github.com/openmeterio/openmeter/openmeter/billing"
	"github.com/openmeterio/openmeter/openmeter/ent/db/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldContainsFold(FieldID, id))
}

// Namespace applies equality check predicate on the "namespace" field. It's identical to NamespaceEQ.
func Namespace(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldNamespace, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldDeletedAt, v))
}

// LineID applies equality check predicate on the "line_id" field. It's identical to LineIDEQ.
func LineID(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldLineID, v))
}

// ChildUniqueReferenceID applies equality check predicate on the "child_unique_reference_id" field. It's identical to ChildUniqueReferenceIDEQ.
func ChildUniqueReferenceID(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldChildUniqueReferenceID, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldDescription, v))
}

// InvoicingAppExternalID applies equality check predicate on the "invoicing_app_external_id" field. It's identical to InvoicingAppExternalIDEQ.
func InvoicingAppExternalID(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldInvoicingAppExternalID, v))
}

// Amount applies equality check predicate on the "amount" field. It's identical to AmountEQ.
func Amount(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldAmount, v))
}

// RoundingAmount applies equality check predicate on the "rounding_amount" field. It's identical to RoundingAmountEQ.
func RoundingAmount(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldRoundingAmount, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldType, v))
}

// Quantity applies equality check predicate on the "quantity" field. It's identical to QuantityEQ.
func Quantity(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldQuantity, v))
}

// PreLinePeriodQuantity applies equality check predicate on the "pre_line_period_quantity" field. It's identical to PreLinePeriodQuantityEQ.
func PreLinePeriodQuantity(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldPreLinePeriodQuantity, v))
}

// NamespaceEQ applies the EQ predicate on the "namespace" field.
func NamespaceEQ(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldNamespace, v))
}

// NamespaceNEQ applies the NEQ predicate on the "namespace" field.
func NamespaceNEQ(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNEQ(FieldNamespace, v))
}

// NamespaceIn applies the In predicate on the "namespace" field.
func NamespaceIn(vs ...string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIn(FieldNamespace, vs...))
}

// NamespaceNotIn applies the NotIn predicate on the "namespace" field.
func NamespaceNotIn(vs ...string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotIn(FieldNamespace, vs...))
}

// NamespaceGT applies the GT predicate on the "namespace" field.
func NamespaceGT(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGT(FieldNamespace, v))
}

// NamespaceGTE applies the GTE predicate on the "namespace" field.
func NamespaceGTE(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGTE(FieldNamespace, v))
}

// NamespaceLT applies the LT predicate on the "namespace" field.
func NamespaceLT(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLT(FieldNamespace, v))
}

// NamespaceLTE applies the LTE predicate on the "namespace" field.
func NamespaceLTE(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLTE(FieldNamespace, v))
}

// NamespaceContains applies the Contains predicate on the "namespace" field.
func NamespaceContains(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldContains(FieldNamespace, v))
}

// NamespaceHasPrefix applies the HasPrefix predicate on the "namespace" field.
func NamespaceHasPrefix(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldHasPrefix(FieldNamespace, v))
}

// NamespaceHasSuffix applies the HasSuffix predicate on the "namespace" field.
func NamespaceHasSuffix(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldHasSuffix(FieldNamespace, v))
}

// NamespaceEqualFold applies the EqualFold predicate on the "namespace" field.
func NamespaceEqualFold(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEqualFold(FieldNamespace, v))
}

// NamespaceContainsFold applies the ContainsFold predicate on the "namespace" field.
func NamespaceContainsFold(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldContainsFold(FieldNamespace, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotNull(FieldDeletedAt))
}

// LineIDEQ applies the EQ predicate on the "line_id" field.
func LineIDEQ(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldLineID, v))
}

// LineIDNEQ applies the NEQ predicate on the "line_id" field.
func LineIDNEQ(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNEQ(FieldLineID, v))
}

// LineIDIn applies the In predicate on the "line_id" field.
func LineIDIn(vs ...string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIn(FieldLineID, vs...))
}

// LineIDNotIn applies the NotIn predicate on the "line_id" field.
func LineIDNotIn(vs ...string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotIn(FieldLineID, vs...))
}

// LineIDGT applies the GT predicate on the "line_id" field.
func LineIDGT(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGT(FieldLineID, v))
}

// LineIDGTE applies the GTE predicate on the "line_id" field.
func LineIDGTE(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGTE(FieldLineID, v))
}

// LineIDLT applies the LT predicate on the "line_id" field.
func LineIDLT(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLT(FieldLineID, v))
}

// LineIDLTE applies the LTE predicate on the "line_id" field.
func LineIDLTE(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLTE(FieldLineID, v))
}

// LineIDContains applies the Contains predicate on the "line_id" field.
func LineIDContains(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldContains(FieldLineID, v))
}

// LineIDHasPrefix applies the HasPrefix predicate on the "line_id" field.
func LineIDHasPrefix(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldHasPrefix(FieldLineID, v))
}

// LineIDHasSuffix applies the HasSuffix predicate on the "line_id" field.
func LineIDHasSuffix(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldHasSuffix(FieldLineID, v))
}

// LineIDEqualFold applies the EqualFold predicate on the "line_id" field.
func LineIDEqualFold(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEqualFold(FieldLineID, v))
}

// LineIDContainsFold applies the ContainsFold predicate on the "line_id" field.
func LineIDContainsFold(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldContainsFold(FieldLineID, v))
}

// ChildUniqueReferenceIDEQ applies the EQ predicate on the "child_unique_reference_id" field.
func ChildUniqueReferenceIDEQ(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldChildUniqueReferenceID, v))
}

// ChildUniqueReferenceIDNEQ applies the NEQ predicate on the "child_unique_reference_id" field.
func ChildUniqueReferenceIDNEQ(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNEQ(FieldChildUniqueReferenceID, v))
}

// ChildUniqueReferenceIDIn applies the In predicate on the "child_unique_reference_id" field.
func ChildUniqueReferenceIDIn(vs ...string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIn(FieldChildUniqueReferenceID, vs...))
}

// ChildUniqueReferenceIDNotIn applies the NotIn predicate on the "child_unique_reference_id" field.
func ChildUniqueReferenceIDNotIn(vs ...string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotIn(FieldChildUniqueReferenceID, vs...))
}

// ChildUniqueReferenceIDGT applies the GT predicate on the "child_unique_reference_id" field.
func ChildUniqueReferenceIDGT(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGT(FieldChildUniqueReferenceID, v))
}

// ChildUniqueReferenceIDGTE applies the GTE predicate on the "child_unique_reference_id" field.
func ChildUniqueReferenceIDGTE(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGTE(FieldChildUniqueReferenceID, v))
}

// ChildUniqueReferenceIDLT applies the LT predicate on the "child_unique_reference_id" field.
func ChildUniqueReferenceIDLT(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLT(FieldChildUniqueReferenceID, v))
}

// ChildUniqueReferenceIDLTE applies the LTE predicate on the "child_unique_reference_id" field.
func ChildUniqueReferenceIDLTE(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLTE(FieldChildUniqueReferenceID, v))
}

// ChildUniqueReferenceIDContains applies the Contains predicate on the "child_unique_reference_id" field.
func ChildUniqueReferenceIDContains(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldContains(FieldChildUniqueReferenceID, v))
}

// ChildUniqueReferenceIDHasPrefix applies the HasPrefix predicate on the "child_unique_reference_id" field.
func ChildUniqueReferenceIDHasPrefix(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldHasPrefix(FieldChildUniqueReferenceID, v))
}

// ChildUniqueReferenceIDHasSuffix applies the HasSuffix predicate on the "child_unique_reference_id" field.
func ChildUniqueReferenceIDHasSuffix(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldHasSuffix(FieldChildUniqueReferenceID, v))
}

// ChildUniqueReferenceIDIsNil applies the IsNil predicate on the "child_unique_reference_id" field.
func ChildUniqueReferenceIDIsNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIsNull(FieldChildUniqueReferenceID))
}

// ChildUniqueReferenceIDNotNil applies the NotNil predicate on the "child_unique_reference_id" field.
func ChildUniqueReferenceIDNotNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotNull(FieldChildUniqueReferenceID))
}

// ChildUniqueReferenceIDEqualFold applies the EqualFold predicate on the "child_unique_reference_id" field.
func ChildUniqueReferenceIDEqualFold(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEqualFold(FieldChildUniqueReferenceID, v))
}

// ChildUniqueReferenceIDContainsFold applies the ContainsFold predicate on the "child_unique_reference_id" field.
func ChildUniqueReferenceIDContainsFold(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldContainsFold(FieldChildUniqueReferenceID, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldContainsFold(FieldDescription, v))
}

// ReasonEQ applies the EQ predicate on the "reason" field.
func ReasonEQ(v billing.DiscountReasonType) predicate.BillingInvoiceDetailedLineAmountDiscount {
	vc := v
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldReason, vc))
}

// ReasonNEQ applies the NEQ predicate on the "reason" field.
func ReasonNEQ(v billing.DiscountReasonType) predicate.BillingInvoiceDetailedLineAmountDiscount {
	vc := v
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNEQ(FieldReason, vc))
}

// ReasonIn applies the In predicate on the "reason" field.
func ReasonIn(vs ...billing.DiscountReasonType) predicate.BillingInvoiceDetailedLineAmountDiscount {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIn(FieldReason, v...))
}

// ReasonNotIn applies the NotIn predicate on the "reason" field.
func ReasonNotIn(vs ...billing.DiscountReasonType) predicate.BillingInvoiceDetailedLineAmountDiscount {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotIn(FieldReason, v...))
}

// InvoicingAppExternalIDEQ applies the EQ predicate on the "invoicing_app_external_id" field.
func InvoicingAppExternalIDEQ(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldInvoicingAppExternalID, v))
}

// InvoicingAppExternalIDNEQ applies the NEQ predicate on the "invoicing_app_external_id" field.
func InvoicingAppExternalIDNEQ(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNEQ(FieldInvoicingAppExternalID, v))
}

// InvoicingAppExternalIDIn applies the In predicate on the "invoicing_app_external_id" field.
func InvoicingAppExternalIDIn(vs ...string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIn(FieldInvoicingAppExternalID, vs...))
}

// InvoicingAppExternalIDNotIn applies the NotIn predicate on the "invoicing_app_external_id" field.
func InvoicingAppExternalIDNotIn(vs ...string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotIn(FieldInvoicingAppExternalID, vs...))
}

// InvoicingAppExternalIDGT applies the GT predicate on the "invoicing_app_external_id" field.
func InvoicingAppExternalIDGT(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGT(FieldInvoicingAppExternalID, v))
}

// InvoicingAppExternalIDGTE applies the GTE predicate on the "invoicing_app_external_id" field.
func InvoicingAppExternalIDGTE(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGTE(FieldInvoicingAppExternalID, v))
}

// InvoicingAppExternalIDLT applies the LT predicate on the "invoicing_app_external_id" field.
func InvoicingAppExternalIDLT(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLT(FieldInvoicingAppExternalID, v))
}

// InvoicingAppExternalIDLTE applies the LTE predicate on the "invoicing_app_external_id" field.
func InvoicingAppExternalIDLTE(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLTE(FieldInvoicingAppExternalID, v))
}

// InvoicingAppExternalIDContains applies the Contains predicate on the "invoicing_app_external_id" field.
func InvoicingAppExternalIDContains(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldContains(FieldInvoicingAppExternalID, v))
}

// InvoicingAppExternalIDHasPrefix applies the HasPrefix predicate on the "invoicing_app_external_id" field.
func InvoicingAppExternalIDHasPrefix(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldHasPrefix(FieldInvoicingAppExternalID, v))
}

// InvoicingAppExternalIDHasSuffix applies the HasSuffix predicate on the "invoicing_app_external_id" field.
func InvoicingAppExternalIDHasSuffix(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldHasSuffix(FieldInvoicingAppExternalID, v))
}

// InvoicingAppExternalIDIsNil applies the IsNil predicate on the "invoicing_app_external_id" field.
func InvoicingAppExternalIDIsNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIsNull(FieldInvoicingAppExternalID))
}

// InvoicingAppExternalIDNotNil applies the NotNil predicate on the "invoicing_app_external_id" field.
func InvoicingAppExternalIDNotNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotNull(FieldInvoicingAppExternalID))
}

// InvoicingAppExternalIDEqualFold applies the EqualFold predicate on the "invoicing_app_external_id" field.
func InvoicingAppExternalIDEqualFold(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEqualFold(FieldInvoicingAppExternalID, v))
}

// InvoicingAppExternalIDContainsFold applies the ContainsFold predicate on the "invoicing_app_external_id" field.
func InvoicingAppExternalIDContainsFold(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldContainsFold(FieldInvoicingAppExternalID, v))
}

// AmountEQ applies the EQ predicate on the "amount" field.
func AmountEQ(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldAmount, v))
}

// AmountNEQ applies the NEQ predicate on the "amount" field.
func AmountNEQ(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNEQ(FieldAmount, v))
}

// AmountIn applies the In predicate on the "amount" field.
func AmountIn(vs ...alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIn(FieldAmount, vs...))
}

// AmountNotIn applies the NotIn predicate on the "amount" field.
func AmountNotIn(vs ...alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotIn(FieldAmount, vs...))
}

// AmountGT applies the GT predicate on the "amount" field.
func AmountGT(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGT(FieldAmount, v))
}

// AmountGTE applies the GTE predicate on the "amount" field.
func AmountGTE(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGTE(FieldAmount, v))
}

// AmountLT applies the LT predicate on the "amount" field.
func AmountLT(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLT(FieldAmount, v))
}

// AmountLTE applies the LTE predicate on the "amount" field.
func AmountLTE(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLTE(FieldAmount, v))
}

// RoundingAmountEQ applies the EQ predicate on the "rounding_amount" field.
func RoundingAmountEQ(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldRoundingAmount, v))
}

// RoundingAmountNEQ applies the NEQ predicate on the "rounding_amount" field.
func RoundingAmountNEQ(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNEQ(FieldRoundingAmount, v))
}

// RoundingAmountIn applies the In predicate on the "rounding_amount" field.
func RoundingAmountIn(vs ...alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIn(FieldRoundingAmount, vs...))
}

// RoundingAmountNotIn applies the NotIn predicate on the "rounding_amount" field.
func RoundingAmountNotIn(vs ...alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotIn(FieldRoundingAmount, vs...))
}

// RoundingAmountGT applies the GT predicate on the "rounding_amount" field.
func RoundingAmountGT(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGT(FieldRoundingAmount, v))
}

// RoundingAmountGTE applies the GTE predicate on the "rounding_amount" field.
func RoundingAmountGTE(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGTE(FieldRoundingAmount, v))
}

// RoundingAmountLT applies the LT predicate on the "rounding_amount" field.
func RoundingAmountLT(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLT(FieldRoundingAmount, v))
}

// RoundingAmountLTE applies the LTE predicate on the "rounding_amount" field.
func RoundingAmountLTE(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLTE(FieldRoundingAmount, v))
}

// RoundingAmountIsNil applies the IsNil predicate on the "rounding_amount" field.
func RoundingAmountIsNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIsNull(FieldRoundingAmount))
}

// RoundingAmountNotNil applies the NotNil predicate on the "rounding_amount" field.
func RoundingAmountNotNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotNull(FieldRoundingAmount))
}

// SourceDiscountIsNil applies the IsNil predicate on the "source_discount" field.
func SourceDiscountIsNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIsNull(FieldSourceDiscount))
}

// SourceDiscountNotNil applies the NotNil predicate on the "source_discount" field.
func SourceDiscountNotNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotNull(FieldSourceDiscount))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLTE(FieldType, v))
}

// TypeContains applies the Contains predicate on the "type" field.
func TypeContains(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldContains(FieldType, v))
}

// TypeHasPrefix applies the HasPrefix predicate on the "type" field.
func TypeHasPrefix(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldHasPrefix(FieldType, v))
}

// TypeHasSuffix applies the HasSuffix predicate on the "type" field.
func TypeHasSuffix(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldHasSuffix(FieldType, v))
}

// TypeIsNil applies the IsNil predicate on the "type" field.
func TypeIsNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIsNull(FieldType))
}

// TypeNotNil applies the NotNil predicate on the "type" field.
func TypeNotNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotNull(FieldType))
}

// TypeEqualFold applies the EqualFold predicate on the "type" field.
func TypeEqualFold(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEqualFold(FieldType, v))
}

// TypeContainsFold applies the ContainsFold predicate on the "type" field.
func TypeContainsFold(v string) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldContainsFold(FieldType, v))
}

// QuantityEQ applies the EQ predicate on the "quantity" field.
func QuantityEQ(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldQuantity, v))
}

// QuantityNEQ applies the NEQ predicate on the "quantity" field.
func QuantityNEQ(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNEQ(FieldQuantity, v))
}

// QuantityIn applies the In predicate on the "quantity" field.
func QuantityIn(vs ...alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIn(FieldQuantity, vs...))
}

// QuantityNotIn applies the NotIn predicate on the "quantity" field.
func QuantityNotIn(vs ...alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotIn(FieldQuantity, vs...))
}

// QuantityGT applies the GT predicate on the "quantity" field.
func QuantityGT(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGT(FieldQuantity, v))
}

// QuantityGTE applies the GTE predicate on the "quantity" field.
func QuantityGTE(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGTE(FieldQuantity, v))
}

// QuantityLT applies the LT predicate on the "quantity" field.
func QuantityLT(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLT(FieldQuantity, v))
}

// QuantityLTE applies the LTE predicate on the "quantity" field.
func QuantityLTE(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLTE(FieldQuantity, v))
}

// QuantityIsNil applies the IsNil predicate on the "quantity" field.
func QuantityIsNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIsNull(FieldQuantity))
}

// QuantityNotNil applies the NotNil predicate on the "quantity" field.
func QuantityNotNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotNull(FieldQuantity))
}

// PreLinePeriodQuantityEQ applies the EQ predicate on the "pre_line_period_quantity" field.
func PreLinePeriodQuantityEQ(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldEQ(FieldPreLinePeriodQuantity, v))
}

// PreLinePeriodQuantityNEQ applies the NEQ predicate on the "pre_line_period_quantity" field.
func PreLinePeriodQuantityNEQ(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNEQ(FieldPreLinePeriodQuantity, v))
}

// PreLinePeriodQuantityIn applies the In predicate on the "pre_line_period_quantity" field.
func PreLinePeriodQuantityIn(vs ...alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIn(FieldPreLinePeriodQuantity, vs...))
}

// PreLinePeriodQuantityNotIn applies the NotIn predicate on the "pre_line_period_quantity" field.
func PreLinePeriodQuantityNotIn(vs ...alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotIn(FieldPreLinePeriodQuantity, vs...))
}

// PreLinePeriodQuantityGT applies the GT predicate on the "pre_line_period_quantity" field.
func PreLinePeriodQuantityGT(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGT(FieldPreLinePeriodQuantity, v))
}

// PreLinePeriodQuantityGTE applies the GTE predicate on the "pre_line_period_quantity" field.
func PreLinePeriodQuantityGTE(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldGTE(FieldPreLinePeriodQuantity, v))
}

// PreLinePeriodQuantityLT applies the LT predicate on the "pre_line_period_quantity" field.
func PreLinePeriodQuantityLT(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLT(FieldPreLinePeriodQuantity, v))
}

// PreLinePeriodQuantityLTE applies the LTE predicate on the "pre_line_period_quantity" field.
func PreLinePeriodQuantityLTE(v alpacadecimal.Decimal) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldLTE(FieldPreLinePeriodQuantity, v))
}

// PreLinePeriodQuantityIsNil applies the IsNil predicate on the "pre_line_period_quantity" field.
func PreLinePeriodQuantityIsNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldIsNull(FieldPreLinePeriodQuantity))
}

// PreLinePeriodQuantityNotNil applies the NotNil predicate on the "pre_line_period_quantity" field.
func PreLinePeriodQuantityNotNil() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.FieldNotNull(FieldPreLinePeriodQuantity))
}

// HasBillingInvoiceDetailedLine applies the HasEdge predicate on the "billing_invoice_detailed_line" edge.
func HasBillingInvoiceDetailedLine() predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, BillingInvoiceDetailedLineTable, BillingInvoiceDetailedLineColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasBillingInvoiceDetailedLineWith applies the HasEdge predicate on the "billing_invoice_detailed_line" edge with a given conditions (other predicates).
func HasBillingInvoiceDetailedLineWith(preds ...predicate.BillingInvoiceDetailedLine) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(func(s *sql.Selector) {
		step := newBillingInvoiceDetailedLineStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.BillingInvoiceDetailedLineAmountDiscount) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.BillingInvoiceDetailedLineAmountDiscount) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.BillingInvoiceDetailedLineAmountDiscount) predicate.BillingInvoiceDetailedLineAmountDiscount {
	return predicate.BillingInvoiceDetailedLineAmountDiscount(sql.NotPredicates(p))
}
